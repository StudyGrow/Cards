{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/cards-overview/cards-overview.component.ts","webpack:///src/app/components/cards-overview/cards-overview.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/change-profile/change-profile.component.ts","webpack:///src/app/components/change-profile/change-profile.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/notifications/notifications.component.ts","webpack:///src/app/components/notifications/notifications.component.html","webpack:///src/app/components/overview/overview.component.ts","webpack:///src/app/components/overview/overview.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/signup-form/signup-form.component.ts","webpack:///src/app/components/signup-form/signup-form.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/models/Notification.ts","webpack:///src/app/models/User.ts","webpack:///src/app/models/Vorlesung.ts","webpack:///src/app/routes/about/about.component.ts","webpack:///src/app/routes/about/about.component.html","webpack:///src/app/routes/account-page/account-page.component.ts","webpack:///src/app/routes/account-page/account-page.component.html","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/error-page/error-page.component.ts","webpack:///src/app/routes/error-page/error-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/routes/login-page/login-page.component.ts","webpack:///src/app/routes/login-page/login-page.component.html","webpack:///src/app/routes/signup-page/signup-page.component.ts","webpack:///src/app/routes/signup-page/signup-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/config.ts","webpack:///src/app/services/lectures.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","router","titleService","setTitle","scrollToTop","window","setInterval","pos","pageYOffset","scrollTo","clearInterval","selector","templateUrl","styleUrls","MyHammerConfig","overrides","pan","direction","Hammer","DIRECTION_All","swipe","DIRECTION_VERTICAL","element","mc","touchAction","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","recognizers","Swipe","DIRECTION_HORIZONTAL","AppModule","provide","useValue","useClass","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","lectureService","subscriptions$","sub","getCurrentLecture","subscribe","lecture","push","forEach","unsubscribe","f","newCard","value","thema","content","abrv","addCard","res","reset","setTyping","color","length","elem","onSubmit","inField","resetNav","AddLectureFormComponent","statesService","newLecture","name","toLowerCase","addLecture","response","field","max","SafeHtmlPipe","sanitized","bypassSecurityTrustHtml","CardComponent","cs","styleAppend","parsed","isCollapsed","getActiveCardIndex","change","hide","card","latex","parse","cardContent","generator","hyphenate","doc","htmlDocument","body","innerHTML","static","CardsOverviewComponent","userService","cards","cards$","getUserInfo","pipe","info","CarouselComponent","event","carousel","previousSlide","nextSlide","activeSlide","getUserId","userId","lecture$","getCards","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","selectSlide","n","toString","rand","count","Math","floor","random","slideEvent","parseInt","relatedTarget","setActiveCardIndex","currCard","authorId","showRandomCard","enableEdit","toggleAddView","ChangeProfileComponent","user","fileToUpload","surname","userInfo","form","updateAccount","updatePassword","file","formData","FormData","append","uploadFile","success","password","password2","s1","s2","checkEmail","email","username","test","handleFileInput","changeAccount","changePassword","FooterComponent","pageOffset","innerHeight","duration","animations","LecturesComponent","lectures$","getAllLectures","LoginFormComponent","check","login","submit","NavBarComponent","notification","loading","cardsSub","setPageTitle","authentication","val","loggedIn","getLoadingState","events","url","match","clearAccountInfo","clearNotifications","getNotifications","notifs","notifications","i","removeNotification","notif","type","currentTitle","logout","scale","NotificationsComponent","OverviewComponent","user$","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","setHideSuggestions","uInput","regex","RegExp","title","preventDefault","setNewCardIndex","findMatches","SignupFormComponent","createAccount","UpdateCardFormComponent","dialog","activeCardIndex","cardCopy","cardIndex","updateCard","resp","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","setLoadingState","close","onNoClick","cancel","Card","Notification","t","m","message","HttpError","c","InfoMessage","SuccessMessage","User","Vorlesung","AboutComponent","AccountPageComponent","cardCount","CardsPageComponent","route","stateServie","inTypingField","key","goNext","goPrev","vlAbrv","snapshot","paramMap","get","getTyping","ErrorPageComponent","HomePageComponent","LoginPageComponent","SignupPageComponent","CardsService","http","newCardIndex$","activeCardIndex$","config","split","asObservable","next","urlBase","observe","error","handleErrors","put","headers","getValue","setTimeout","post","_id","providedIn","HttpConfig","fileHeaders","Headers","LecturesService","httpOptions","addErrors","lectures","err","console","log","status","addNotification","navigateByUrl","NotificationsService","notifications$","splice","types","StatesService","formMode$","loading$","hideSgtn$","typing$","lastFormMode","UserService","userId$","setLogin","setUser","navigate","removeLoginInfo","accountInfo$","date","Date","creationDate","environment","production","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nimport { AboutComponent } from \"./routes/about/about.component\";\r\nimport { AccountPageComponent } from \"./routes/account-page/account-page.component\";\r\nimport { UserService as AuthGuard } from \"./services/user.service\";\r\nimport { OverviewComponent } from \"./components/overview/overview.component\";\r\nimport { ChangeProfileComponent } from \"./components/change-profile/change-profile.component\";\r\nimport { CardsOverviewComponent } from \"./components/cards-overview/cards-overview.component\";\r\nimport { ErrorPageComponent } from \"./routes/error-page/error-page.component\";\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomePageComponent },\r\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\r\n  { path: \"login\", component: LoginPageComponent },\r\n  { path: \"signup\", component: SignupPageComponent },\r\n  { path: \"about\", component: AboutComponent },\r\n\r\n  {\r\n    path: \"account\",\r\n    component: AccountPageComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: \"\", redirectTo: \"overview\", pathMatch: \"full\" },\r\n      { path: \"overview\", component: OverviewComponent },\r\n      { path: \"manage\", component: ChangeProfileComponent },\r\n      { path: \"cards\", component: CardsOverviewComponent },\r\n    ],\r\n  },\r\n  { path: \"**\", component: ErrorPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  public constructor(private router: Router, private titleService: Title) {\r\n    this.titleService.setTitle(\"Home\");\r\n  }\r\n  BackToTop() {\r\n    let scrollToTop = window.setInterval(() => {\r\n      let pos = window.pageYOffset;\r\n      if (pos > 0) {\r\n        window.scrollTo(0, pos - 20); // how far to scroll on each step\r\n      } else {\r\n        window.clearInterval(scrollToTop);\r\n      }\r\n    }, 16);\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule, Injectable, LOCALE_ID } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport {\r\n  CarouselModule,\r\n  WavesModule,\r\n  CollapseModule,\r\n  TooltipModule,\r\n} from \"angular-bootstrap-md\";\r\n\r\n//Services\r\nimport { StatesService } from \"./services/states.service\";\r\n\r\n//Material Modules\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n//Gestures\r\nimport {\r\n  HammerModule,\r\n  HammerGestureConfig,\r\n  HAMMER_GESTURE_CONFIG,\r\n} from \"@angular/platform-browser\";\r\n\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\r\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\r\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\r\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\r\nimport { CardComponent } from \"./components/card/card.component\";\r\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\r\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { FooterComponent } from \"./components/footer/footer.component\";\r\nimport { AboutComponent } from \"./routes/about/about.component\";\r\nimport { AccountPageComponent } from \"./routes/account-page/account-page.component\";\r\nimport { OverviewComponent } from \"./components/overview/overview.component\";\r\nimport { ChangeProfileComponent } from \"./components/change-profile/change-profile.component\";\r\nimport { CardsOverviewComponent } from \"./components/cards-overview/cards-overview.component\";\r\nimport { NotificationsComponent } from \"./components/notifications/notifications.component\";\r\n\r\n//Localization\r\nimport { registerLocaleData } from \"@angular/common\";\r\nimport de from \"@angular/common/locales/de\";\r\nregisterLocaleData(de);\r\n\r\n//Pipes\r\nimport { SafeHtmlPipe } from \"./components/card/card.component\";\r\nimport { ErrorPageComponent } from \"./routes/error-page/error-page.component\";\r\n\r\ndeclare var Hammer: any;\r\n//Config to allow swipe gestures on carousel\r\n@Injectable()\r\nexport class MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    pan: { direction: Hammer.DIRECTION_All },\r\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\r\n  };\r\n\r\n  buildHammer(element: HTMLElement) {\r\n    const mc = new Hammer(element, {\r\n      touchAction: \"auto\",\r\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\r\n        ? Hammer.PointerEventInput\r\n        : Hammer.TouchInput,\r\n      recognizers: [\r\n        [\r\n          Hammer.Swipe,\r\n          {\r\n            direction: Hammer.DIRECTION_HORIZONTAL,\r\n          },\r\n        ],\r\n      ],\r\n    });\r\n    return mc;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SearchBarComponent,\r\n    AddCardFormComponent,\r\n    CarouselComponent,\r\n    CardComponent,\r\n    AddLectureFormComponent,\r\n    LecturesComponent,\r\n    HomePageComponent,\r\n    CardsPageComponent,\r\n    UpdateCardFormComponent,\r\n    LoginPageComponent,\r\n    LoginFormComponent,\r\n    SignupPageComponent,\r\n    SignupFormComponent,\r\n    FooterComponent,\r\n    AboutComponent,\r\n    AccountPageComponent,\r\n    OverviewComponent,\r\n    ChangeProfileComponent,\r\n    CardsOverviewComponent,\r\n    NotificationsComponent,\r\n    SafeHtmlPipe,\r\n    ErrorPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    HammerModule,\r\n    CollapseModule,\r\n    TooltipModule,\r\n    StoreModule.forRoot({}, {}),\r\n  ],\r\n  providers: [\r\n    StatesService,\r\n    { provide: LOCALE_ID, useValue: \"de\" },\r\n\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: MyHammerConfig,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { LecturesService } from \"../../services/lectures.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { Observable, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-add-card-form\",\r\n  templateUrl: \"./add-card-form.component.html\",\r\n  styleUrls: [\"./add-card-form.component.css\"],\r\n})\r\nexport class AddCardFormComponent implements OnInit, OnDestroy {\r\n  lecture: Vorlesung;\r\n  newCard: Card;\r\n  hidden: boolean;\r\n  Contentlength: number;\r\n  themaLength: number;\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService,\r\n    private lectureService: LecturesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let sub = this.lectureService\r\n      .getCurrentLecture()\r\n      .subscribe((lecture) => (this.lecture = lecture));\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  setStyle() {}\r\n  onSubmit(f: NgForm) {\r\n    this.newCard = new Card(\r\n      f.value.thema,\r\n      f.value.content,\r\n      this.lecture.abrv,\r\n      0\r\n    );\r\n    let sub = this.cardsService.addCard(this.newCard).subscribe((res) => {\r\n      f.reset();\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  inField() {\r\n    this.stateService.setTyping(true);\r\n  }\r\n  resetNav() {\r\n    this.stateService.setTyping(false);\r\n  }\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Frage</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        ngModel\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Antwort</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        ngModel\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(content, thema)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { LecturesService } from \"../../services/lectures.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Subscription } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-add-lecture-form\",\r\n  templateUrl: \"./add-lecture-form.component.html\",\r\n  styleUrls: [\"./add-lecture-form.component.css\"],\r\n})\r\nexport class AddLectureFormComponent implements OnInit {\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private lecture: LecturesService,\r\n    private statesService: StatesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  onSubmit(f: NgForm) {\r\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv.toLowerCase());\r\n    let sub = this.lecture.addLecture(newLecture).subscribe((response) => {\r\n      f.reset();\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  isDisabled(name, abrv) {\r\n    if (!name.value || !abrv.value) {\r\n      return true;\r\n    } else {\r\n      return (\r\n        abrv.value.length == 0 ||\r\n        abrv.value.length < 3 ||\r\n        abrv.value.length > 7 ||\r\n        name.value.length == 0 ||\r\n        name.value.length > 60\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div id=\"addLecture\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Vorlesung hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Vorlesungsname</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Datenstrukturen und Algorithmen\"\r\n        minlength=\"3\"\r\n        required\r\n        #name=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\r\n        >{{ getLength(name) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"abrv\">Abkürzung</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"abrv\"\r\n        name=\"abrv\"\r\n        required\r\n        #abrv=\"ngModel\"\r\n        ngModel\r\n        placeholder=\"Dsal\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\r\n        >{{ getLength(abrv) }}/7\r\n      </small>\r\n    </div>\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(name, abrv)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnDestroy,\r\n  Pipe,\r\n  PipeTransform,\r\n} from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { parse, HtmlGenerator } from \"latex.js/dist/latex.js\";\r\n\r\n@Pipe({ name: \"safeHtml\" })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value) {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.css\"],\r\n})\r\nexport class CardComponent implements OnInit, OnDestroy {\r\n  @Input() card: Card;\r\n  @ViewChild(\"test\", { static: true }) content;\r\n  subscriptions$: Subscription[] = [];\r\n\r\n  styleAppend = `<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/css/katex.css\"><link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/css/article.css\"><script src=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/dist/js/base.js\"></script>`;\r\n  parsed: any = [];\r\n\r\n  constructor(private cs: CardsService) {}\r\n  public isCollapsed = true;\r\n  ngOnInit(): void {\r\n    let sub = this.cs.getActiveCardIndex().subscribe((change) => {\r\n      //hides te card content when carousel slides\r\n      this.content.hide();\r\n    });\r\n    if (this.card.latex != 0) {\r\n      this.parse(this.card.content);\r\n    } else {\r\n      this.parsed.push(this.card.content);\r\n    }\r\n    this.subscriptions$.push(sub);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  parse(cardContent: any) {\r\n    var latex = cardContent;\r\n    let generator = new HtmlGenerator({ hyphenate: false });\r\n    let doc = parse(latex, { generator: generator }).htmlDocument();\r\n    latex = this.styleAppend + doc.body.innerHTML;\r\n    this.parsed.push(latex);\r\n  }\r\n}\r\n","<div class=\"card\" id=\"`{{ card._id }}`\">\r\n  <div class=\"card-header\">\r\n    {{ card.thema }}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <button\r\n      mdbBtn\r\n      color=\"primary\"\r\n      class=\"btn btn-light\"\r\n      type=\"button\"\r\n      (click)=\"test.toggle()\"\r\n      mdbWavesEffect\r\n    >\r\n      Mehr dazu\r\n      <i class=\"fas fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"\" mdbCollapse #test>\r\n      <pre lang=\"de\">\r\n          <div  [innerHtml]=\"parsed[0] | safeHtml\"></div>\r\n      </pre>\r\n    </div>\r\n    <p *ngIf=\"card.authorName\" class=\"card-text\">\r\n      <small class=\"text-muted float-right\"\r\n        >Ersteller: {{ card.authorName }}</small\r\n      >\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Card } from \"src/app/models/Card\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-cards-overview\",\r\n  templateUrl: \"./cards-overview.component.html\",\r\n  styleUrls: [\"./cards-overview.component.css\"],\r\n})\r\nexport class CardsOverviewComponent implements OnInit {\r\n  subscriptions$: Subscription[] = [];\r\n  public cards: Card[] = [];\r\n  cards$: Observable<Card[]>;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cards$ = this.userService.getUserInfo().pipe(\r\n      map((info) => {\r\n        if (info) {\r\n          return info.cards;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"list-group\" *ngIf=\"cards$ | async as cards\">\r\n  <a *ngFor=\"let card of cards\" class=\"list-group-item list-group-item-action\">\r\n    <div class=\"d-flex w-100 justify-content-between\">\r\n      <h5 class=\"mb-1\">{{ card.thema }}</h5>\r\n      <small>{{ card.date | date: \"longDate\":\"de\" }}</small>\r\n    </div>\r\n    <p class=\"mb-1\">\r\n      {{ card.content }}\r\n    </p>\r\n  </a>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\n\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { UserService } from \"../../services/user.service\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { LecturesService } from \"src/app/services/lectures.service\";\r\n@Component({\r\n  selector: \"app-carousel\",\r\n  templateUrl: \"./carousel.component.html\",\r\n  styleUrls: [\"./carousel.component.css\"],\r\n})\r\nexport class CarouselComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\r\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\r\n    this.carousel.previousSlide();\r\n  }\r\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\r\n    this.carousel.nextSlide();\r\n  }\r\n  cards: Card[]; //array of all the cards\r\n  activeSlide: number;\r\n  lecture$: Observable<Vorlesung>;\r\n  addComponentHidden: boolean;\r\n  formShow: boolean;\r\n  formMode: string;\r\n  private userId: string;\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private lectureService: LecturesService,\r\n    private stateService: StatesService,\r\n    private cardsService: CardsService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activeSlide = 0;\r\n    let sub = this.userService\r\n      .getUserId()\r\n      .subscribe((userId) => (this.userId = userId));\r\n    this.subscriptions$.push(sub);\r\n    this.lecture$ = this.lectureService.getCurrentLecture();\r\n\r\n    sub = this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\r\n    this.subscriptions$.push(sub);\r\n    this.stateService.setFormMode(\"none\");\r\n    sub = this.stateService.getFormMode().subscribe((mode) => {\r\n      this.formShow = mode == \"add\";\r\n      this.formMode = mode;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n\r\n    sub = this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      if (this.carousel) {\r\n        this.activeSlide = index;\r\n        this.carousel.selectSlide(index);\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  toggleAddView(): void {\r\n    if (this.formMode != \"edit\") {\r\n      if (this.formMode == \"add\") {\r\n        this.stateService.setFormMode(\"none\");\r\n      } else {\r\n        this.stateService.setFormMode(\"add\");\r\n      }\r\n    }\r\n  }\r\n  enableEdit() {\r\n    this.stateService.setFormMode(\"edit\");\r\n  }\r\n\r\n  setClass() {\r\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\r\n  }\r\n\r\n  selectSlide(n: number) {\r\n    this.carousel.selectSlide(n.toString());\r\n  }\r\n  showRandomCard() {\r\n    var rand: number = this.activeSlide;\r\n    var count = 0;\r\n    while (count < 5 && rand == this.activeSlide) {\r\n      //calculate a new random index\r\n      count++;\r\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\r\n    }\r\n    this.carousel.selectSlide(rand.toString());\r\n  }\r\n  goToPrev() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.previousSlide();\r\n    }\r\n  }\r\n  goToNext() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.nextSlide();\r\n    }\r\n  }\r\n  onSlide(slideEvent) {\r\n    this.activeSlide = parseInt(slideEvent.relatedTarget);\r\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\r\n  }\r\n  isDisabled() {\r\n    if (this.formMode == \"edit\" || !this.cards || this.cards.length == 0) {\r\n      return true;\r\n    } else {\r\n      let currCard = this.cards[this.activeSlide]; //get the card that is currently showing\r\n\r\n      if (!currCard.authorId || currCard.authorId.length == 0) {\r\n        return false;\r\n      }\r\n      if (!this.userId || currCard.authorId !== this.userId) {\r\n        //there is an author an it is not the user\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<h1 id=\"vorlesung\">{{ (lecture$ | async)?.name }}</h1>\r\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"rand\"\r\n    placement=\"top\"\r\n    ngbTooltip=\"Zufall\"\r\n    (click)=\"showRandomCard()\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n  >\r\n    <div class=\"fas fa-random\"></div>\r\n  </button>\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"editCard\"\r\n    type=\"button\"\r\n    placement=\"top\"\r\n    [disabled]=\"isDisabled()\"\r\n    (click)=\"enableEdit()\"\r\n    ngbTooltip=\"Bearbeiten\"\r\n  >\r\n    <div class=\"fas fa-pen\"></div>\r\n  </button>\r\n\r\n  <button\r\n    [ngClass]=\"setClass()\"\r\n    id=\"toggleAdd\"\r\n    type=\"button\"\r\n    data-toggle=\"button\"\r\n    (click)=\"toggleAddView()\"\r\n    placement=\"top\"\r\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\r\n  <a *ngIf=\"cards.length > 0\" (click)=\"goToPrev()\">\r\n    <span class=\"fas fa-chevron-left\"></span>\r\n  </a>\r\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\r\n    <mdb-carousel\r\n      (activeSlideChange)=\"onSlide($event)\"\r\n      #mycarousel\r\n      [(activeSlideIndex)]=\"activeSlide\"\r\n      [animation]=\"'slide'\"\r\n      [isControls]=\"false\"\r\n      [allowSwipe]=\"true\"\r\n      [interval]=\"'0'\"\r\n      ><ng-container *ngFor=\"let card of cards; index as i\">\r\n        <mdb-carousel-item [id]=\"i.toString()\">\r\n          <app-card [card]=\"card\"></app-card>\r\n        </mdb-carousel-item>\r\n      </ng-container>\r\n    </mdb-carousel>\r\n  </div>\r\n  <a *ngIf=\"cards.length > 0\" (click)=\"goToNext()\">\r\n    <span class=\"fas fa-chevron-right\"></span>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\n\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { UserInfo } from \"src/app/models/userInfo\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Subscription } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-change-profile\",\r\n  templateUrl: \"./change-profile.component.html\",\r\n  styleUrls: [\"./change-profile.component.css\"],\r\n})\r\nexport class ChangeProfileComponent implements OnInit, OnDestroy {\r\n  public userInfo: UserInfo;\r\n  subscriptions$: Subscription[] = [];\r\n  public user = new User(\"\", \"\");\r\n  fileToUpload: File = null;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user.name = \"\";\r\n    this.user.surname = \"\";\r\n    let sub = this.userService.getUserInfo().subscribe((info) => {\r\n      this.userInfo = info;\r\n      if (info && info.user) {\r\n        this.user = info.user;\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  changeAccount(form: NgForm) {\r\n    this.userService.updateAccount(form.value);\r\n  }\r\n  changePassword(form: NgForm) {\r\n    let sub = this.userService.updatePassword(form.value).subscribe((res) => {\r\n      form.reset();\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  handleFileInput(file: File) {\r\n    const formData: FormData = new FormData();\r\n    this.fileToUpload = file;\r\n    formData.append(\"fileKey\", this.fileToUpload);\r\n    this.userService.uploadFile(formData).subscribe((success) => {});\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  match(s1: string, s2: string) {\r\n    return s1 && s1.length > 7 && s1 === s2;\r\n  }\r\n  validate(form: NgForm) {\r\n    if (\r\n      this.checkEmail(form.value.email) &&\r\n      form.value.username &&\r\n      form.value.username.length >= 5\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","<h2>Profilbild ändern</h2>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-4 col-xs-12\">\r\n    <img src=\"assets/profile.svg\" alt=\"Profile picture\" />\r\n  </div>\r\n  <div class=\"col-sm-8 col-xs-12\">\r\n    <div class=\"input-group\">\r\n      <div class=\"custom-file\">\r\n        <form (change)=\"handleFileInput($event.target.files)\">\r\n          <input\r\n            type=\"file\"\r\n            class=\"custom-file-input\"\r\n            id=\"inputGroupFile01\"\r\n            aria-describedby=\"inputGroupFileAddon01\"\r\n          />\r\n        </form>\r\n        <label class=\"custom-file-label\" for=\"inputGroupFile01\"\r\n          >Choose file</label\r\n        >\r\n      </div>\r\n    </div>\r\n    <small class=\"form-text\">Die maximale Größe ist 200KB </small>\r\n  </div>\r\n</div>\r\n\r\n<hr />\r\n<h2>Accountdaten ändern</h2>\r\n<form #form=\"ngForm\" (ngSubmit)=\"changeAccount(form)\" novalidate>\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Vorname</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      aria-describedby=\"nameHelp\"\r\n      #name=\"ngModel\"\r\n      [(ngModel)]=\"user.name\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"surname\">Nachname</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"surname\"\r\n      id=\"surname\"\r\n      aria-describedby=\"surnameHelp\"\r\n      #surname=\"ngModel\"\r\n      [(ngModel)]=\"user.surname\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Benutzername</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      id=\"username\"\r\n      name=\"username\"\r\n      required\r\n      maxlength=\"20\"\r\n      aria-describedby=\"nameHelp\"\r\n      #username=\"ngModel\"\r\n      [(ngModel)]=\"user.username\"\r\n    />\r\n    <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email Adresse</label>\r\n    <input\r\n      type=\"email\"\r\n      class=\"form-control\"\r\n      name=\"email\"\r\n      id=\"email\"\r\n      aria-describedby=\"emailHelp\"\r\n      required\r\n      #email=\"ngModel\"\r\n      [(ngModel)]=\"user.email\"\r\n    />\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!validate(form)\">\r\n    Aktualisieren\r\n  </button>\r\n</form>\r\n\r\n<hr />\r\n<h2>Passwort ändern</h2>\r\n<form #pwform=\"ngForm\" (ngSubmit)=\"changePassword(pwform)\" novalidate>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Neues Passwort</label>\r\n    <input\r\n      type=\"password\"\r\n      class=\"form-control\"\r\n      name=\"password\"\r\n      id=\"password\"\r\n      #password=\"ngModel\"\r\n      ngModel\r\n      minlength=\"7\"\r\n    />\r\n    <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password2\">Neues Passwort wiederholen</label>\r\n    <input\r\n      type=\"password\"\r\n      class=\"form-control\"\r\n      name=\"password2\"\r\n      id=\"password2\"\r\n      #password2=\"ngModel\"\r\n      ngModel\r\n      minlength=\"7\"\r\n      [style]=\"setStyle(password, password2)\"\r\n    />\r\n  </div>\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    [disabled]=\"!match(password.value, password2.value)\"\r\n  >\r\n    Ändern\r\n  </button>\r\n</form>\r\n","import { Component, OnInit, HostListener } from \"@angular/core\";\r\nimport {\r\n  fadeInOnEnterAnimation,\r\n  fadeOutOnLeaveAnimation,\r\n} from \"angular-animations\";\r\n\r\n@Component({\r\n  selector: \"app-footer\",\r\n  templateUrl: \"./footer.component.html\",\r\n  styleUrls: [\"./footer.component.css\"],\r\n  animations: [\r\n    fadeInOnEnterAnimation({ duration: 200 }),\r\n    fadeOutOnLeaveAnimation({ duration: 300 }),\r\n  ],\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  public pageOffset: number = 0;\r\n  constructor() {}\r\n  @HostListener(\"window:scroll\", [\"$event\"])\r\n  setOffset(event) {\r\n    this.pageOffset = window.pageYOffset;\r\n  }\r\n  backToTop() {\r\n    let scrollToTop = window.setInterval(() => {\r\n      let pos = window.pageYOffset;\r\n      if (pos > 0) {\r\n        window.scrollTo(0, pos - window.innerHeight * 0.05); // how far to scroll on each step\r\n      } else {\r\n        window.clearInterval(scrollToTop);\r\n      }\r\n    }, 16);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div\r\n  *ngIf=\"this.pageOffset > 50\"\r\n  [@fadeInOnEnter]\r\n  [@fadeOutOnLeave]\r\n  class=\"btn-div\"\r\n>\r\n  <button\r\n    id=\"up\"\r\n    mat-fab\r\n    (click)=\"backToTop()\"\r\n    aria-label=\"Example icon button with a delete icon\"\r\n  >\r\n    <div class=\"fas fa-arrow-up\"></div>\r\n  </button>\r\n</div>\r\n\r\n<footer class=\"footer\">\r\n  <ul class=\"list-group list-group-horizontal\">\r\n    <li class=\"list-group-item\">\r\n      <a routerLink=\"/about\"> Über uns </a>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      <a routerLink=\"/about\" fragment=\"FAQ\"> FAQ </a>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      <a href=\"https://git.rwth-aachen.de/jungerjunge2/cards\" target=\"_blank\"\r\n        >GitLab</a\r\n      >\r\n    </li>\r\n  </ul>\r\n</footer>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\n\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { LecturesService } from \"src/app/services/lectures.service\";\r\n@Component({\r\n  selector: \"app-lectures\",\r\n  templateUrl: \"./lectures.component.html\",\r\n  styleUrls: [\"./lectures.component.css\"],\r\n})\r\nexport class LecturesComponent implements OnInit, OnDestroy {\r\n  lectures$: Observable<Vorlesung[]>;\r\n\r\n  constructor(private lecture: LecturesService) {}\r\n  subscriptions$: Subscription[] = [];\r\n  ngOnInit(): void {\r\n    this.lectures$ = this.lecture.getAllLectures();\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  setLink(lecture: Vorlesung) {\r\n    return \"/vorlesung/\" + lecture.abrv;\r\n  }\r\n}\r\n","<ul class=\"list list-group\" *ngIf=\"lectures$ | async as lectures\">\r\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\r\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { UserService } from \"../../services/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-login-form\",\r\n  templateUrl: \"./login-form.component.html\",\r\n  styleUrls: [\"./login-form.component.css\"],\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n  constructor(private user: UserService, private router: Router) {}\r\n\r\n  public check = true;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.user.login(form.value);\r\n  }\r\n\r\n  isDisabled(username, password) {\r\n    if (!(username.value && password.value)) {\r\n      return true;\r\n    }\r\n    return username.value.length < 5 || password.value.length < 7;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"username\"\r\n        required\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n      <input\r\n        required\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        id=\"remember\"\r\n        name=\"remember\"\r\n        #remember=\"ngModel\"\r\n        checked=\"true\"\r\n        ngModel\r\n      />\r\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, password)\"\r\n    >\r\n      Login\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Router, NavigationEnd, NavigationStart } from \"@angular/router\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { NotificationsService } from \"../../services/notifications.service\";\r\n\r\nimport { StatesService } from \"src/app/services/states.service\";\r\nimport { Notification } from \"../../models/Notification\";\r\nimport { UserService } from \"../../services/user.service\";\r\nimport {\r\n  pulseOnEnterAnimation,\r\n  fadeOutOnLeaveAnimation,\r\n} from \"angular-animations\";\r\nimport { Subscription } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-nav-bar\",\r\n  templateUrl: \"./nav-bar.component.html\",\r\n  styleUrls: [\"./nav-bar.component.css\"],\r\n  animations: [\r\n    pulseOnEnterAnimation({ scale: 1.05, duration: 500 }),\r\n    fadeOutOnLeaveAnimation({ duration: 200 }),\r\n  ],\r\n})\r\nexport class NavBarComponent implements OnInit, OnDestroy {\r\n  public loggedIn: boolean;\r\n  public cards: Card[];\r\n  public notifications: Notification[];\r\n  subscriptions$: Subscription[] = [];\r\n  public loading: boolean = false;\r\n  public constructor(\r\n    private router: Router,\r\n    private titleService: Title,\r\n\r\n    private cardsService: CardsService,\r\n    private statesService: StatesService,\r\n    private notification: NotificationsService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let cardsSub: Subscription;\r\n    this.setPageTitle();\r\n    let sub = this.userService\r\n      .authentication()\r\n      .subscribe((val) => (this.loggedIn = val));\r\n    this.subscriptions$.push(sub);\r\n    sub = this.statesService.getLoadingState().subscribe((val) => {\r\n      this.loading = val;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    this.router.events.subscribe((e) => {\r\n      if (e instanceof NavigationEnd) {\r\n        if (this.router.url.match(/vorlesung/)) {\r\n          cardsSub = this.cardsService.getCards().subscribe((cards) => {\r\n            this.cards = cards;\r\n          });\r\n        } else {\r\n          this.cards = null;\r\n          if (cardsSub) {\r\n            cardsSub.unsubscribe();\r\n          }\r\n        }\r\n        this.userService.clearAccountInfo();\r\n        //clear messages on route change\r\n        if (this.router.url == \"/\") {\r\n          this.notification.clearNotifications(\"alert\"); //prevent successfull login message from being removed on home\r\n        } else {\r\n          this.notification.clearNotifications(\"alert\", \"success\");\r\n        }\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    sub = this.notification\r\n      .getNotifications()\r\n      .subscribe((notifs) => (this.notifications = notifs));\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  closeAlert(i: number) {\r\n    this.notification.removeNotification(i);\r\n  }\r\n  isActive(path: string): string {\r\n    return path === this.router.url ? \"active\" : \"\";\r\n  }\r\n  setAlertClass(notif: Notification) {\r\n    return `alert alert-${notif.type} alert-dismissible fade show`;\r\n  }\r\n  setPageTitle(): void {\r\n    let currentTitle: string;\r\n    switch (this.router.url) {\r\n      case \"/login\":\r\n        currentTitle = \"Login\";\r\n        break;\r\n      case \"/signup\":\r\n        currentTitle = \"Sign Up\";\r\n        break;\r\n      case \"/\":\r\n        currentTitle = \"Home\";\r\n        break;\r\n      default:\r\n        currentTitle = \"Cards\";\r\n    }\r\n    this.titleService.setTitle(currentTitle);\r\n  }\r\n  logout() {\r\n    this.userService.logout();\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  role=\"alert\"\r\n  style=\"padding-right: 0;\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\" id=\"navlist\">\r\n          <li class=\"{{ isActive('/') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\r\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\r\n            >\r\n          </li>\r\n\r\n          <li *ngIf=\"!loggedIn\" class=\"{{ isActive('/login') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\"\r\n              ><i class=\"fas fa-user\"></i> Login</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"!loggedIn\" class=\"{{ isActive('/signup') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/signup\"\r\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"loggedIn\" class=\"{{ isActive('/profile') }} nav-item\">\r\n            <div class=\"dropdown\">\r\n              <a\r\n                class=\"nav-link\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i class=\"fas fa-user-circle\"></i> Account\r\n              </a>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a\r\n                  class=\"dropdown-item\"\r\n                  routerLink=\"/account/overview\"\r\n                  placement=\"bottom\"\r\n                  >Account management</a\r\n                >\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">\r\n                  Logout\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\r\n      <app-search-bar></app-search-bar>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<div id=\"progress\">\r\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n\r\n<div\r\n  #alert\r\n  *ngFor=\"let notif of notifications; index as i\"\r\n  [@pulseOnEnter]\r\n  [@fadeOutOnLeave]\r\n  [class]=\"setAlertClass(notif)\"\r\n  role=\"alert\"\r\n>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeAlert(i)\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  {{ notif.message }}\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-notifications\",\r\n  templateUrl: \"./notifications.component.html\",\r\n  styleUrls: [\"./notifications.component.css\"],\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n  subscriptions$: Subscription[] = [];\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>\r\n  Hier werden später Benachrichtigungen über Bearbeitungsvorschläge und\r\n  Kommentare stehen\r\n</p>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { UserInfo } from \"../../models/userInfo\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n@Component({\r\n  selector: \"app-overview\",\r\n  templateUrl: \"./overview.component.html\",\r\n  styleUrls: [\"./overview.component.css\"],\r\n})\r\nexport class OverviewComponent implements OnInit, OnDestroy {\r\n  public userInfo: UserInfo;\r\n  public user = new User(\"\", \"\");\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(private userService: UserService) {}\r\n  public user$: Observable<User>;\r\n  ngOnInit(): void {\r\n    this.user$ = this.userService.getUserInfo().pipe(\r\n      map((info) => {\r\n        if (info) return info.user;\r\n      })\r\n    );\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\" *ngIf=\"user$ | async as user\">\r\n  <div class=\"card-body\">\r\n    <h2 class=\"card-title\">\r\n      <img src=\"assets/profile.svg\" alt=\"Profile picture\" /> {{ user.username }}\r\n    </h2>\r\n  </div>\r\n  <ul class=\"list-group list-group-flush\">\r\n    <li class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Email\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.email }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li *ngIf=\"user.name\" class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Vorname\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.name }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li *ngIf=\"user.surname\" class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Nachname\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.surname }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li *ngIf=\"user.creationDate\" class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Mitglied seit\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.creationDate | date: \"longDate\":\"de\" }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Input, OnDestroy } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n\r\nimport { Card } from \"../../models/Card\";\r\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-search-bar\",\r\n  templateUrl: \"./search-bar.component.html\",\r\n  styleUrls: [\"./search-bar.component.css\"],\r\n})\r\nexport class SearchBarComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n  subscriptions$: Subscription[] = [];\r\n  cards: Card[];\r\n  suggestions: SearchSuggestion[];\r\n  uInput: string;\r\n  clearSuggestions: boolean;\r\n\r\n  ngOnInit(): void {\r\n    let sub = this.stateService.getHideSuggestions().subscribe((value) => {\r\n      this.clearSuggestions = value;\r\n      if (value) {\r\n        this.suggestions = [];\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    sub = this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n      cards.forEach((card) => {\r\n        if (card.thema == null) {\r\n          card.thema = \"\";\r\n        }\r\n        if (card.content == null) {\r\n          card.content = \"\";\r\n        }\r\n      });\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  inField() {\r\n    this.stateService.setTyping(true);\r\n  }\r\n  resetNav() {\r\n    this.stateService.setTyping(false);\r\n  }\r\n  findMatches(e: Event) {\r\n    this.stateService.setHideSuggestions(false); //show suggestions\r\n    if (this.uInput && this.uInput.length > 2) {\r\n      this.suggestions = [];\r\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\r\n\r\n      for (let i = 0; i < this.cards.length; i++) {\r\n        if (this.cards[i].thema.match(regex)) {\r\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  navigateTo(e: Event, index: number) {\r\n    e.preventDefault();\r\n    this.uInput = \"\";\r\n    this.cardsService.setNewCardIndex(index);\r\n    this.stateService.setHideSuggestions(true);\r\n  }\r\n}\r\n","<input\r\n  [(ngModel)]=\"uInput\"\r\n  (input)=\"findMatches($event)\"\r\n  class=\"form-control float-right\"\r\n  id=\"search\"\r\n  type=\"search\"\r\n  placeholder=\"Frage suchen\"\r\n  (focus)=\"inField()\"\r\n  (blur)=\"resetNav()\"\r\n/>\r\n<div *ngIf=\"suggestions\" id=\"matches\">\r\n  <ul class=\"list-group\">\r\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\r\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\r\n        suggestion.title\r\n      }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\n@Component({\r\n  selector: \"app-signup-form\",\r\n  templateUrl: \"./signup-form.component.html\",\r\n  styleUrls: [\"./signup-form.component.css\"],\r\n})\r\nexport class SignupFormComponent implements OnInit {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n  errors;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.userService.createAccount(form.value);\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  isDisabled(username, email, password, password2) {\r\n    if (!(username.value && email.value && password.value)) {\r\n      return true;\r\n    }\r\n    return (\r\n      username.value.length < 5 ||\r\n      password.value.length < 7 ||\r\n      password.value != password2.value ||\r\n      !this.checkEmail(email.value)\r\n    );\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        required\r\n        maxlength=\"20\"\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email Adresse</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        aria-describedby=\"emailHelp\"\r\n        required\r\n        #email=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n      />\r\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort wiederholen</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password2\"\r\n        id=\"password2\"\r\n        #password2=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n        [style]=\"setStyle(password, password2)\"\r\n      />\r\n      <small class=\"form-text\"> </small>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, email, password, password2)\"\r\n    >\r\n      Account erstellen\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\n\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-update-card-form\",\r\n  templateUrl: \"./update-card-form.component.html\",\r\n  styleUrls: [\"./update-card-form.component.css\"],\r\n})\r\nexport class UpdateCardFormComponent implements OnInit, OnDestroy {\r\n  public cardCopy: Card;\r\n  private cards: Card[];\r\n  private cardIndex: number; //saves the cardindex which the user is currently updating\r\n  private activeCardIndex: number; //saves the active cardindex\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private statesService: StatesService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let sub = this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    sub = this.cardsService.getActiveCardIndex().subscribe((index) => {\r\n      this.activeCardIndex = index;\r\n      if (this.cards) {\r\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\r\n      }\r\n      this.cardIndex = this.activeCardIndex;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  inField() {\r\n    this.statesService.setTyping(true);\r\n  }\r\n  resetNav() {\r\n    this.statesService.setTyping(false);\r\n  }\r\n  onSubmit(f: NgForm) {\r\n    this.cardCopy.content = f.value.content;\r\n    this.cardCopy.thema = f.value.thema;\r\n    let sub = this.cardsService\r\n      .updateCard({ ...this.cardCopy }, this.cardIndex)\r\n      .subscribe((resp) => {\r\n        f.reset();\r\n        sub.unsubscribe();\r\n      });\r\n  }\r\n  cancelEdit() {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: \"400px\",\r\n    });\r\n  }\r\n\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"dialog-overview-example-dialog\",\r\n  templateUrl: \"dialog.html\",\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private service: StatesService\r\n  ) {}\r\n\r\n  cancel() {\r\n    this.service.setFormMode(\"reset\");\r\n    this.service.setLoadingState(false);\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte bearbeiten</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Frage</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.thema\"\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Antwort</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.content\"\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        class=\"btn btn-success mb-2 mr-1\"\r\n        type=\"submit\"\r\n        value=\"Sichern\"\r\n        [disabled]=\"isDisabled(content, thema)\"\r\n      />\r\n      <input\r\n        class=\"btn btn-danger mb-2\"\r\n        type=\"button\"\r\n        value=\"Abbruch\"\r\n        (click)=\"cancelEdit()\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n","<h1 mat-dialog-title>Abbruch</h1>\r\n<div mat-dialog-content>\r\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\r\n</div>\r\n<hr />\r\n<div mat-dialog-actions style=\"text-align: right;\">\r\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\r\n    Nein,zurück\r\n  </button>\r\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\r\n</div>\r\n","export class Card {\r\n  thema: string;\r\n  content: string;\r\n  abrv: string;\r\n  latex: number;\r\n\r\n  _id?: string;\r\n  authorId?: string;\r\n  authorName?: string;\r\n  date?: Date;\r\n\r\n  constructor(thema, content, abrv, latex) {\r\n    this.thema = thema;\r\n    this.content = content;\r\n    this.abrv = abrv;\r\n    latex = latex;\r\n  }\r\n}\r\n","export abstract class Notification {\r\n  type: string;\r\n  message: string;\r\n\r\n  constructor(t: string, m: string) {\r\n    this.type = t;\r\n    this.message = m;\r\n  }\r\n}\r\n\r\nexport class HttpError extends Notification {\r\n  code: number;\r\n  constructor(m: string, c?: number) {\r\n    super(\"warning\", m);\r\n    this.code = c;\r\n  }\r\n}\r\n\r\nexport class InfoMessage extends Notification {\r\n  constructor(m: string) {\r\n    super(\"info\", m);\r\n  }\r\n}\r\nexport class SuccessMessage extends Notification {\r\n  constructor(m: string) {\r\n    super(\"success\", m);\r\n  }\r\n}\r\n","export class User {\r\n  username: string;\r\n  email: string;\r\n  _id: string;\r\n  name: string;\r\n  surname: string;\r\n  creationDate?: Date;\r\n  constructor(name: string, email: string) {\r\n    this.username = name;\r\n    this.email = email;\r\n  }\r\n}\r\n","export class Vorlesung {\r\n  name: string;\r\n  abrv: string;\r\n  constructor(name, abrv) {\r\n    this.name = name;\r\n    this.abrv = abrv;\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-about\",\r\n  templateUrl: \"./about.component.html\",\r\n  styleUrls: [\"./about.component.css\"],\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  public loggedIn: boolean;\r\n  constructor(private user: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user.authentication().subscribe((val) => {\r\n      this.loggedIn = val;\r\n    });\r\n  }\r\n}\r\n","<div class=\"media\">\r\n  <img src=\"assets/c.png\" class=\"align-self-center mr-1\" alt=\"Logo\" />\r\n  <div class=\"media-body\">\r\n    <h3>Cards</h3>\r\n  </div>\r\n</div>\r\n<p>\r\n  Cards ist eine Webseite, die dir dabei helfen soll dich auf deine Klausuren\r\n  und Prüfungen vorzubereiten. Das Konzept von Cards beruht auf den klassischen\r\n  Karteikarten. Anders als die klassischen Karteikarten brauchst du jedoch nicht\r\n  deinen Stapel an Karten überall mitzuschleppen. Unsere Webseite eignet sich\r\n  vor allem auch für Smartphones, somit kannst du dir deine Karteikarten auch\r\n  unterwegs anschauen. Sie richtet sich vor allem an Studenten.\r\n</p>\r\n<p *ngIf=\"!loggedIn\">\r\n  <a routerLink=\"/signup\">Erstelle einen Account</a>, um alle Vorteile unserer\r\n  Webseite zu nutzen.\r\n</p>\r\n<h4>Sharing is Caring</h4>\r\n<p>\r\n  Karteikarten, die du auf unserer Webseite hinzufügst, sind automatisch für\r\n  alle anderen Nutzer sichtbar. Andererseits kannst du dir auch Karten von\r\n  anderen Nutzern anschauen.Dies sorgt dafür, dass du optimal auf deine Klausur\r\n  vorbereitet bist. <br />\r\n  Wenn du mit einer Karte nicht zufrieden bist, oder du glaubst ihr Inhalt wäre\r\n  falsch oder unvollständig, kannst du sie bearbeiten. Karten, welche von\r\n  registrierten Nutzern erstellt worden sind, kannst du leider nicht bearbeiten.\r\n  In einer späteren Version wird es möglich sein für diese Karte einen\r\n  Verberungsvorschlag an den Ertseller der Karte zu senden.\r\n</p>\r\n<h4>Wir freuen uns über Feedback</h4>\r\n<p>\r\n  Wir bemühen uns, die Seite fehlerfrei zu gestalten. Trotzdem kann es sein,\r\n  dass sich der ein oder andere Fehler eingeschlichen hat. Diesen kannst du uns\r\n  gerne melden indem du\r\n  <a\r\n    href=\"https://git.rwth-aachen.de/jungerjunge2/cards/-/issues\"\r\n    target=\"_blank\"\r\n    >hier</a\r\n  >\r\n  ein Issue erstellst. Wir versuchen den Fehler, dann so schnell wie möglich zu\r\n  beheben. Du kannst uns dort auch gerne Feedback hinterlassen\r\n</p>\r\n\r\n<h3 id=\"FAQ\">FAQ</h3>\r\n<h4>Wo finde ich die Karteikarten zu meiner Vorlesung?</h4>\r\n<p>\r\n  Auf unserer <a routerLink=\"/\">Startseite</a> findest du eine Liste aller\r\n  Vorlesungen, für die bisher Karten hinzugefügt wurden. Wähle deine Vorlesung\r\n  aus. Falls du die Vorlesung nich in der Liste findest, dann kannst du sie\r\n  hinzufügen indem du das Formular ausfüllst und auf \"Hinzufügen\" drückst.\r\n  <br />\r\n  Nachdem du auf die Vorlesung gedrückt hast kommst du auf eine neue Seite, auf\r\n  der du dir alle Karteikarten, die zu der Vorlesung bereits hinzugefügt wurden,\r\n  anschauen. Nutze die Pfeiltasten oder wische horizontal über die Karte, um dir\r\n  weitere Karten anzuschauen. Du kannst den Inhalt der Karte aufklappen indem du\r\n  auf \"Mehr dazu\" drückst. <br />\r\n  Du kannst auch die Suchfunktion in der Navigationsleiste nutzen, um nach\r\n  bestimmten Karten zu suchen.\r\n</p>\r\n<h4>Wie erstelle ich eine Karte?</h4>\r\n<p>\r\n  Auf unserer <a routerLink=\"/\">Startseite</a> siehst du eine Liste von\r\n  Vorlesungen. Wähle die Vorlesung aus zu der du eine Karteikarte hinzufügen\r\n  möchtest. Falls deine Vorlesung nicht findest, kannst du sie über das Formular\r\n  hinzufügen. <br />\r\n  Nachdem du auf die Seite der Vorlesung navigiert bist kannst du eine neue\r\n  Karte hinzufügen indem du auf das <i class=\"fas fa-plus\"></i> Symbol unter der\r\n  Überschrift drückst. Nun kannst du deine Karteikarte hinzufügen indem du das\r\n  Formular ausfüllst und auf \"Hinzufügen\" drückst.\r\n  <span *ngIf=\"!loggedIn\">\r\n    Erstelle am Besten einen\r\n    <a routerLink=\"/signup\"> Account</a>, oder\r\n    <a routerLink=\"/login\">logge dich ein</a>, damit du Ertseller dieser Karte\r\n    wirst und nur du diese bearbeiten kannst.\r\n  </span>\r\n  Pro-Tip: du kannst auch mathematische Symbole schreiben indem du Latex Befehle\r\n  verwendest und diese mit $ Zeichen umhüllst. Mehr zu den Latex Befehlen\r\n  findest du\r\n  <a href=\"https://en.wikibooks.org/wiki/LaTeX/Mathematics\">hier</a>.\r\n</p>\r\n\r\n<h4>Wie bearbeite ich eine Karte?</h4>\r\n<p>\r\n  Wähle zuerst die Karteikarte aus die du bearbeiten möchtest. Drücke auf das\r\n  <i class=\"fas fa-pen\"></i> Symbol unter der Überschrift. Bearbeite deine Karte\r\n  im Formular und drücke auf \"Sichern\". Bitte beachte, dass du nur öffentliche\r\n  und deine eigenen Karten bearbeiten kannst. Karten, die von anderen\r\n  registrierten Nutzern erstellt worden sind kannst du leider nicht bearbeit. In\r\n  einer späteren Version wird es möglich sein für diese Karte einen\r\n  Verberungsvorschlag an den Ertseller der Karte zu senden.\r\n</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-account-page\",\r\n  templateUrl: \"./account-page.component.html\",\r\n  styleUrls: [\"./account-page.component.css\"],\r\n})\r\nexport class AccountPageComponent implements OnInit {\r\n  public page: string;\r\n  public cardCount = 0;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserInfo().subscribe((info) => {\r\n      if (info && info.cards) {\r\n        this.cardCount = info.cards.length;\r\n      } else {\r\n        this.cardCount = 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <div class=\"list-group\" id=\"list\">\r\n      <a\r\n        class=\"list-group-item list-group-item-action\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"overview\"\r\n      >\r\n        Übersicht\r\n      </a>\r\n      <a\r\n        class=\"list-group-item list-group-item-action\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"manage\"\r\n      >\r\n        Profildaten ändern\r\n      </a>\r\n      <a\r\n        *ngIf=\"cardCount > 0\"\r\n        class=\"list-group-item list-group-item-action\"\r\n        routerLink=\"cards\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        Karteikarten\r\n      </a>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-8 col-xs-12\" id=\"sub\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  selector: \"app-cards-page\",\r\n  templateUrl: \"./cards-page.component.html\",\r\n  styleUrls: [\"./cards-page.component.css\"],\r\n})\r\nexport class CardsPageComponent implements OnInit {\r\n  public vlAbrv: string;\r\n  public lecture: Vorlesung;\r\n  public loading: boolean = true;\r\n  public formMode: string = \"none\";\r\n  public cards: Card[];\r\n\r\n  private inTypingField: boolean;\r\n  @ViewChild(\"alert\", { static: false }) alert: ElementRef;\r\n\r\n  @HostListener(\"click\", [\"$event.target\"])\r\n  onClick() {\r\n    this.stateServie.setHideSuggestions(true);\r\n  }\r\n  @HostListener(\"window:keyup\", [\"$event\"])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (!this.inTypingField) {\r\n      if (event.key == \"ArrowRight\") {\r\n        this.cardsService.goNext();\r\n      } else if (event.key == \"ArrowLeft\") {\r\n        this.cardsService.goPrev();\r\n      }\r\n    }\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private stateServie: StatesService,\r\n    private cardsService: CardsService,\r\n\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.title.setTitle(\"Cards\");\r\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\r\n    this.cardsService.getCards().subscribe((cards) => {\r\n      if (cards.length == 0) {\r\n        this.stateServie.setFormMode(\"add\");\r\n      }\r\n    });\r\n    this.stateServie.getTyping().subscribe((val) => (this.inTypingField = val));\r\n    this.stateServie\r\n      .getLoadingState()\r\n      .subscribe((value) => (this.loading = value));\r\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\r\n  }\r\n\r\n  setLoading(loading: boolean): void {\r\n    this.loading = loading;\r\n    this.stateServie.setLoadingState(loading);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <app-carousel></app-carousel>\r\n  <br />\r\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\r\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Whoops, diese Seite existiert nicht</h2>\r\n<a routerLink=\"/\">Home</a>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  constructor(private statesService: StatesService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<app-lectures></app-lectures>\r\n<br />\r\n<app-add-lecture-form></app-add-lecture-form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-login-form></app-login-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-signup-form></app-signup-form>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { Card } from \"../models/Card\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpConfig } from \"./config\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { NotificationsService } from \"./notifications.service\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CardsService {\r\n  //contains lecture abreviation of the current lecutre\r\n  private abrv: string;\r\n  //loads cards once from the server and whenever lecture changes\r\n  //and provides them as an Observable\r\n  private cards$: BehaviorSubject<Card[]> = new BehaviorSubject<Card[]>([]);\r\n  //provides a Subject to set a new index on which card the carousel should show\r\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\r\n    0\r\n  );\r\n  //provides a Subject of the index of the card that is currently shown\r\n  //only the carousel shoul set nex values for this subject\r\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\r\n    number\r\n  >(0);\r\n\r\n  private config = new HttpConfig();\r\n  constructor(\r\n    private notifications: NotificationsService,\r\n    private http: HttpClient, //to make calls to the server\r\n    private statesService: StatesService, //for setting the loading state\r\n    private router: Router //used to get the lecture abreviation from the route\r\n  ) {}\r\n\r\n  getCards(): Observable<Card[]> {\r\n    this.statesService.setLoadingState(true);\r\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the lecture abreviation from the route\r\n    if (this.abrv === abrv) {\r\n      //cards were already loaded for this lecture\r\n      this.statesService.setLoadingState(false);\r\n      return this.cards$.asObservable();\r\n    } else {\r\n      this.abrv = abrv;\r\n      //remove the old cards before fetching the new ones\r\n      this.cards$.next([]);\r\n      //make server request\r\n      this.http\r\n        .get<Card[]>(this.config.urlBase + \"cards/?abrv=\" + abrv, {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe(\r\n          (response) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.cards$.next(response.body);\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        );\r\n      return this.cards$.asObservable();\r\n    }\r\n  }\r\n\r\n  updateCard(card: Card, index: number): Observable<any> {\r\n    this.statesService.setLoadingState(true);\r\n    //send update to server using http service\r\n    return this.http\r\n      .put<any>(\r\n        this.config.urlBase + \"cards/update\",\r\n        { card: card },\r\n        {\r\n          headers: this.config.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (resp) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.statesService.setFormMode(\"reset\"); //reset form to its previous state\r\n            //update subject\r\n            let cards = this.cards$.getValue();\r\n            cards[index] = card;\r\n            this.cards$.next(cards);\r\n            setTimeout(() => {\r\n              //show new card timeout needed because the carousel needs time to refresh\r\n              //its view\r\n              this.setNewCardIndex(index);\r\n            }, 100);\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  addCard(card: Card): Observable<any> {\r\n    this.statesService.setLoadingState(true);\r\n    //send new card to server using http service\r\n    return this.http\r\n      .post<any>(\r\n        this.config.urlBase + \"cards/new\",\r\n        { card: card },\r\n        {\r\n          headers: this.config.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (response) => {\r\n            this.statesService.setLoadingState(false);\r\n            card._id = response.body.id; //set id received from server response\r\n            //upate subject\r\n            let cards = this.cards$.getValue();\r\n            cards.push(card);\r\n            this.cards$.next(cards);\r\n\r\n            setTimeout(() => {\r\n              //show new card timeout needed because the carousel needs time to refresh\r\n              //its view\r\n              this.setNewCardIndex(cards.length - 1);\r\n            }, 100);\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        ),\r\n        map((res) => res.body)\r\n      );\r\n  }\r\n  goNext() {\r\n    //show the next slide index\r\n    let index = this.newCardIndex$.getValue();\r\n    index++;\r\n    if (index >= this.cards$.getValue().length) {\r\n      index = 0;\r\n    }\r\n    this.newCardIndex$.next(index);\r\n  }\r\n  goPrev() {\r\n    //show the next slide index\r\n    let index = this.newCardIndex$.getValue();\r\n    index--;\r\n    if (index < 0) {\r\n      index = this.cards$.getValue().length - 1;\r\n    }\r\n    this.newCardIndex$.next(index);\r\n  }\r\n  //only the carousel should be subscribed to this\r\n  getNewCardIndex(): Observable<number> {\r\n    return this.newCardIndex$.asObservable();\r\n  }\r\n  //use this function to tell the carousel to go to a specific slide i\r\n  setNewCardIndex(i: number) {\r\n    this.newCardIndex$.next(i);\r\n  }\r\n  //only the carousel should call this method (on the sliding event)\r\n  setActiveCardIndex(i: number) {\r\n    this.activeCardIndex$.next(i);\r\n  }\r\n  //subsribe to this function to always get the index of the card that is currently shown\r\n  getActiveCardIndex(): Observable<number> {\r\n    return this.activeCardIndex$.asObservable();\r\n  }\r\n}\r\n","import { HttpHeaders } from \"@angular/common/http\";\r\n\r\nexport class HttpConfig {\r\n  urlBase: string = \"api/\";\r\n  headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\r\n  fileHeaders = new Headers(); //configure headers for file upload here\r\n  constructor() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { NotificationsService } from \"./notifications.service\";\r\nimport { Router } from \"@angular/router\";\r\n//Models\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\nimport { HttpError } from \"../models/Notification\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LecturesService {\r\n  private urlBase: string = \"api/\"; //url  base on which to adress the server with\r\n\r\n  private lecture$: BehaviorSubject<Vorlesung> = new BehaviorSubject<Vorlesung>(\r\n    new Vorlesung(\"\", \"\")\r\n  ); //holds the current lecture\r\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\r\n\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(\r\n    private notifications: NotificationsService,\r\n    private http: HttpClient, //for sending http requests\r\n    private statesService: StatesService, //set the loading state\r\n    private router: Router //to get info in the current url\r\n  ) {}\r\n\r\n  //get an array of all lectures\r\n  getAllLectures(): Observable<Vorlesung[]> {\r\n    this.statesService.setLoadingState(true);\r\n    if (this.lectures$) {\r\n      //lectures were already loaded once\r\n      this.statesService.setLoadingState(false);\r\n      return this.lectures$.asObservable();\r\n    } else {\r\n      //load lectures from the server\r\n      return this.http\r\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\r\n          observe: \"response\",\r\n        })\r\n        .pipe(\r\n          tap(\r\n            (res) => {\r\n              this.statesService.setLoadingState(false);\r\n              this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body); //set the lectures subject\r\n            },\r\n            (error) => {\r\n              this.addErrors(error);\r\n              this.statesService.setLoadingState(false);\r\n            }\r\n          ),\r\n          map((res) => res.body)\r\n        );\r\n    }\r\n  }\r\n\r\n  //get the Current lecture\r\n  getCurrentLecture(): Observable<Vorlesung> {\r\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the abreviation of the lecture from the url\r\n    if (this.lecture$.getValue().abrv == abrv) {\r\n      //the lecture was already loaded\r\n      return this.lecture$.asObservable();\r\n    } else {\r\n      //fetch the lecture from the server\r\n      this.http\r\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe(\r\n          (res) => {\r\n            this.lecture$.next(res.body);\r\n          },\r\n          (error) => {\r\n            this.addErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        );\r\n      return this.lecture$.asObservable();\r\n    }\r\n  }\r\n\r\n  //add a lecture to the database on the server\r\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .post<any>(\r\n        this.urlBase + \"lectures/new\",\r\n        { lecture: lecture },\r\n        {\r\n          headers: this.httpOptions.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (res) => {\r\n            //add the new lecture to the lectures subject\r\n            this.statesService.setLoadingState(false);\r\n            let lectures = this.lectures$.getValue();\r\n            lectures.push(lecture);\r\n            this.lectures$.next(lectures);\r\n          },\r\n          (error) => {\r\n            this.addErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  //because errors suck and we dont have a unified error handling system in the backend\r\n\r\n  addErrors(error) {\r\n    let err = error.error;\r\n    console.log(error);\r\n    if (error.status == 400) {\r\n      this.notifications.addNotification(\r\n        new HttpError(\"Bitte logge dich erst ein.\", error.status)\r\n      );\r\n      this.router.navigateByUrl(\"/login\");\r\n    } else if (error.status == 422) {\r\n      if (typeof err == \"string\") {\r\n        this.notifications.addNotification(new HttpError(err, error.status));\r\n      } else if (typeof err == \"object\") {\r\n        this.notifications.addNotification(\r\n          new HttpError(\r\n            \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n            error.status\r\n          )\r\n        );\r\n        console.log(err);\r\n      } else {\r\n        for (const e of err) {\r\n          this.notifications.addNotification(new HttpError(e, error.status));\r\n        }\r\n      }\r\n    } else if (error.status >= 500) {\r\n      this.notifications.addNotification(\r\n        new HttpError(\r\n          \"Der Server scheint offline zu sein. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    } else {\r\n      this.notifications.addNotification(\r\n        new HttpError(\r\n          \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { Notification, HttpError, InfoMessage } from \"../models/Notification\";\r\nimport { Router } from \"@angular/router\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class NotificationsService {\r\n  private notifications$ = new BehaviorSubject<Notification[]>([]);\r\n  constructor(private router: Router) {}\r\n\r\n  addNotification(n: Notification) {\r\n    let notifications = this.notifications$.getValue();\r\n    notifications.push(n);\r\n  }\r\n\r\n  //removes a specific error from the error array\r\n  removeNotification(index: number) {\r\n    let notifications = this.notifications$.getValue();\r\n    notifications.splice(index, 1); //remove error at position index\r\n    this.notifications$.next(notifications);\r\n  }\r\n  clearNotifications(...types: string[]) {\r\n    let notifs = this.notifications$.getValue();\r\n    types.forEach((type) => {\r\n      for (let i = 0; i < notifs.length; i++) {\r\n        if (notifs[i].type === type) {\r\n          this.removeNotification(i);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.notifications$.next(notifs);\r\n  }\r\n  removeLoginInfo() {\r\n    let notifs = this.notifications$.getValue();\r\n    for (let i = 0; i < notifs.length; i++) {\r\n      if (notifs[i] instanceof InfoMessage) {\r\n        //only check if notif is of type InfoMessage as LoginInfo is the only info message for now\r\n        this.removeNotification(i);\r\n      }\r\n    }\r\n  }\r\n  getNotifications(): Observable<Notification[]> {\r\n    return this.notifications$.asObservable();\r\n  }\r\n\r\n  //because errors suck and we dont have a unified error handling system in the backend\r\n  handleErrors(error) {\r\n    let err = error.error;\r\n    console.log(error);\r\n    if (error.status == 400) {\r\n      this.addNotification(\r\n        new InfoMessage(\"Du musst dich einloggen, um diese Seite zu besuchen\")\r\n      );\r\n    } else if (error.status == 422) {\r\n      if (typeof err == \"string\") {\r\n        this.addNotification(new HttpError(err, error.status));\r\n      } else if (typeof err == \"object\") {\r\n        this.addNotification(\r\n          new HttpError(\r\n            \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n            error.status\r\n          )\r\n        );\r\n        console.log(err);\r\n      } else {\r\n        for (const e of err) {\r\n          this.addNotification(new HttpError(e, error.status));\r\n        }\r\n      }\r\n    } else if (error.status >= 500) {\r\n      this.addNotification(\r\n        new HttpError(\r\n          \"Der Server scheint offline zu sein. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    } else {\r\n      this.addNotification(\r\n        new HttpError(\r\n          \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n","//This service is made to manage states across components\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StatesService {\r\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\r\n  private lastFormMode: string;\r\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  private typing$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  constructor() {}\r\n\r\n  getFormMode(): Observable<string> {\r\n    return this.formMode$.asObservable();\r\n  }\r\n  setFormMode(mode: string): void {\r\n    if (mode == \"reset\") {\r\n      if (!this.lastFormMode) {\r\n        //last form mode is undefined\r\n        this.lastFormMode = \"none\";\r\n      } // last Form mode defined\r\n      this.formMode$.next(this.lastFormMode);\r\n    } else {\r\n      this.formMode$.next(mode);\r\n      if (mode != \"edit\") this.lastFormMode = mode;\r\n    }\r\n  }\r\n  setTyping(val: boolean) {\r\n    this.typing$.next(val);\r\n  }\r\n  getTyping(): Observable<boolean> {\r\n    return this.typing$.asObservable();\r\n  }\r\n  getLoadingState(): BehaviorSubject<boolean> {\r\n    return this.loading$;\r\n  }\r\n  setLoadingState(value: boolean) {\r\n    this.loading$.next(value);\r\n  }\r\n  setHideSuggestions(value: boolean) {\r\n    this.hideSgtn$.next(value);\r\n  }\r\n  getHideSuggestions(): Observable<boolean> {\r\n    return this.hideSgtn$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { UserInfo } from \"../models/userInfo\";\r\nimport { Observable, BehaviorSubject, of } from \"rxjs\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { InfoMessage, HttpError, SuccessMessage } from \"../models/Notification\";\r\nimport { NotificationsService } from \"./notifications.service\";\r\nimport { HttpConfig } from \"./config\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { User } from \"../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService implements CanActivate {\r\n  private userId$ = new BehaviorSubject<string>(null); //subject which stores the userid\r\n  private accountInfo$: BehaviorSubject<UserInfo>; //stores account info of the user\r\n  private loggedIn: BehaviorSubject<boolean>;\r\n  private config = new HttpConfig();\r\n\r\n  constructor(\r\n    private http: HttpClient, //for sending http requests\r\n    private statesService: StatesService, //to set the loadingstate\r\n    private router: Router, //to redirect\r\n    private notifications: NotificationsService //to show notifications\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .get<boolean>(this.config.urlBase + \"/user/auth\", {\r\n        observe: \"response\",\r\n      })\r\n      .pipe(\r\n        tap(\r\n          (res) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.setLogin(res.body);\r\n            if (res.body === false) {\r\n              this.notifications.addNotification(\r\n                new InfoMessage(\r\n                  \"Du musst dich einloggen, um diese Seite zu besuchen\"\r\n                )\r\n              );\r\n              this.setUser(null);\r\n              this.router.navigate([\"login\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.setLogin(false);\r\n            this.notifications.handleErrors(err);\r\n            this.setUser(null);\r\n            this.router.navigateByUrl(\"/\");\r\n          }\r\n        ),\r\n        map((res) => res.body)\r\n      );\r\n  }\r\n  //used to login the user\r\n  login(form) {\r\n    this.statesService.setLoadingState(true);\r\n    this.http\r\n      .post<User>(this.config.urlBase + \"login\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.statesService.setLoadingState(false);\r\n          this.setUser(res.body._id);\r\n          this.notifications.removeLoginInfo();\r\n          this.notifications.addNotification(\r\n            new SuccessMessage(`Herzlich willkommen ${res.body.username}`)\r\n          );\r\n\r\n          this.router.navigateByUrl(\"/\");\r\n        },\r\n        (error) => {\r\n          this.notifications.handleErrors(error);\r\n          this.setUser(null);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n  createAccount(form) {\r\n    this.http\r\n      .post<User>(this.config.urlBase + \"user/new\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.setUser(res.body._id);\r\n          this.statesService.setLoadingState(false);\r\n          this.router.navigate([\"/\"]);\r\n        },\r\n        (error) => {\r\n          this.notifications.handleErrors(error);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n  authentication(): Observable<boolean> {\r\n    if (!this.loggedIn) {\r\n      this.loggedIn = new BehaviorSubject<boolean>(false);\r\n      this.http\r\n        .get<boolean>(this.config.urlBase + \"/user/auth\", {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe((res) => {\r\n          this.loggedIn.next(res.body);\r\n        });\r\n    }\r\n    return this.loggedIn.asObservable();\r\n  }\r\n  getUserId(): Observable<string> {\r\n    if (this.userId$.getValue()) {\r\n      return this.userId$.asObservable();\r\n    } else {\r\n      return this.http\r\n        .get<string>(this.config.urlBase + \"user/id\", { observe: \"response\" })\r\n        .pipe(\r\n          tap((res) => {\r\n            this.setUser(res.body);\r\n          }),\r\n          map((res) => res.body)\r\n        );\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.statesService.setLoadingState(true);\r\n    this.http\r\n      .get<any>(this.config.urlBase + \"user/logout\", { observe: \"response\" })\r\n      .subscribe(\r\n        (res) => {\r\n          this.statesService.setLoadingState(false);\r\n          this.setUser(null);\r\n          this.setLogin(false);\r\n          this.notifications.addNotification(\r\n            new SuccessMessage(\"Erfolgreich abgemeldet\")\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setUser(null);\r\n          this.setLogin(false);\r\n          this.notifications.handleErrors(error);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserInfo(): Observable<UserInfo> {\r\n    if (this.accountInfo$ && this.accountInfo$.getValue()) {\r\n      return this.accountInfo$.asObservable();\r\n    } else {\r\n      this.statesService.setLoadingState(true);\r\n      if (!this.accountInfo$) {\r\n        this.accountInfo$ = new BehaviorSubject<UserInfo>(null);\r\n      }\r\n      this.http\r\n        .get<UserInfo>(this.config.urlBase + \"user/info\", {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe(\r\n          (res) => {\r\n            this.statesService.setLoadingState(false);\r\n            for (const card of res.body.cards) {\r\n              card.date = new Date(card.date);\r\n            }\r\n            if (res.body.user && res.body.user.creationDate) {\r\n              res.body.user.creationDate = new Date(res.body.user.creationDate);\r\n            }\r\n            this.setUser(res.body.user._id);\r\n            this.accountInfo$.next(res.body);\r\n          },\r\n          (error) => {\r\n            this.router.navigateByUrl(\"/login\");\r\n            this.statesService.setLoadingState(false);\r\n            this.notifications.handleErrors(error);\r\n          }\r\n        );\r\n      return this.accountInfo$.asObservable();\r\n    }\r\n  }\r\n  clearAccountInfo() {\r\n    if (this.accountInfo$ && !this.router.url.match(/account/)) {\r\n      this.accountInfo$.next(null);\r\n    }\r\n  }\r\n  uploadFile(file: FormData): Observable<boolean> {\r\n    console.log(file);\r\n    //this.statesService.setLoadingState(true);\r\n    // return this.http\r\n    //   .post<boolean>(this.config.urlBase + \"user/pic\", file, {\r\n    //     observe: \"response\",\r\n    //   })\r\n    //   .pipe(\r\n    //     tap(\r\n    //       (res) => {\r\n    //         this.statesService.setLoadingState(false);\r\n    //         this.notifications.addNotification(\r\n    //           new SuccessMessage(\"Profilbild wurde erfolgreich geändert\")\r\n    //         );\r\n    //       },\r\n    //       (error) => {\r\n    //         this.statesService.setLoadingState(false);\r\n    //         console.log(error);\r\n    //       }\r\n    //     ),\r\n    //     map((res) => res.body)\r\n    //   );\r\n    return of(true);\r\n  }\r\n  updateAccount(form) {\r\n    this.statesService.setLoadingState(true);\r\n    this.http\r\n      .put<any>(this.config.urlBase + \"user/updateAccount\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.statesService.setLoadingState(false);\r\n\r\n          let info = this.accountInfo$.getValue();\r\n          info.user = form;\r\n          this.accountInfo$.next(info);\r\n          this.notifications.addNotification(\r\n            new SuccessMessage(\r\n              \"Deine Informationen wurden erfolgreich aktualisiert\"\r\n            )\r\n          );\r\n        },\r\n        (error) => {\r\n          this.notifications.handleErrors(error);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  updatePassword(form) {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .put<any>(this.config.urlBase + \"user/updatePassword\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .pipe(\r\n        tap(\r\n          (res) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.notifications.addNotification(\r\n              new SuccessMessage(\"Dein Passwort wurde erfolgreich aktualisiert\")\r\n            );\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  deleteAccount() {\r\n    console.log(\"not yet implemented\");\r\n  }\r\n\r\n  private setUser(id: string) {\r\n    this.userId$.next(id);\r\n    if (id) {\r\n      this.setLogin(true);\r\n    }\r\n  }\r\n  private setLogin(val: boolean) {\r\n    if (this.loggedIn) {\r\n      this.loggedIn.next(val);\r\n    } else {\r\n      this.loggedIn = new BehaviorSubject<boolean>(val);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport \"hammerjs\";\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"]}