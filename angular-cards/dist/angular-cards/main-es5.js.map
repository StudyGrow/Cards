{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/signup-form/signup-form.component.ts","webpack:///src/app/components/signup-form/signup-form.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/models/Vorlesung.ts","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/routes/login-page/login-page.component.ts","webpack:///src/app/routes/login-page/login-page.component.html","webpack:///src/app/routes/signup-page/signup-page.component.ts","webpack:///src/app/routes/signup-page/signup-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","titleService","setTitle","selector","templateUrl","styleUrls","MyHammerConfig","overrides","pan","direction","Hammer","DIRECTION_All","swipe","DIRECTION_VERTICAL","element","mc","touchAction","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","recognizers","Swipe","DIRECTION_HORIZONTAL","AppModule","provide","useClass","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","http","getCurrentLecture","subscribe","lecture","f","newCard","value","thema","content","abrv","addCard","res","reset","color","length","elem","onSubmit","AddLectureFormComponent","statesService","emitVl","newLecture","name","setLoadingState","addLecture","response","emit","field","max","CardComponent","cs","isCollapsed","getActiveCardIndex","change","hide","static","CarouselComponent","config","httpService","activeSlide","interval","wrap","keyboard","pauseOnHover","event","carousel","previousSlide","nextSlide","title","getCards","cards","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","selectSlide","n","toString","rand","count","Math","floor","random","slideEvent","setActiveCardIndex","parseInt","relatedTarget","showRandomCard","enableEdit","toggleAddView","LecturesComponent","lecturesLoaded","getAllLectures","lectures","newVl","console","log","push","LoginFormComponent","form","login","status","navigate","error","headers","errors","username","password","submit","NavBarComponent","loading","setPageTitle","user","getUser","getLoadingState","val","url","currentTitle","logout","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","forEach","card","setHideSuggestions","uInput","regex","RegExp","i","match","preventDefault","setNewCardIndex","findMatches","SignupFormComponent","createAccount","password2","email","test","checkEmail","UpdateCardFormComponent","dialog","activeCardIndex","cardCopy","cardIndex","updateCard","resp","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","close","onNoClick","cancel","Card","Vorlesung","CardsPageComponent","route","stateServie","vlAbrv","snapshot","paramMap","get","ativeCard","getErrors","removeError","HomePageComponent","LoginPageComponent","SignupPageComponent","CardsService","errors$","newCardIndex$","activeCardIndex$","split","cards$","asObservable","getCardsFromLectureAbrv","pipe","next","body","getValue","splice","_id","setTimeout","providedIn","HttpService","urlBase","httpOptions","observe","post","userId","put","lectures$","lecture$","remember","localStorage","setItem","JSON","stringify","parse","getItem","err","removeItem","StatesService","formMode$","loading$","hideSgtn$","lastFormMode","environment","production","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomePageComponent },\r\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\r\n  { path: \"login\", component: LoginPageComponent },\r\n  { path: \"signup\", component: SignupPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  public constructor(private router: Router, private titleService: Title) {\r\n    this.titleService.setTitle(\"Home\");\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule, Injectable } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport {\r\n  CarouselModule,\r\n  WavesModule,\r\n  CollapseModule,\r\n  TooltipModule,\r\n} from \"angular-bootstrap-md\";\r\nimport { KatexModule } from \"ng-katex\";\r\n\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\r\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\r\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\r\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\r\nimport { CardComponent } from \"./components/card/card.component\";\r\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\r\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\n//Services\r\nimport { StatesService } from \"./services/states.service\";\r\nimport { HttpService } from \"./services/http.service\";\r\n\r\n//Material Modules\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\r\n//Gestures\r\nimport {\r\n  HammerModule,\r\n  HammerGestureConfig,\r\n  HAMMER_GESTURE_CONFIG,\r\n} from \"@angular/platform-browser\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\ndeclare var Hammer: any;\r\n//Config to allow swipe gestures on carousel\r\n@Injectable()\r\nexport class MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    pan: { direction: Hammer.DIRECTION_All },\r\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\r\n  };\r\n\r\n  buildHammer(element: HTMLElement) {\r\n    const mc = new Hammer(element, {\r\n      touchAction: \"auto\",\r\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\r\n        ? Hammer.PointerEventInput\r\n        : Hammer.TouchInput,\r\n      recognizers: [\r\n        [\r\n          Hammer.Swipe,\r\n          {\r\n            direction: Hammer.DIRECTION_HORIZONTAL,\r\n          },\r\n        ],\r\n      ],\r\n    });\r\n    return mc;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SearchBarComponent,\r\n    AddCardFormComponent,\r\n    CarouselComponent,\r\n    CardComponent,\r\n    AddLectureFormComponent,\r\n    LecturesComponent,\r\n    HomePageComponent,\r\n    CardsPageComponent,\r\n    UpdateCardFormComponent,\r\n    LoginPageComponent,\r\n    LoginFormComponent,\r\n    SignupPageComponent,\r\n    SignupFormComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    HammerModule,\r\n    CollapseModule,\r\n    TooltipModule,\r\n    StoreModule.forRoot({}, {}),\r\n    KatexModule,\r\n  ],\r\n  providers: [\r\n    StatesService,\r\n    HttpService,\r\n\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: MyHammerConfig,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\n\r\n@Component({\r\n  selector: \"app-add-card-form\",\r\n  templateUrl: \"./add-card-form.component.html\",\r\n  styleUrls: [\"./add-card-form.component.css\"],\r\n})\r\nexport class AddCardFormComponent implements OnInit {\r\n  lecture: Vorlesung;\r\n  newCard: Card;\r\n  hidden: boolean;\r\n  Contentlength: number;\r\n  themaLength: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService,\r\n    private http: HttpService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.http\r\n      .getCurrentLecture()\r\n      .subscribe((lecture) => (this.lecture = lecture));\r\n  }\r\n  setStyle() {}\r\n  onSubmit(f: NgForm) {\r\n    this.newCard = new Card(f.value.thema, f.value.content, this.lecture.abrv);\r\n    this.cardsService.addCard(this.newCard).subscribe((res) => {\r\n      f.reset();\r\n    });\r\n  }\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        ngModel\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(content, thema)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n@Component({\r\n  selector: \"app-add-lecture-form\",\r\n  templateUrl: \"./add-lecture-form.component.html\",\r\n  styleUrls: [\"./add-lecture-form.component.css\"]\r\n})\r\nexport class AddLectureFormComponent implements OnInit {\r\n  constructor(\r\n    private http: HttpService,\r\n    private statesService: StatesService\r\n  ) {}\r\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\r\n  ngOnInit(): void {}\r\n  onSubmit(f: NgForm) {\r\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv);\r\n    this.statesService.setLoadingState(true);\r\n    this.http.addLecture(newLecture).subscribe(response => {\r\n      this.statesService.setLoadingState(false);\r\n      this.emitVl.emit(newLecture);\r\n    });\r\n\r\n    f.reset();\r\n  }\r\n\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  isDisabled(name, abrv) {\r\n    if (!name.value || !abrv.value) {\r\n      return true;\r\n    } else {\r\n      return (\r\n        abrv.value.length == 0 ||\r\n        abrv.value.length < 3 ||\r\n        abrv.value.length > 7 ||\r\n        name.value.length == 0 ||\r\n        name.value.length > 60\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div id=\"addLecture\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Vorlesung hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Vorlesungsname</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Datenstrukturen und Algorithmen\"\r\n        minlength=\"3\"\r\n        required\r\n        #name=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\r\n        >{{ getLength(name) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"abrv\">Abkürzung</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"abrv\"\r\n        name=\"abrv\"\r\n        required\r\n        #abrv=\"ngModel\"\r\n        ngModel\r\n        placeholder=\"Dsal\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\r\n        >{{ getLength(abrv) }}/7\r\n      </small>\r\n    </div>\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(name, abrv)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { KatexOptions } from \"ng-katex\";\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.css\"],\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() card: Card;\r\n  @ViewChild(\"test\", { static: true }) content;\r\n  constructor(private cs: CardsService) {}\r\n  public isCollapsed = true;\r\n  ngOnInit(): void {\r\n    this.cs.getActiveCardIndex().subscribe((change) => {\r\n      //hides te card content when carousel slides\r\n      this.content.hide();\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\" id=\"`{{ card._id }}`\">\r\n  <div class=\"card-header\">\r\n    {{ card.thema }}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <button\r\n      mdbBtn\r\n      color=\"primary\"\r\n      class=\"btn btn-light\"\r\n      type=\"button\"\r\n      (click)=\"test.toggle()\"\r\n      mdbWavesEffect\r\n    >\r\n      Mehr dazu\r\n      <i class=\"fas fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"\" mdbCollapse #test>\r\n      <pre lang=\"de\">\r\n        <ng-katex-paragraph paragraph={{card.content}}></ng-katex-paragraph>\r\n      </pre>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, HostListener, ViewChild } from \"@angular/core\";\r\n\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { NgbCarouselConfig, NgbSlideEvent } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: \"app-carousel\",\r\n  templateUrl: \"./carousel.component.html\",\r\n  styleUrls: [\"./carousel.component.css\"],\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  lecture: Vorlesung;\r\n\r\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\r\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\r\n    this.carousel.previousSlide();\r\n  }\r\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\r\n    this.carousel.nextSlide();\r\n  }\r\n  cards: Card[]; //array of all the cards\r\n  activeSlide: number = 0;\r\n  title: string;\r\n  addComponentHidden: boolean;\r\n  formShow: boolean;\r\n  formMode: string;\r\n\r\n  constructor(\r\n    config: NgbCarouselConfig,\r\n    private httpService: HttpService,\r\n    private stateService: StatesService,\r\n    private cardsService: CardsService\r\n  ) {\r\n    config.interval = -1;\r\n    config.wrap = true;\r\n    config.keyboard = true;\r\n    config.pauseOnHover = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getCurrentLecture().subscribe((lecture) => {\r\n      this.lecture = lecture;\r\n      this.title = this.lecture.name;\r\n    });\r\n    this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\r\n    this.stateService.setFormMode(\"none\");\r\n    this.stateService.getFormMode().subscribe((mode) => {\r\n      this.formShow = mode == \"add\";\r\n      this.formMode = mode;\r\n    });\r\n\r\n    this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      if (this.carousel && this.activeSlide != index) {\r\n        this.activeSlide = index;\r\n        this.carousel.selectSlide(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleAddView(): void {\r\n    if (this.formMode != \"edit\") {\r\n      if (this.formMode == \"add\") {\r\n        this.stateService.setFormMode(\"none\");\r\n      } else {\r\n        this.stateService.setFormMode(\"add\");\r\n      }\r\n    }\r\n  }\r\n  enableEdit() {\r\n    this.stateService.setFormMode(\"edit\");\r\n  }\r\n\r\n  setClass() {\r\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\r\n  }\r\n\r\n  selectSlide(n: number) {\r\n    this.carousel.selectSlide(n.toString());\r\n  }\r\n  showRandomCard() {\r\n    var rand: number = this.activeSlide;\r\n    var count = 0;\r\n    while (count < 5 && rand == this.activeSlide) {\r\n      //calculate a new random index\r\n      count++;\r\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\r\n    }\r\n    this.carousel.selectSlide(rand.toString());\r\n  }\r\n  goToPrev() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.previousSlide();\r\n    }\r\n  }\r\n  goToNext() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.nextSlide();\r\n    }\r\n  }\r\n  onSlide(slideEvent) {\r\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\r\n  }\r\n}\r\n","<h3 id=\"vorlesung\">{{ title }}</h3>\r\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"rand\"\r\n    placement=\"top\"\r\n    ngbTooltip=\"Zufall\"\r\n    (click)=\"showRandomCard()\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n  >\r\n    <div class=\"fas fa-random\"></div>\r\n  </button>\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"editCard\"\r\n    type=\"button\"\r\n    placement=\"top\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n    (click)=\"enableEdit()\"\r\n    ngbTooltip=\"Bearbeiten\"\r\n  >\r\n    <div class=\"fas fa-pen\"></div>\r\n  </button>\r\n\r\n  <button\r\n    [ngClass]=\"setClass()\"\r\n    id=\"toggleAdd\"\r\n    type=\"button\"\r\n    data-toggle=\"button\"\r\n    (click)=\"toggleAddView()\"\r\n    placement=\"top\"\r\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\r\n  <a (click)=\"goToPrev()\">\r\n    <span class=\"fas fa-chevron-left\"></span>\r\n  </a>\r\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\r\n    <mdb-carousel\r\n      (activeSlideChange)=\"onSlide($event)\"\r\n      #mycarousel\r\n      [(activeSlideIndex)]=\"activeSlide\"\r\n      [animation]=\"'slide'\"\r\n      [isControls]=\"false\"\r\n      [allowSwipe]=\"true\"\r\n      [interval]=\"'0'\"\r\n      ><ng-container *ngFor=\"let card of cards; index as i\">\r\n        <mdb-carousel-item [id]=\"i.toString()\">\r\n          <app-card [card]=\"card\"></app-card>\r\n        </mdb-carousel-item>\r\n      </ng-container>\r\n    </mdb-carousel>\r\n  </div>\r\n  <a (click)=\"goToNext()\">\r\n    <span class=\"fas fa-chevron-right\"></span>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Card } from \"../../models/Card\";\r\n@Component({\r\n  selector: \"app-lectures\",\r\n  templateUrl: \"./lectures.component.html\",\r\n  styleUrls: [\"./lectures.component.css\"],\r\n})\r\nexport class LecturesComponent implements OnInit {\r\n  lectures: Vorlesung[];\r\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\r\n  @Input() newVl: Vorlesung;\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getAllLectures().subscribe((lectures) => {\r\n      this.lectures = lectures;\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.newVl) {\r\n      console.log(\"got new vl: \", this.newVl);\r\n      this.lectures.push(this.newVl);\r\n    }\r\n  }\r\n  setLink(lecture: Vorlesung) {\r\n    return \"/vorlesung/\" + lecture.abrv;\r\n  }\r\n}\r\n","<ul class=\"list list-group\">\r\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\r\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-login-form\",\r\n  templateUrl: \"./login-form.component.html\",\r\n  styleUrls: [\"./login-form.component.css\"],\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  public errors;\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n  submit(form: NgForm) {\r\n    this.http.login(form.value).subscribe(\r\n      (response) => {\r\n        if (response.status == 200) {\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      },\r\n      (error) => {\r\n        if ((error.headers.status = 422)) {\r\n          this.errors = error.error.errors;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  isDisabled(username, password) {\r\n    if (!(username.value && password.value)) {\r\n      return true;\r\n    }\r\n    return username.value.length < 5 || password.value.length < 7;\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"username\"\r\n        required\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n      <input\r\n        required\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        id=\"remember\"\r\n        name=\"remember\"\r\n        #remember=\"ngModel\"\r\n        [checked]=\"true\"\r\n        ngModel\r\n      />\r\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, password)\"\r\n    >\r\n      Login\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { HttpService } from \"src/app/services/http.service\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { StatesService } from \"src/app/services/states.service\";\r\n@Component({\r\n  selector: \"app-nav-bar\",\r\n  templateUrl: \"./nav-bar.component.html\",\r\n  styleUrls: [\"./nav-bar.component.css\"],\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  public user: User;\r\n  public cards: Card[];\r\n\r\n  public loading: boolean = false;\r\n  public constructor(\r\n    private router: Router,\r\n    private titleService: Title,\r\n    private http: HttpService,\r\n    private cardsService: CardsService,\r\n    private statesService: StatesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setPageTitle();\r\n    this.user = this.http.getUser();\r\n    this.statesService.getLoadingState().subscribe((val) => {\r\n      this.loading = val;\r\n    });\r\n    if (\r\n      this.router.url != \"/\" &&\r\n      this.router.url != \"/login\" &&\r\n      this.router.url != \"/signup\"\r\n    )\r\n      this.cardsService.getCards().subscribe((cards) => {\r\n        this.cards = cards;\r\n      });\r\n  }\r\n\r\n  isActive(path: string): string {\r\n    return path === this.router.url ? \"active\" : \"\";\r\n  }\r\n  setPageTitle(): void {\r\n    let currentTitle: string;\r\n    switch (this.router.url) {\r\n      case \"/login\":\r\n        currentTitle = \"Login\";\r\n        break;\r\n      case \"/signup\":\r\n        currentTitle = \"Sign Up\";\r\n        break;\r\n      case \"/\":\r\n        currentTitle = \"Home\";\r\n        break;\r\n      default:\r\n        currentTitle = \"Cards\";\r\n    }\r\n    this.titleService.setTitle(currentTitle);\r\n  }\r\n  logout() {\r\n    this.http.logout();\r\n    this.user = null;\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  role=\"alert\"\r\n  style=\"padding-right: 0;\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\" id=\"navlist\">\r\n          <li class=\"{{ isActive('/') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\r\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\r\n            >\r\n          </li>\r\n\r\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\"\r\n              ><i class=\"fas fa-user\"></i> Login</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/signup\"\r\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\r\n            <div class=\"dropdown\">\r\n              <a\r\n                class=\"nav-link\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i class=\"fas fa-user-circle\"></i> Account\r\n              </a>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a\r\n                  class=\"dropdown-item disabled\"\r\n                  href=\"#\"\r\n                  placement=\"bottom\"\r\n                  ngbTooltip=\"im Aufbau\"\r\n                  >Account management</a\r\n                >\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">\r\n                  Logout\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\r\n      <app-search-bar></app-search-bar>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<div id=\"progress\">\r\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\n\r\n@Component({\r\n  selector: \"app-search-bar\",\r\n  templateUrl: \"./search-bar.component.html\",\r\n  styleUrls: [\"./search-bar.component.css\"],\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService,\r\n    private http: HttpService\r\n  ) {}\r\n  cards: Card[];\r\n  suggestions: SearchSuggestion[];\r\n  uInput: string;\r\n  clearSuggestions: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.stateService.getHideSuggestions().subscribe((value) => {\r\n      this.clearSuggestions = value;\r\n      if (value) {\r\n        this.suggestions = [];\r\n      }\r\n    });\r\n    this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n      cards.forEach((card) => {\r\n        if (card.thema == null) {\r\n          card.thema = \"\";\r\n        }\r\n        if (card.content == null) {\r\n          card.content = \"\";\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  findMatches(e: Event) {\r\n    this.stateService.setHideSuggestions(false); //show suggestions\r\n    if (this.uInput && this.uInput.length > 2) {\r\n      this.suggestions = [];\r\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\r\n\r\n      for (let i = 0; i < this.cards.length; i++) {\r\n        if (this.cards[i].thema.match(regex)) {\r\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  navigateTo(e: Event, index: number) {\r\n    e.preventDefault();\r\n\r\n    this.cardsService.setNewCardIndex(index);\r\n  }\r\n}\r\n","<input\r\n  [(ngModel)]=\"uInput\"\r\n  (input)=\"findMatches($event)\"\r\n  class=\"form-control float-right\"\r\n  id=\"search\"\r\n  type=\"search\"\r\n  placeholder=\"Thema suchen\"\r\n/>\r\n<div *ngIf=\"suggestions\" id=\"matches\">\r\n  <ul class=\"list-group\">\r\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\r\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\r\n        suggestion.title\r\n      }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-signup-form\",\r\n  templateUrl: \"./signup-form.component.html\",\r\n  styleUrls: [\"./signup-form.component.css\"],\r\n})\r\nexport class SignupFormComponent implements OnInit {\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  errors;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.http.createAccount(form.value).subscribe(\r\n      (response) => {\r\n        if (response) {\r\n              this.router.navigate([\"/\"]);\r\n        }\r\n      },\r\n      (error) => {\r\n        if ((error.headers.status = 422)) {\r\n          console.log(error);\r\n          this.errors = error.error.errors;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  isDisabled(username, email, password, password2) {\r\n    if (!(username.value && email.value && password.value)) {\r\n      return true;\r\n    }\r\n    return (\r\n      username.value.length < 5 ||\r\n      password.value.length < 7 ||\r\n      password.value != password2.value ||\r\n      !this.checkEmail(email.value)\r\n    );\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        required\r\n        maxlength=\"20\"\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email Adresse</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        aria-describedby=\"emailHelp\"\r\n        required\r\n        #email=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n      />\r\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort wiederholen</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password2\"\r\n        id=\"password2\"\r\n        #password2=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n        [style]=\"setStyle(password, password2)\"\r\n      />\r\n      <small class=\"form-text\"> </small>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, email, password, password2)\"\r\n    >\r\n      Account erstellen\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-update-card-form\",\r\n  templateUrl: \"./update-card-form.component.html\",\r\n  styleUrls: [\"./update-card-form.component.css\"],\r\n})\r\nexport class UpdateCardFormComponent implements OnInit {\r\n  public cardCopy: Card;\r\n  private cards: Card[];\r\n  private cardIndex: number; //saves the cardindex which the user is currently updating\r\n  private activeCardIndex: number; //saves the active cardindex\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private httpService: HttpService,\r\n    private statesService: StatesService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n    });\r\n    this.cardsService.getActiveCardIndex().subscribe((index) => {\r\n      this.activeCardIndex = index;\r\n      if (this.cards) {\r\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\r\n      }\r\n      this.cardIndex = this.activeCardIndex;\r\n    });\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n    this.cardCopy.content = f.value.content;\r\n    this.cardCopy.thema = f.value.thema;\r\n    this.cardsService\r\n      .updateCard({ ...this.cardCopy }, this.cardIndex)\r\n      .subscribe((resp) => {\r\n        f.reset();\r\n      });\r\n  }\r\n  cancelEdit() {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: \"400px\",\r\n    });\r\n  }\r\n\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"dialog-overview-example-dialog\",\r\n  templateUrl: \"dialog.html\",\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private service: StatesService\r\n  ) {}\r\n\r\n  cancel() {\r\n    this.service.setFormMode(\"reset\");\r\n    this.service.setLoadingState(false);\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte bearbeiten</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.thema\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.content\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        class=\"btn btn-success mb-2 mr-1\"\r\n        type=\"submit\"\r\n        value=\"Sichern\"\r\n        [disabled]=\"isDisabled(content, thema)\"\r\n      />\r\n      <input\r\n        class=\"btn btn-danger mb-2\"\r\n        type=\"button\"\r\n        value=\"Abbruch\"\r\n        (click)=\"cancelEdit()\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n","<h1 mat-dialog-title>Abbruch</h1>\r\n<div mat-dialog-content>\r\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\r\n</div>\r\n<hr />\r\n<div mat-dialog-actions style=\"text-align: right;\">\r\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\r\n    Nein,zurück\r\n  </button>\r\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\r\n</div>\r\n","export class Card {\r\n  _id?: string;\r\n  thema: string;\r\n  content: string;\r\n  abrv: string;\r\n  constructor(thema, content, abrv) {\r\n    this.thema = thema;\r\n    this.content = content;\r\n    this.abrv = abrv;\r\n  }\r\n}\r\n","export class Vorlesung {\r\n  name: string;\r\n  abrv: string;\r\n  constructor(name, abrv) {\r\n    this.name = name;\r\n    this.abrv = abrv;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n@Component({\r\n  selector: \"app-cards-page\",\r\n  templateUrl: \"./cards-page.component.html\",\r\n  styleUrls: [\"./cards-page.component.css\"],\r\n})\r\nexport class CardsPageComponent implements OnInit {\r\n  public vlAbrv: string;\r\n  public ativeCard: number;\r\n  public lecture: Vorlesung;\r\n  public loading: boolean = true;\r\n  public formMode: string = \"none\";\r\n  public cards: Card[];\r\n  public errors: string[];\r\n  @ViewChild(\"alert\", { static: false }) alert: ElementRef;\r\n\r\n  @HostListener(\"click\", [\"$event.target\"])\r\n  onClick() {\r\n    this.stateServie.setHideSuggestions(true);\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private httpService: HttpService,\r\n    private stateServie: StatesService,\r\n    private cardsService: CardsService,\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.title.setTitle(\"Cards\");\r\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\r\n    this.cardsService.getCards().subscribe((cards) => {\r\n      if (cards.length == 0) {\r\n        this.stateServie.setFormMode(\"add\");\r\n      }\r\n    });\r\n\r\n    this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      this.ativeCard = index;\r\n    });\r\n    this.stateServie\r\n      .getLoadingState()\r\n      .subscribe((value) => (this.loading = value));\r\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\r\n    this.cardsService.getErrors().subscribe((errors) => (this.errors = errors));\r\n  }\r\n  closeAlert(i: number) {\r\n    this.cardsService.removeError(i);\r\n  }\r\n  setLoading(loading: boolean): void {\r\n    this.loading = loading;\r\n    this.stateServie.setLoadingState(loading);\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<br />\r\n<div class=\"container\">\r\n  <div\r\n    #alert\r\n    class=\"alert alert-warning alert-dismissible fade show\"\r\n    role=\"alert\"\r\n    *ngFor=\"let error of errors; index as i\"\r\n  >\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"closeAlert(i)\"\r\n    >\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n    {{ error }}\r\n  </div>\r\n\r\n  <app-carousel></app-carousel>\r\n  <br />\r\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\r\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { from } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  public loading: boolean = false;\r\n  public newVl: Vorlesung;\r\n  constructor(private statesService: StatesService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.statesService.getLoadingState().subscribe((val) => {\r\n      this.loading = val;\r\n    });\r\n  }\r\n\r\n  emitVl(lecture: Vorlesung) {\r\n    console.log(\"vl: \", lecture);\r\n    this.newVl = lecture;\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n\r\n<div class=\"container\">\r\n  <app-lectures [newVl]=\"newVl\"></app-lectures>\r\n  <br />\r\n  <app-add-lecture-form></app-add-lecture-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div>\r\n  <app-login-form></app-login-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div>\r\n  <app-signup-form></app-signup-form>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { Subject, Observable, BehaviorSubject, of, from } from \"rxjs\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CardsService {\r\n  private cards$: BehaviorSubject<Card[]>;\r\n  private abrv: string;\r\n  private errors$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>(\r\n    []\r\n  );\r\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\r\n    0\r\n  );\r\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\r\n    number\r\n  >(0);\r\n  private cards: Card[];\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private statesService: StatesService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  getCards(): Observable<Card[]> {\r\n    let abrv = this.router.url.split(/vorlesung\\//)[1];\r\n    if (this.cards$ && this.abrv == abrv) {\r\n      //cards were already loaded for this lecture\r\n      return this.cards$.asObservable();\r\n    } else {\r\n      this.abrv = abrv;\r\n      //returns an observable of the cards from http service while also initializing the cards internally for reuse\r\n      return this.httpService.getCardsFromLectureAbrv(abrv).pipe(\r\n        tap((res) => {\r\n          if (this.cards$) {\r\n            this.cards$.next(res.body);\r\n          } else {\r\n            this.cards$ = new BehaviorSubject<Card[]>(res.body);\r\n          }\r\n        }),\r\n        map((res) => res.body)\r\n      );\r\n    }\r\n  }\r\n\r\n  getErrors() {\r\n    return this.errors$.asObservable();\r\n  }\r\n  removeError(index: number) {\r\n    let errors = this.errors$.getValue();\r\n    errors.splice(index, 1);\r\n    this.errors$.next(errors);\r\n  }\r\n  updateCard(card: Card, index: number): Observable<any> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.httpService.updateCard(card).pipe(\r\n      tap(\r\n        (resp) => {\r\n          this.statesService.setLoadingState(false);\r\n          this.statesService.setFormMode(\"reset\");\r\n          let cards = this.cards$.getValue();\r\n          cards[index] = card;\r\n          this.cards$.next(cards);\r\n        },\r\n        (error) => {\r\n          let errors = this.errors$.getValue();\r\n          errors.push(error.error);\r\n          this.errors$.next(errors);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      )\r\n    );\r\n  }\r\n  addCard(card: Card): Observable<any> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.httpService.addCard(card).pipe(\r\n      tap((response) => {\r\n        this.statesService.setLoadingState(false);\r\n        card._id = response.body;\r\n        let cards = this.cards$.getValue();\r\n        cards.push(card);\r\n        this.cards$.next(cards);\r\n        setTimeout(() => {\r\n          //show new card timeout needed because the carousel needs time to refresh\r\n          //its view\r\n          this.setNewCardIndex(cards.length - 1);\r\n        }, 20);\r\n      })\r\n    );\r\n  }\r\n  getNewCardIndex(): Observable<number> {\r\n    return this.newCardIndex$.asObservable();\r\n  }\r\n  setNewCardIndex(i: number) {\r\n    this.newCardIndex$.next(i);\r\n  }\r\n  setActiveCardIndex(i: number) {\r\n    this.activeCardIndex$.next(i);\r\n  }\r\n  getActiveCardIndex(): Observable<number> {\r\n    return this.activeCardIndex$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject, of } from \"rxjs\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { Router } from \"@angular/router\";\r\n//Models\r\nimport { User } from \"../models/User\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class HttpService {\r\n  private urlBase: string = \"api/\";\r\n  private user: User;\r\n  private lecture$: BehaviorSubject<Vorlesung>; //holds the current lecture\r\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private statesService: StatesService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  //Cards\r\n  getCardsFromLectureAbrv(abrv: string): Observable<HttpResponse<any[]>> {\r\n    this.statesService.setLoadingState(true);\r\n    {\r\n      return this.http\r\n        .get<Card[]>(this.urlBase + \"cards/?abrv=\" + abrv, {\r\n          observe: \"response\",\r\n        })\r\n        .pipe(\r\n          tap((res) => {\r\n            this.statesService.setLoadingState(false);\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  addCard(card: Card): Observable<HttpResponse<any>> {\r\n    //Cards müssen richtig im Frontend definiert werden\r\n    let id: string;\r\n    if (this.user) {\r\n      id = this.user.id;\r\n    }\r\n    return this.http.post<any>(\r\n      this.urlBase + \"cards/new\",\r\n      { card: card, userId: id },\r\n      this.httpOptions\r\n    );\r\n  }\r\n  updateCard(card: Card): Observable<HttpResponse<any>> {\r\n    return this.http.put<any>(\r\n      this.urlBase + \"cards/update\",\r\n      { card: card },\r\n      {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      }\r\n    );\r\n  }\r\n\r\n  //Lectures\r\n  getAllLectures(): Observable<Vorlesung[]> {\r\n    this.statesService.setLoadingState(true);\r\n    if (this.lectures$) {\r\n      this.statesService.setLoadingState(false);\r\n      return this.lectures$.asObservable();\r\n    } else {\r\n      return this.http\r\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\r\n          observe: \"response\",\r\n        })\r\n        .pipe(\r\n          tap((res) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body);\r\n          }),\r\n          map((res) => res.body)\r\n        );\r\n    }\r\n  }\r\n  setCurrentLecture(lecture: Vorlesung) {\r\n    if (this.lecture$) {\r\n      this.lecture$.next(lecture);\r\n    } else {\r\n      this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\r\n    }\r\n  }\r\n  getCurrentLecture(): Observable<Vorlesung> {\r\n    let abrv = this.router.url.split(/vorlesung\\//)[1];\r\n    if (this.lecture$ && this.lecture$.getValue().abrv == abrv) {\r\n      return this.lecture$.asObservable();\r\n    } else {\r\n      return this.http\r\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\r\n          observe: \"response\",\r\n        })\r\n        .pipe(\r\n          tap((res) => {\r\n            if (this.lecture$) {\r\n              this.lecture$.next(res.body);\r\n            } else {\r\n              this.lecture$ = new BehaviorSubject<Vorlesung>(res.body);\r\n            }\r\n          }),\r\n          map((res) => res.body)\r\n        );\r\n    }\r\n  }\r\n\r\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .post<any>(\r\n        this.urlBase + \"lectures/new\",\r\n        { lecture: lecture },\r\n        {\r\n          headers: this.httpOptions.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap((res) => {\r\n          //add the new lecture to the lectures subject\r\n          this.statesService.setLoadingState(false);\r\n          let lectures = this.lectures$.getValue();\r\n          lectures.push(lecture);\r\n          this.lectures$.next(lectures);\r\n        })\r\n      );\r\n  }\r\n\r\n  getLectureByAbrv(abrv: string): Vorlesung {\r\n    if (this.lectures$) {\r\n      let lectures = this.lectures$.getValue();\r\n      for (const lecture of lectures) {\r\n        if (lecture.abrv == abrv) {\r\n          if (this.lecture$) {\r\n            this.lecture$.next(lecture);\r\n          } else {\r\n            this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\r\n          }\r\n\r\n          return lecture;\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  //User\r\n  login(form): Observable<HttpResponse<User>> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .post<User>(this.urlBase + \"login\", form, {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      })\r\n      .pipe(\r\n        tap((res) => {\r\n          this.statesService.setLoadingState(false);\r\n          this.user = res.body;\r\n          if (form.remember) {\r\n            localStorage.setItem(\"user\", JSON.stringify(this.user));\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  getUser(): User {\r\n    if (!this.user) {\r\n      this.user = JSON.parse(localStorage.getItem(\"user\"));\r\n    }\r\n    return this.user;\r\n  }\r\n  logout() {\r\n    this.statesService.setLoadingState(true);\r\n    this.http.get<any>(this.urlBase + \"user/logout\").subscribe((err) => {\r\n      this.statesService.setLoadingState(false);\r\n      if (err) console.log(err);\r\n    });\r\n    localStorage.removeItem(\"user\");\r\n    this.user = null;\r\n  }\r\n\r\n  //form = {username,email,password}\r\n  createAccount(form): Observable<HttpResponse<User>> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .post<User>(this.urlBase + \"user/new\", form, {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      })\r\n      .pipe(\r\n        tap((res) => {\r\n          this.user = res.body;\r\n          this.statesService.setLoadingState(false);\r\n        })\r\n      );\r\n  }\r\n}\r\n","//This service is made to manage states across components\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class StatesService {\r\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\r\n  private lastFormMode: string;\r\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  constructor() {}\r\n\r\n  getFormMode(): Observable<string> {\r\n    return this.formMode$.asObservable();\r\n  }\r\n  setFormMode(mode: string): void {\r\n    if (mode == \"reset\") {\r\n      if (!this.lastFormMode) {\r\n        //last form mode is undefined\r\n        this.lastFormMode = \"none\";\r\n      } // last Form mode defined\r\n      this.formMode$.next(this.lastFormMode);\r\n    } else {\r\n      this.formMode$.next(mode);\r\n      if (mode != \"edit\") this.lastFormMode = mode;\r\n    }\r\n  }\r\n\r\n  getLoadingState(): BehaviorSubject<boolean> {\r\n    return this.loading$;\r\n  }\r\n  setLoadingState(value: boolean) {\r\n    this.loading$.next(value);\r\n  }\r\n  setHideSuggestions(value: boolean) {\r\n    this.hideSgtn$.next(value);\r\n  }\r\n  getHideSuggestions(): Observable<boolean> {\r\n    return this.hideSgtn$.asObservable();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport \"hammerjs\";\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"]}