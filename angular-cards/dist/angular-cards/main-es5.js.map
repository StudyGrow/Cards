{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/signup-form/signup-form.component.ts","webpack:///src/app/components/signup-form/signup-form.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/models/Vorlesung.ts","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/routes/login-page/login-page.component.ts","webpack:///src/app/routes/login-page/login-page.component.html","webpack:///src/app/routes/signup-page/signup-page.component.ts","webpack:///src/app/routes/signup-page/signup-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","titleService","setTitle","selector","templateUrl","styleUrls","MyHammerConfig","overrides","pan","direction","Hammer","DIRECTION_All","swipe","DIRECTION_VERTICAL","element","mc","touchAction","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","recognizers","Swipe","DIRECTION_HORIZONTAL","AppModule","provide","useClass","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","http","getCurrentLecture","subscribe","lecture","f","newCard","value","thema","content","abrv","addCard","res","reset","color","length","elem","onSubmit","AddLectureFormComponent","statesService","emitVl","newLecture","name","setLoadingState","addLecture","response","emit","field","max","CardComponent","paragraph","isCollapsed","CarouselComponent","config","httpService","activeSlide","interval","wrap","keyboard","pauseOnHover","event","carousel","previousSlide","nextSlide","title","getCards","cards","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","selectSlide","n","toString","rand","count","Math","floor","random","slideEvent","setActiveCardIndex","parseInt","relatedTarget","showRandomCard","enableEdit","toggleAddView","static","LecturesComponent","lecturesLoaded","getAllLectures","lectures","newVl","console","log","push","LoginFormComponent","form","login","status","navigate","error","headers","errors","username","password","submit","NavBarComponent","loading","setPageTitle","user","getUser","getLoadingState","val","url","currentTitle","logout","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","forEach","card","setHideSuggestions","uInput","regex","RegExp","i","match","preventDefault","setNewCardIndex","findMatches","SignupFormComponent","createAccount","password2","email","test","checkEmail","UpdateCardFormComponent","dialog","getActiveCardIndex","activeCardIndex","cardCopy","cardIndex","updateCard","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","close","onNoClick","cancel","Card","Vorlesung","CardsPageComponent","route","stateServie","vlAbrv","snapshot","paramMap","get","ativeCard","HomePageComponent","LoginPageComponent","SignupPageComponent","CardsService","newCardIndex$","activeCardIndex$","split","cards$","asObservable","getCardsFromLectureAbrv","pipe","next","body","resp","getValue","_id","providedIn","HttpService","urlBase","httpOptions","observe","post","userId","put","lectures$","lecture$","remember","localStorage","setItem","JSON","stringify","parse","getItem","err","removeItem","StatesService","formMode$","loading$","hideSgtn$","lastFormMode","environment","production","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\n  { path: \"login\", component: LoginPageComponent },\n  { path: \"signup\", component: SignupPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  public constructor(private router: Router, private titleService: Title) {\n    this.titleService.setTitle(\"Home\");\n  }\n}\n","<router-outlet></router-outlet>\n","//Modules\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { CarouselModule, WavesModule } from \"angular-bootstrap-md\";\nimport { KatexModule } from 'ng-katex';\n\n//Components\nimport { AppComponent } from \"./app.component\";\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\nimport { CardComponent } from \"./components/card/card.component\";\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\n//Services\nimport { StatesService } from \"./services/states.service\";\nimport { HttpService } from \"./services/http.service\";\nimport { CardsService } from \"./services/cards.service\";\n\n//Material Modules\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\n//Gestures\nimport {\n  HammerModule,\n  HammerGestureConfig,\n  HAMMER_GESTURE_CONFIG,\n} from \"@angular/platform-browser\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\nimport { StoreModule } from \"@ngrx/store\";\ndeclare var Hammer: any;\n//Config to allow swipe gestures on carousel\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = <any>{\n    pan: { direction: Hammer.DIRECTION_All },\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\n  };\n\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: \"auto\",\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\n        ? Hammer.PointerEventInput\n        : Hammer.TouchInput,\n      recognizers: [\n        [\n          Hammer.Swipe,\n          {\n            direction: Hammer.DIRECTION_HORIZONTAL,\n          },\n        ],\n      ],\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SearchBarComponent,\n    AddCardFormComponent,\n    CarouselComponent,\n    CardComponent,\n    AddLectureFormComponent,\n    LecturesComponent,\n    HomePageComponent,\n    CardsPageComponent,\n    UpdateCardFormComponent,\n    LoginPageComponent,\n    LoginFormComponent,\n    SignupPageComponent,\n    SignupFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    CarouselModule,\n    WavesModule,\n    HammerModule,\n    StoreModule.forRoot({}, {}),\n    KatexModule\n  ],\n  providers: [\n    StatesService,\n    HttpService,\n\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-add-card-form\",\n  templateUrl: \"./add-card-form.component.html\",\n  styleUrls: [\"./add-card-form.component.css\"],\n})\nexport class AddCardFormComponent implements OnInit {\n  lecture: Vorlesung;\n  newCard: Card;\n  hidden: boolean;\n  Contentlength: number;\n  themaLength: number;\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.http\n      .getCurrentLecture()\n      .subscribe((lecture) => (this.lecture = lecture));\n  }\n  setStyle() {}\n  onSubmit(f: NgForm) {\n    this.newCard = new Card(f.value.thema, f.value.content, this.lecture.abrv);\n    this.cardsService.addCard(this.newCard).subscribe((res) => {\n      f.reset();\n    });\n  }\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        ngModel\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(content, thema)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\n@Component({\n  selector: \"app-add-lecture-form\",\n  templateUrl: \"./add-lecture-form.component.html\",\n  styleUrls: [\"./add-lecture-form.component.css\"]\n})\nexport class AddLectureFormComponent implements OnInit {\n  constructor(\n    private http: HttpService,\n    private statesService: StatesService\n  ) {}\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\n  ngOnInit(): void {}\n  onSubmit(f: NgForm) {\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv);\n    this.statesService.setLoadingState(true);\n    this.http.addLecture(newLecture).subscribe(response => {\n      this.statesService.setLoadingState(false);\n      this.emitVl.emit(newLecture);\n    });\n\n    f.reset();\n  }\n\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  isDisabled(name, abrv) {\n    if (!name.value || !abrv.value) {\n      return true;\n    } else {\n      return (\n        abrv.value.length == 0 ||\n        abrv.value.length < 3 ||\n        abrv.value.length > 7 ||\n        name.value.length == 0 ||\n        name.value.length > 60\n      );\n    }\n  }\n}\n","<div id=\"addLecture\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Vorlesung hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"name\">Vorlesungsname</label>\n      <input\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Datenstrukturen und Algorithmen\"\n        minlength=\"3\"\n        required\n        #name=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\n        >{{ getLength(name) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"abrv\">Abkürzung</label>\n      <input\n        class=\"form-control\"\n        id=\"abrv\"\n        name=\"abrv\"\n        required\n        #abrv=\"ngModel\"\n        ngModel\n        placeholder=\"Dsal\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\n        >{{ getLength(abrv) }}/7\n      </small>\n    </div>\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(name, abrv)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Card } from \"../../models/Card\";\nimport { KatexOptions } from 'ng-katex';\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"]\n})\nexport class CardComponent implements OnInit {\n  @Input() card: Card;\n  paragraph: string = `\n  You can write text, that contains expressions like this: $x ^ 2 + 5$ inside them. As you probably know.\n  You also can write expressions in display mode as follows: $$\\\\sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$$.\n  In first case you will need to use \\\\$expression\\\\$ and in the second one \\\\$\\\\$expression\\\\$\\\\$.\n  To scape the \\\\$ symbol it's mandatory to write as follows: \\\\\\\\$\n`;\n  constructor() {}\n  public isCollapsed = true;\n  ngOnInit(): void {}\n}\n","<div class=\"card\" id=\"`{{ card._id }}`\">\n  <div class=\"card-header\">\n    {{ card.thema }}\n  </div>\n  <div class=\"card-body\">\n    <button\n      class=\"btn btn-light\"\n      type=\"button\"\n      (click)=\"isCollapsed = !isCollapsed\"\n    >\n      Mehr dazu\n      <i class=\"fas fa-caret-down\"></i>\n    </button>\n    <div class=\"collapse\" [ngbCollapse]=\"isCollapsed\">\n      <pre lang=\"de\">\n        <ng-katex-paragraph paragraph={{card.content}}></ng-katex-paragraph>\n      </pre>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { NgbCarouselConfig, NgbSlideEvent } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrls: [\"./carousel.component.css\"],\n})\nexport class CarouselComponent implements OnInit {\n  lecture: Vorlesung;\n\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\n    this.carousel.previousSlide();\n  }\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\n    this.carousel.nextSlide();\n  }\n  cards: Card[]; //array of all the cards\n  activeSlide: number = 0;\n  title: string;\n  addComponentHidden: boolean;\n  formShow: boolean;\n  formMode: string;\n\n  constructor(\n    config: NgbCarouselConfig,\n    private httpService: HttpService,\n    private stateService: StatesService,\n    private cardsService: CardsService\n  ) {\n    config.interval = -1;\n    config.wrap = true;\n    config.keyboard = true;\n    config.pauseOnHover = false;\n  }\n\n  ngOnInit(): void {\n    this.httpService.getCurrentLecture().subscribe((lecture) => {\n      this.lecture = lecture;\n      this.title = this.lecture.name;\n    });\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\n    this.stateService.setFormMode(\"none\");\n    this.stateService.getFormMode().subscribe((mode) => {\n      this.formShow = mode == \"add\";\n      this.formMode = mode;\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      if (this.carousel && this.activeSlide != index) {\n        this.activeSlide = index;\n        this.carousel.selectSlide(index);\n      }\n    });\n  }\n\n  toggleAddView(): void {\n    if (this.formMode != \"edit\") {\n      if (this.formMode == \"add\") {\n        this.stateService.setFormMode(\"none\");\n      } else {\n        this.stateService.setFormMode(\"add\");\n      }\n    }\n  }\n  enableEdit() {\n    this.stateService.setFormMode(\"edit\");\n  }\n\n  setClass() {\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\n  }\n\n  selectSlide(n: number) {\n    this.carousel.selectSlide(n.toString());\n  }\n  showRandomCard() {\n    var rand: number = this.activeSlide;\n    var count = 0;\n    while (count < 5 && rand == this.activeSlide) {\n      //calculate a new random index\n      count++;\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\n    }\n    this.carousel.selectSlide(rand.toString());\n  }\n  goToPrev() {\n    if (this.formMode != \"edit\") {\n      this.carousel.previousSlide();\n    }\n  }\n  goToNext() {\n    if (this.formMode != \"edit\") {\n      this.carousel.nextSlide();\n    }\n  }\n  onSlide(slideEvent) {\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\n  }\n}\n","<h3 id=\"vorlesung\">{{ title }}</h3>\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\n  <button\n    class=\"btn btn-light\"\n    id=\"rand\"\n    placement=\"top\"\n    ngbTooltip=\"Zufall\"\n    (click)=\"showRandomCard()\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n  >\n    <div class=\"fas fa-random\"></div>\n  </button>\n  <button\n    class=\"btn btn-light\"\n    id=\"editCard\"\n    type=\"button\"\n    placement=\"top\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n    (click)=\"enableEdit()\"\n    ngbTooltip=\"Bearbeiten\"\n  >\n    <div class=\"fas fa-pen\"></div>\n  </button>\n\n  <button\n    [ngClass]=\"setClass()\"\n    id=\"toggleAdd\"\n    type=\"button\"\n    data-toggle=\"button\"\n    (click)=\"toggleAddView()\"\n    placement=\"top\"\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\n    [disabled]=\"formMode == 'edit'\"\n  >\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\n  </button>\n</div>\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\n  <a (click)=\"goToPrev()\">\n    <span class=\"fas fa-chevron-left\"></span>\n  </a>\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\n    <mdb-carousel\n      (activeSlideChange)=\"onSlide($event)\"\n      #mycarousel\n      [(activeSlideIndex)]=\"activeSlide\"\n      [animation]=\"'slide'\"\n      [isControls]=\"false\"\n      [allowSwipe]=\"true\"\n      [interval]=\"'0'\"\n      ><ng-container *ngFor=\"let card of cards; index as i\">\n        <mdb-carousel-item [id]=\"i.toString()\">\n          <app-card [card]=\"card\"></app-card>\n        </mdb-carousel-item>\n      </ng-container>\n    </mdb-carousel>\n  </div>\n  <a (click)=\"goToNext()\">\n    <span class=\"fas fa-chevron-right\"></span>\n  </a>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\n@Component({\n  selector: \"app-lectures\",\n  templateUrl: \"./lectures.component.html\",\n  styleUrls: [\"./lectures.component.css\"],\n})\nexport class LecturesComponent implements OnInit {\n  lectures: Vorlesung[];\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\n  @Input() newVl: Vorlesung;\n\n  constructor(private httpService: HttpService) {}\n\n  ngOnInit(): void {\n    this.httpService.getAllLectures().subscribe((lectures) => {\n      this.lectures = lectures;\n    });\n  }\n\n  ngOnChanges() {\n    if (this.newVl) {\n      console.log(\"got new vl: \", this.newVl);\n      this.lectures.push(this.newVl);\n    }\n  }\n  setLink(lecture: Vorlesung) {\n    return \"/vorlesung/\" + lecture.abrv;\n  }\n}\n","<ul class=\"list list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\n  </li>\n</ul>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-login-form\",\n  templateUrl: \"./login-form.component.html\",\n  styleUrls: [\"./login-form.component.css\"],\n})\nexport class LoginFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  public errors;\n\n  ngOnInit(): void {\n  \n  }\n  submit(form: NgForm) {\n    this.http.login(form.value).subscribe(\n      (response) => {\n        if (response.status == 200) {\n          this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n\n  isDisabled(username, password) {\n    if (!(username.value && password.value)) {\n      return true;\n    }\n    return username.value.length < 5 || password.value.length < 7;\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"username\"\n        required\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        required\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"remember\"\n        name=\"remember\"\n        #remember=\"ngModel\"\n        [checked]=\"true\"\n        ngModel\n      />\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, password)\"\n    >\n      Login\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { Router } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\nimport { User } from \"src/app/models/User\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { StatesService } from \"src/app/services/states.service\";\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"],\n})\nexport class NavBarComponent implements OnInit {\n  public user: User;\n  public cards: Card[];\n\n  public loading: boolean = false;\n  public constructor(\n    private router: Router,\n    private titleService: Title,\n    private http: HttpService,\n    private cardsService: CardsService,\n    private statesService: StatesService\n  ) {}\n\n  ngOnInit(): void {\n    this.setPageTitle();\n    this.user = this.http.getUser();\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n    if (\n      this.router.url != \"/\" &&\n      this.router.url != \"/login\" &&\n      this.router.url != \"/signup\"\n    )\n      this.cardsService.getCards().subscribe((cards) => {\n        this.cards = cards;\n      });\n  }\n\n  isActive(path: string): string {\n    return path === this.router.url ? \"active\" : \"\";\n  }\n  setPageTitle(): void {\n    let currentTitle: string;\n    switch (this.router.url) {\n      case \"/login\":\n        currentTitle = \"Login\";\n        break;\n      case \"/signup\":\n        currentTitle = \"Sign Up\";\n        break;\n      case \"/\":\n        currentTitle = \"Home\";\n        break;\n      default:\n        currentTitle = \"Cards\";\n    }\n    this.titleService.setTitle(currentTitle);\n  }\n  logout() {\n    this.http.logout();\n    this.user = null;\n    this.router.navigate([\"/\"]);\n  }\n}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\n  role=\"alert\"\n  style=\"padding-right: 0;\"\n>\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\" id=\"navlist\">\n          <li class=\"{{ isActive('/') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\n            >\n          </li>\n\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\"\n              ><i class=\"fas fa-user\"></i> Login</a\n            >\n          </li>\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\"\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\n            >\n          </li>\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\n            <div class=\"dropdown\">\n              <a\n                class=\"nav-link\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-user-circle\"></i> Account\n              </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a\n                  class=\"dropdown-item disabled\"\n                  href=\"#\"\n                  placement=\"bottom\"\n                  ngbTooltip=\"im Aufbau\"\n                  >Account management</a\n                >\n                <a class=\"dropdown-item\" (click)=\"logout()\">\n                  Logout\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\n      <app-search-bar></app-search-bar>\n    </div>\n  </div>\n</nav>\n<div id=\"progress\">\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"],\n})\nexport class SearchBarComponent implements OnInit {\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n  cards: Card[];\n  suggestions: SearchSuggestion[];\n  uInput: string;\n  clearSuggestions: boolean;\n\n  ngOnInit(): void {\n    this.stateService.getHideSuggestions().subscribe((value) => {\n      this.clearSuggestions = value;\n      if (value) {\n        this.suggestions = [];\n      }\n    });\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n      cards.forEach((card) => {\n        if (card.thema == null) {\n          card.thema = \"\";\n        }\n        if (card.content == null) {\n          card.content = \"\";\n        }\n      });\n    });\n  }\n\n  findMatches(e: Event) {\n    this.stateService.setHideSuggestions(false); //show suggestions\n    if (this.uInput && this.uInput.length > 2) {\n      this.suggestions = [];\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\n\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].thema.match(regex)) {\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\n        }\n      }\n    }\n  }\n  navigateTo(e: Event, index: number) {\n    e.preventDefault();\n\n    this.cardsService.setNewCardIndex(index);\n  }\n}\n","<input\n  [(ngModel)]=\"uInput\"\n  (input)=\"findMatches($event)\"\n  class=\"form-control float-right\"\n  id=\"search\"\n  type=\"search\"\n  placeholder=\"Thema suchen\"\n/>\n<div *ngIf=\"suggestions\" id=\"matches\">\n  <ul class=\"list-group\">\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\n        suggestion.title\n      }}</a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-signup-form\",\n  templateUrl: \"./signup-form.component.html\",\n  styleUrls: [\"./signup-form.component.css\"],\n})\nexport class SignupFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.http.createAccount(form.value).subscribe(\n      (response) => {\n        if (response) {\n              this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          console.log(error);\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n  setStyle(password, password2) {\n    if (\n      password2.value &&\n      password2.value.length > 5 &&\n      password2.value != password.value\n    ) {\n      return \"box-shadow:0 0 3px #CC0000;\";\n    }\n    return \"\";\n  }\n  checkEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    }\n\n    return false;\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  isDisabled(username, email, password, password2) {\n    if (!(username.value && email.value && password.value)) {\n      return true;\n    }\n    return (\n      username.value.length < 5 ||\n      password.value.length < 7 ||\n      password.value != password2.value ||\n      !this.checkEmail(email.value)\n    );\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        required\n        maxlength=\"20\"\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email Adresse</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        name=\"email\"\n        id=\"email\"\n        aria-describedby=\"emailHelp\"\n        required\n        #email=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n      />\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort wiederholen</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password2\"\n        id=\"password2\"\n        #password2=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n        [style]=\"setStyle(password, password2)\"\n      />\n      <small class=\"form-text\"> </small>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, email, password, password2)\"\n    >\n      Account erstellen\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-update-card-form\",\n  templateUrl: \"./update-card-form.component.html\",\n  styleUrls: [\"./update-card-form.component.css\"],\n})\nexport class UpdateCardFormComponent implements OnInit {\n  public cardCopy: Card;\n  private cards: Card[];\n  private cardIndex: number; //saves the cardindex which the user is currently updating\n  private activeCardIndex: number; //saves the active cardindex\n  constructor(\n    private cardsService: CardsService,\n    private httpService: HttpService,\n    private statesService: StatesService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    });\n    this.cardsService.getActiveCardIndex().subscribe((index) => {\n      this.activeCardIndex = index;\n      if (this.cards) {\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\n      }\n      this.cardIndex = this.activeCardIndex;\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    this.cardCopy.content = f.value.content;\n    this.cardCopy.thema = f.value.thema;\n    this.cardsService.updateCard({ ...this.cardCopy }, this.cardIndex);\n    f.reset();\n  }\n  cancelEdit() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: \"400px\",\n    });\n  }\n\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n@Component({\n  selector: \"dialog-overview-example-dialog\",\n  templateUrl: \"dialog.html\",\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    private service: StatesService\n  ) {}\n\n  cancel() {\n    this.service.setFormMode(\"reset\");\n\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte bearbeiten</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        [(ngModel)]=\"cardCopy.thema\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        [(ngModel)]=\"cardCopy.content\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <input\n        class=\"btn btn-success mb-2 mr-1\"\n        type=\"submit\"\n        value=\"Sichern\"\n        [disabled]=\"isDisabled(content, thema)\"\n      />\n      <input\n        class=\"btn btn-danger mb-2\"\n        type=\"button\"\n        value=\"Abbruch\"\n        (click)=\"cancelEdit()\"\n      />\n    </div>\n  </form>\n</div>\n","<h1 mat-dialog-title>Abbruch</h1>\n<div mat-dialog-content>\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\n</div>\n<hr />\n<div mat-dialog-actions style=\"text-align: right;\">\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\n    Nein,zurück\n  </button>\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\n</div>\n","export class Card {\n  _id?: string;\n  thema: string;\n  content: string;\n  abrv: string;\n  constructor(thema, content, abrv) {\n    this.thema = thema;\n    this.content = content;\n    this.abrv = abrv;\n  }\n}\n","export class Vorlesung {\n  name: string;\n  abrv: string;\n  constructor(name, abrv) {\n    this.name = name;\n    this.abrv = abrv;\n  }\n}\n","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Title } from \"@angular/platform-browser\";\n@Component({\n  selector: \"app-cards-page\",\n  templateUrl: \"./cards-page.component.html\",\n  styleUrls: [\"./cards-page.component.css\"],\n})\nexport class CardsPageComponent implements OnInit {\n  public vlAbrv: string;\n  public ativeCard: number;\n  public lecture: Vorlesung;\n  public loading: boolean = true;\n  public formMode: string = \"none\";\n  public cards: Card[];\n\n  @HostListener(\"click\", [\"$event.target\"])\n  onClick() {\n    this.stateServie.setHideSuggestions(true);\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private httpService: HttpService,\n    private stateServie: StatesService,\n    private cardsService: CardsService,\n    private title: Title\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Cards\");\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\n    this.cardsService.getCards().subscribe((cards) => {\n      if (cards.length == 0) {\n        this.stateServie.setFormMode(\"add\");\n      }\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      this.ativeCard = index;\n    });\n    this.stateServie\n      .getLoadingState()\n      .subscribe((value) => (this.loading = value));\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\n  }\n\n  setLoading(loading: boolean): void {\n    this.loading = loading;\n    this.stateServie.setLoadingState(loading);\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<br />\n<div class=\"container\">\n  <app-carousel></app-carousel>\n  <br />\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { StatesService } from \"../../services/states.service\";\nimport { from } from \"rxjs\";\n@Component({\n  selector: \"app-home-page\",\n  templateUrl: \"./home-page.component.html\",\n  styleUrls: [\"./home-page.component.css\"],\n})\nexport class HomePageComponent implements OnInit {\n  public loading: boolean = false;\n  public newVl: Vorlesung;\n  constructor(private statesService: StatesService) {}\n\n  ngOnInit(): void {\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n  }\n\n  emitVl(lecture: Vorlesung) {\n    console.log(\"vl: \", lecture);\n    this.newVl = lecture;\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<div class=\"container\">\n  <app-lectures [newVl]=\"newVl\"></app-lectures>\n  <br />\n  <app-add-lecture-form></app-add-lecture-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-login-form></app-login-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.css']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-signup-form></app-signup-form>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"./http.service\";\nimport { Subject, Observable, BehaviorSubject, of, from } from \"rxjs\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\nimport { StatesService } from \"./states.service\";\nimport { tap, map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CardsService {\n  private cards$: BehaviorSubject<Card[]>;\n  private abrv: string;\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\n    0\n  );\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\n    number\n  >(0);\n  private cards: Card[];\n\n  constructor(\n    private httpService: HttpService,\n    private statesService: StatesService,\n    private router: Router\n  ) {}\n\n  getCards(): Observable<Card[]> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1];\n    if (this.cards$ && this.abrv == abrv) {\n      //cards were already loaded for this lecture\n      return this.cards$.asObservable();\n    } else {\n      this.abrv = abrv;\n      //returns an observable of the cards from http service while also initializing the cards internally for reuse\n      return this.httpService.getCardsFromLectureAbrv(abrv).pipe(\n        tap((res) => {\n          if (this.cards$) {\n            this.cards$.next(res.body);\n          } else {\n            this.cards$ = new BehaviorSubject<Card[]>(res.body);\n          }\n        }),\n        map((res) => res.body)\n      );\n    }\n  }\n\n  // initCards(cards: Card[]) {\n  //   //this fucntion is obsolete, its features are implemented in getCards\n  //   // this.cards$ = new BehaviorSubject<Card[]>(cards);\n  //   // this.cards = cards;\n  // }\n  // updateCards(cards: Card[]) {\n  //   this.cards$.next(cards);\n  // }\n\n  updateCard(card: Card, index: number) {\n    this.statesService.setLoadingState(true);\n    this.httpService.updateCard(card).subscribe((resp) => {\n      this.statesService.setLoadingState(false);\n      this.statesService.setFormMode(\"reset\");\n      let cards = this.cards$.getValue();\n      cards[index] = card;\n      this.cards$.next(cards);\n    });\n  }\n  addCard(card: Card): Observable<any> {\n    this.statesService.setLoadingState(true);\n    return this.httpService.addCard(card).pipe(\n      tap((response) => {\n        this.statesService.setLoadingState(false);\n        card._id = response.body;\n        let cards = this.cards$.getValue();\n        cards.push(card);\n        this.cards$.next(cards);\n      })\n    );\n  }\n  getNewCardIndex(): Observable<number> {\n    return this.newCardIndex$.asObservable();\n  }\n  setNewCardIndex(i: number) {\n    this.newCardIndex$.next(i);\n  }\n  setActiveCardIndex(i: number) {\n    this.activeCardIndex$.next(i);\n  }\n  getActiveCardIndex(): Observable<number> {\n    return this.activeCardIndex$.asObservable();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject, of } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { StatesService } from \"./states.service\";\nimport { Router } from \"@angular/router\";\n//Models\nimport { User } from \"../models/User\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  private urlBase: string = \"api/\";\n  private user: User;\n  private lecture$: BehaviorSubject<Vorlesung>; //holds the current lecture\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\n  private httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private statesService: StatesService,\n    private router: Router\n  ) {}\n\n  //Cards\n  getCardsFromLectureAbrv(abrv: string): Observable<HttpResponse<any[]>> {\n    this.statesService.setLoadingState(true);\n    {\n      return this.http\n        .get<Card[]>(this.urlBase + \"cards/?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n          })\n        );\n    }\n  }\n\n  addCard(card: Card): Observable<HttpResponse<any>> {\n    //Cards müssen richtig im Frontend definiert werden\n    let id: string;\n    if (this.user) {\n      id = this.user.id;\n    }\n    return this.http.post<any>(\n      this.urlBase + \"cards/new\",\n      { card: card, userId: id },\n      this.httpOptions\n    );\n  }\n  updateCard(card: Card): Observable<HttpResponse<any>> {\n    return this.http.put<any>(\n      this.urlBase + \"cards/update\",\n      { card: card },\n      {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      }\n    );\n  }\n\n  //Lectures\n  getAllLectures(): Observable<Vorlesung[]> {\n    this.statesService.setLoadingState(true);\n    if (this.lectures$) {\n      this.statesService.setLoadingState(false);\n      return this.lectures$.asObservable();\n    } else {\n      return this.http\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n            this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body);\n          }),\n          map((res) => res.body)\n        );\n    }\n  }\n  setCurrentLecture(lecture: Vorlesung) {\n    if (this.lecture$) {\n      this.lecture$.next(lecture);\n    } else {\n      this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\n    }\n  }\n  getCurrentLecture(): Observable<Vorlesung> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1];\n    if (this.lecture$ && this.lecture$.getValue().abrv == abrv) {\n      return this.lecture$.asObservable();\n    } else {\n      return this.http\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            if (this.lecture$) {\n              this.lecture$.next(res.body);\n            } else {\n              this.lecture$ = new BehaviorSubject<Vorlesung>(res.body);\n            }\n          }),\n          map((res) => res.body)\n        );\n    }\n  }\n\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<any>(\n        this.urlBase + \"lectures/new\",\n        { lecture: lecture },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap((res) => {\n          //add the new lecture to the lectures subject\n          this.statesService.setLoadingState(false);\n          let lectures = this.lectures$.getValue();\n          lectures.push(lecture);\n          this.lectures$.next(lectures);\n        })\n      );\n  }\n\n  getLectureByAbrv(abrv: string): Vorlesung {\n    if (this.lectures$) {\n      let lectures = this.lectures$.getValue();\n      for (const lecture of lectures) {\n        if (lecture.abrv == abrv) {\n          if (this.lecture$) {\n            this.lecture$.next(lecture);\n          } else {\n            this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\n          }\n\n          return lecture;\n        }\n      }\n    } else {\n    }\n  }\n\n  //User\n  login(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"login\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap((res) => {\n          this.statesService.setLoadingState(false);\n          this.user = res.body;\n          if (form.remember) {\n            localStorage.setItem(\"user\", JSON.stringify(this.user));\n          }\n        })\n      );\n  }\n\n  getUser(): User {\n    if (!this.user) {\n      this.user = JSON.parse(localStorage.getItem(\"user\"));\n    }\n    return this.user;\n  }\n  logout() {\n    this.statesService.setLoadingState(true);\n    this.http.get<any>(this.urlBase + \"user/logout\").subscribe((err) => {\n      this.statesService.setLoadingState(false);\n      if (err) console.log(err);\n    });\n    localStorage.removeItem(\"user\");\n    this.user = null;\n  }\n\n  //form = {username,email,password}\n  createAccount(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"user/new\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap((res) => {\n          this.user = res.body;\n          this.statesService.setLoadingState(false);\n        })\n      );\n  }\n}\n","//This service is made to manage states across components\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StatesService {\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\n  private lastFormMode: string;\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  constructor() {}\n\n  getFormMode(): Observable<string> {\n    return this.formMode$.asObservable();\n  }\n  setFormMode(mode: string): void {\n    if (mode == \"reset\") {\n      if (!this.lastFormMode) {\n        //last form mode is undefined\n        this.lastFormMode = \"none\";\n      } // last Form mode defined\n      this.formMode$.next(this.lastFormMode);\n    } else {\n      this.formMode$.next(mode);\n      if (mode != \"edit\") this.lastFormMode = mode;\n    }\n  }\n\n  getLoadingState(): BehaviorSubject<boolean> {\n    return this.loading$;\n  }\n  setLoadingState(value: boolean) {\n    this.loading$.next(value);\n  }\n  setHideSuggestions(value: boolean) {\n    this.hideSgtn$.next(value);\n  }\n  getHideSuggestions(): Observable<boolean> {\n    return this.hideSgtn$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport \"hammerjs\";\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}