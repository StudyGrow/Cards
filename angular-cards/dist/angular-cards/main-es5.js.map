{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/signup-form/signup-form.component.ts","webpack:///src/app/components/signup-form/signup-form.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/models/Vorlesung.ts","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/routes/login-page/login-page.component.ts","webpack:///src/app/routes/login-page/login-page.component.html","webpack:///src/app/routes/signup-page/signup-page.component.ts","webpack:///src/app/routes/signup-page/signup-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","titleService","setTitle","selector","templateUrl","styleUrls","MyHammerConfig","overrides","pan","direction","Hammer","DIRECTION_All","swipe","DIRECTION_VERTICAL","element","mc","touchAction","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","recognizers","Swipe","DIRECTION_HORIZONTAL","AppModule","provide","useClass","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","returnCard","f","newCard","value","thema","content","addCard","lecture","abrv","setLoadingState","reset","color","length","elem","onSubmit","AddLectureFormComponent","http","statesService","emitVl","newLecture","name","addLecture","subscribe","response","emit","field","max","CardComponent","isCollapsed","CarouselComponent","config","httpService","setLoading","activeSlide","interval","wrap","keyboard","pauseOnHover","event","carousel","previousSlide","nextSlide","title","getCardsFromLecture","resp","cards","body","initCards","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","selectSlide","n","toString","rand","count","Math","floor","random","slideEvent","setActiveCardIndex","parseInt","relatedTarget","showRandomCard","enableEdit","toggleAddView","static","LecturesComponent","lecturesLoaded","getAllLectures","status","console","log","lectures","newVl","push","LoginFormComponent","form","login","navigate","error","headers","errors","username","password","submit","NavBarComponent","url","currentTitle","logout","user","setPageTitle","getUser","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","getCards","forEach","card","setHideSuggestions","uInput","regex","RegExp","i","match","preventDefault","setNewCardIndex","findMatches","SignupFormComponent","createAccount","password2","email","test","checkEmail","UpdateCardFormComponent","dialog","cardCopy","getActiveCardIndex","activeCardIndex","cardIndex","updateCard","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","close","onNoClick","cancel","Card","Vorlesung","CardsPageComponent","route","stateServie","loading","vlAbrv","snapshot","paramMap","get","getLectureByAbrv","ativeCard","getLoadingState","HomePageComponent","loaded","setLoaded","LoginPageComponent","SignupPageComponent","CardsService","newCardIndex$","activeCardIndex$","cards$","asObservable","next","updateCards","_id","providedIn","HttpService","urlBase","httpOptions","observe","post","put","pipe","res","remember","localStorage","setItem","JSON","stringify","parse","getItem","err","removeItem","StatesService","formMode$","loading$","hideSgtn$","lastFormMode","environment","production","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomePageComponent },\r\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\r\n  { path: \"login\", component: LoginPageComponent },\r\n  { path: \"signup\", component: SignupPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  public constructor(private router: Router, private titleService: Title) {\r\n    this.titleService.setTitle(\"Home\");\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { CarouselModule, WavesModule } from \"angular-bootstrap-md\";\r\n\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\r\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\r\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\r\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\r\nimport { CardComponent } from \"./components/card/card.component\";\r\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\r\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\n//Services\r\nimport { StatesService } from \"./services/states.service\";\r\nimport { HttpService } from \"./services/http.service\";\r\nimport { CardsService } from \"./services/cards.service\";\r\n\r\n//Material Modules\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\r\n//Gestures\r\nimport {\r\n  HammerModule,\r\n  HammerGestureConfig,\r\n  HAMMER_GESTURE_CONFIG,\r\n} from \"@angular/platform-browser\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { LoginFormComponent } from './components/login-form/login-form.component';\r\nimport { SignupPageComponent } from './routes/signup-page/signup-page.component';\r\nimport { SignupFormComponent } from './components/signup-form/signup-form.component';\r\nimport { StoreModule } from '@ngrx/store';\r\ndeclare var Hammer: any;\r\n//Config to allow swipe gestures on carousel\r\nexport class MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    pan: { direction: Hammer.DIRECTION_All },\r\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\r\n  };\r\n\r\n  buildHammer(element: HTMLElement) {\r\n    const mc = new Hammer(element, {\r\n      touchAction: \"auto\",\r\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\r\n        ? Hammer.PointerEventInput\r\n        : Hammer.TouchInput,\r\n      recognizers: [\r\n        [\r\n          Hammer.Swipe,\r\n          {\r\n            direction: Hammer.DIRECTION_HORIZONTAL,\r\n          },\r\n        ],\r\n      ],\r\n    });\r\n    return mc;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SearchBarComponent,\r\n    AddCardFormComponent,\r\n    CarouselComponent,\r\n    CardComponent,\r\n    AddLectureFormComponent,\r\n    LecturesComponent,\r\n    HomePageComponent,\r\n    CardsPageComponent,\r\n    UpdateCardFormComponent,\r\n    LoginPageComponent,\r\n    LoginFormComponent,\r\n    SignupPageComponent,\r\n    SignupFormComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    HammerModule,\r\n    StoreModule.forRoot({}, {}),\r\n  ],\r\n  providers: [\r\n    StatesService,\r\n    HttpService,\r\n    CardsService,\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: MyHammerConfig,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\n\r\n@Component({\r\n  selector: \"app-add-card-form\",\r\n  templateUrl: \"./add-card-form.component.html\",\r\n  styleUrls: [\"./add-card-form.component.css\"]\r\n})\r\nexport class AddCardFormComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() returnCard: EventEmitter<Card> = new EventEmitter();\r\n  newCard: Card;\r\n  hidden: boolean;\r\n  Contentlength: number;\r\n  themaLength: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  setStyle() {}\r\n  onSubmit(f: NgForm) {\r\n    this.newCard = new Card(f.value.thema, f.value.content);\r\n    this.cardsService.addCard(this.newCard, this.lecture.abrv);\r\n    this.stateService.setLoadingState(true);\r\n    f.reset();\r\n  }\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        ngModel\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(content, thema)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n@Component({\r\n  selector: \"app-add-lecture-form\",\r\n  templateUrl: \"./add-lecture-form.component.html\",\r\n  styleUrls: [\"./add-lecture-form.component.css\"]\r\n})\r\nexport class AddLectureFormComponent implements OnInit {\r\n  constructor(\r\n    private http: HttpService,\r\n    private statesService: StatesService\r\n  ) {}\r\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\r\n  ngOnInit(): void {}\r\n  onSubmit(f: NgForm) {\r\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv);\r\n    this.statesService.setLoadingState(true);\r\n    this.http.addLecture(newLecture).subscribe(response => {\r\n      this.statesService.setLoadingState(false);\r\n      this.emitVl.emit(newLecture);\r\n    });\r\n\r\n    f.reset();\r\n  }\r\n\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  isDisabled(name, abrv) {\r\n    if (!name.value || !abrv.value) {\r\n      return true;\r\n    } else {\r\n      return (\r\n        abrv.value.length == 0 ||\r\n        abrv.value.length < 3 ||\r\n        abrv.value.length > 7 ||\r\n        name.value.length == 0 ||\r\n        name.value.length > 60\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div id=\"addLecture\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Vorlesung hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Vorlesungsname</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Datenstrukturen und Algorithmen\"\r\n        minlength=\"3\"\r\n        required\r\n        #name=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\r\n        >{{ getLength(name) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"abrv\">Abkürzung</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"abrv\"\r\n        name=\"abrv\"\r\n        required\r\n        #abrv=\"ngModel\"\r\n        ngModel\r\n        placeholder=\"Dsal\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\r\n        >{{ getLength(abrv) }}/7\r\n      </small>\r\n    </div>\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(name, abrv)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\nimport { Card } from \"../../models/Card\";\r\n\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.css\"]\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() card: Card;\r\n\r\n  constructor() {}\r\n  public isCollapsed = true;\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"card\" id=\"`{{ card._id }}`\">\r\n  <div class=\"card-header\">\r\n    {{ card.thema }}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <button\r\n      class=\"btn btn-light\"\r\n      type=\"button\"\r\n      (click)=\"isCollapsed = !isCollapsed\"\r\n    >\r\n      Mehr dazu\r\n      <i class=\"fas fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"collapse\" [ngbCollapse]=\"isCollapsed\">\r\n      <pre lang=\"de\">{{ card.content }}</pre>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\n\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { NgbCarouselConfig, NgbSlideEvent } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: \"app-carousel\",\r\n  templateUrl: \"./carousel.component.html\",\r\n  styleUrls: [\"./carousel.component.css\"],\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() setLoading: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\r\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\r\n    this.carousel.previousSlide();\r\n  }\r\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\r\n    this.carousel.nextSlide();\r\n  }\r\n  cards: Card[]; //array of all the cards\r\n  activeSlide: number = 0;\r\n  title: string;\r\n  addComponentHidden: boolean;\r\n  formShow: boolean;\r\n  formMode: string;\r\n\r\n  constructor(\r\n    config: NgbCarouselConfig,\r\n    private httpService: HttpService,\r\n    private stateService: StatesService,\r\n    private cardsService: CardsService\r\n  ) {\r\n    config.interval = -1;\r\n    config.wrap = true;\r\n    config.keyboard = true;\r\n    config.pauseOnHover = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.lecture) {\r\n      this.title = this.lecture.name;\r\n      this.httpService.getCardsFromLecture(this.lecture).subscribe((resp) => {\r\n        this.cards = resp.body;\r\n        this.cardsService.initCards(this.cards);\r\n        this.setLoading.emit(false);\r\n      }); //load the specific cards from the server by subscribing to the observable that the card-service provides\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.stateService.setFormMode(\"none\");\r\n    this.stateService.getFormMode().subscribe((mode) => {\r\n      this.formShow = mode == \"add\";\r\n      this.formMode = mode;\r\n    });\r\n\r\n    this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      if (this.carousel && this.activeSlide != index) {\r\n        this.activeSlide = index;\r\n        this.carousel.selectSlide(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  completeLoading(): void {\r\n    this.setLoading.emit(false);\r\n  }\r\n  toggleAddView(): void {\r\n    if (this.formMode != \"edit\") {\r\n      if (this.formMode == \"add\") {\r\n        this.stateService.setFormMode(\"none\");\r\n      } else {\r\n        this.stateService.setFormMode(\"add\");\r\n      }\r\n    }\r\n  }\r\n  enableEdit() {\r\n    this.stateService.setFormMode(\"edit\");\r\n  }\r\n\r\n  setClass() {\r\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\r\n  }\r\n\r\n  selectSlide(n: number) {\r\n    this.carousel.selectSlide(n.toString());\r\n  }\r\n  showRandomCard() {\r\n    var rand: number = this.activeSlide;\r\n    var count = 0;\r\n    while (count < 5 && rand == this.activeSlide) {\r\n      //calculate a new random index\r\n      count++;\r\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\r\n    }\r\n    this.carousel.selectSlide(rand.toString());\r\n  }\r\n  goToPrev() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.previousSlide();\r\n    }\r\n  }\r\n  goToNext() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.nextSlide();\r\n    }\r\n  }\r\n  onSlide(slideEvent) {\r\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\r\n  }\r\n}\r\n","<h3 id=\"vorlesung\">{{ title }}</h3>\r\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"rand\"\r\n    placement=\"top\"\r\n    ngbTooltip=\"Zufall\"\r\n    (click)=\"showRandomCard()\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n  >\r\n    <div class=\"fas fa-random\"></div>\r\n  </button>\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"editCard\"\r\n    type=\"button\"\r\n    placement=\"top\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n    (click)=\"enableEdit()\"\r\n    ngbTooltip=\"Bearbeiten\"\r\n  >\r\n    <div class=\"fas fa-pen\"></div>\r\n  </button>\r\n\r\n  <button\r\n    [ngClass]=\"setClass()\"\r\n    id=\"toggleAdd\"\r\n    type=\"button\"\r\n    data-toggle=\"button\"\r\n    (click)=\"toggleAddView()\"\r\n    placement=\"top\"\r\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\r\n  <a (click)=\"goToPrev()\">\r\n    <span class=\"fas fa-chevron-left\"></span>\r\n  </a>\r\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\r\n    <mdb-carousel\r\n      (activeSlideChange)=\"onSlide($event)\"\r\n      #mycarousel\r\n      [(activeSlideIndex)]=\"activeSlide\"\r\n      [animation]=\"'slide'\"\r\n      [isControls]=\"false\"\r\n      [allowSwipe]=\"true\"\r\n      [interval]=\"'0'\"\r\n      ><ng-container *ngFor=\"let card of cards; index as i\">\r\n        <mdb-carousel-item [id]=\"i.toString()\">\r\n          <app-card [card]=\"card\"></app-card>\r\n        </mdb-carousel-item>\r\n      </ng-container>\r\n    </mdb-carousel>\r\n  </div>\r\n  <a (click)=\"goToNext()\">\r\n    <span class=\"fas fa-chevron-right\"></span>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Card } from \"../../models/Card\";\r\n@Component({\r\n  selector: \"app-lectures\",\r\n  templateUrl: \"./lectures.component.html\",\r\n  styleUrls: [\"./lectures.component.css\"]\r\n})\r\nexport class LecturesComponent implements OnInit {\r\n  lectures: Vorlesung[];\r\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\r\n  @Input() newVl: Vorlesung;\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getAllLectures().subscribe(resp => {\r\n      if (resp.status == 504) {\r\n        console.log(\"Server down\");\r\n        this.lectures = [];\r\n      } else {\r\n        this.lecturesLoaded.emit(true);\r\n        this.lectures = resp.body;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.newVl) {\r\n      console.log(\"got new vl: \", this.newVl);\r\n      this.lectures.push(this.newVl);\r\n    }\r\n  }\r\n  setLink(lecture: Vorlesung) {\r\n    return \"/vorlesung/\" + lecture.abrv;\r\n  }\r\n}\r\n","<ul class=\"list list-group\">\r\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\r\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-login-form\",\r\n  templateUrl: \"./login-form.component.html\",\r\n  styleUrls: [\"./login-form.component.css\"],\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  public errors;\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n  submit(form: NgForm) {\r\n    this.http.login(form.value).subscribe(\r\n      (response) => {\r\n        if (response.status == 200) {\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      },\r\n      (error) => {\r\n        if ((error.headers.status = 422)) {\r\n          this.errors = error.error.errors;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  isDisabled(username, password) {\r\n    if (!(username.value && password.value)) {\r\n      return true;\r\n    }\r\n    return username.value.length < 5 || password.value.length < 7;\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"username\"\r\n        required\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n      <input\r\n        required\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        id=\"remember\"\r\n        name=\"remember\"\r\n        #remember=\"ngModel\"\r\n        [checked]=\"true\"\r\n        ngModel\r\n      />\r\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, password)\"\r\n    >\r\n      Login\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { HttpService } from \"src/app/services/http.service\";\r\n\r\n@Component({\r\n  selector: \"app-nav-bar\",\r\n  templateUrl: \"./nav-bar.component.html\",\r\n  styleUrls: [\"./nav-bar.component.css\"],\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  @Input() cards: Card[];\r\n  public user: User;\r\n  public constructor(\r\n    private router: Router,\r\n    private titleService: Title,\r\n    private http: HttpService\r\n  ) {}\r\n  isActive(path: string): string {\r\n    return path === this.router.url ? \"active\" : \"\";\r\n  }\r\n  setPageTitle(): void {\r\n    let currentTitle: string;\r\n    switch (this.router.url) {\r\n      case \"/login\":\r\n        currentTitle = \"Login\";\r\n        break;\r\n      case \"/signup\":\r\n        currentTitle = \"Sign Up\";\r\n        break;\r\n      case \"/\":\r\n        currentTitle = \"Home\";\r\n        break;\r\n      default:\r\n        currentTitle = \"Cards\";\r\n    }\r\n    this.titleService.setTitle(currentTitle);\r\n  }\r\nlogout(){\r\n  this.http.logout();\r\n  this.user=null\r\n  this.router.navigate([\"/\"]);\r\n}\r\n  ngOnInit(): void {\r\n    this.setPageTitle();\r\n    this.user = this.http.getUser();\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  role=\"alert\"\r\n  style=\"padding-right: 0;\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\" id=\"navlist\">\r\n          <li class=\"{{ isActive('/') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\r\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\r\n            >\r\n          </li>\r\n\r\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\"\r\n              ><i class=\"fas fa-user\"></i> Login</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/signup\"\r\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\r\n            <div class=\"dropdown\">\r\n              <a\r\n                class=\"nav-link\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i class=\"fas fa-user-circle\"></i> Account\r\n              </a>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a\r\n                  class=\"dropdown-item disabled\"\r\n                  href=\"#\"\r\n                  placement=\"bottom\"\r\n                  ngbTooltip=\"im Aufbau\"\r\n                  >Account management</a\r\n                >\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">\r\n                  Logout\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\r\n      <app-search-bar [cards]=\"cards\"></app-search-bar>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\r\n\r\n@Component({\r\n  selector: \"app-search-bar\",\r\n  templateUrl: \"./search-bar.component.html\",\r\n  styleUrls: [\"./search-bar.component.css\"]\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n  @Input() cards: Card[];\r\n  suggestions: SearchSuggestion[];\r\n  uInput: string;\r\n  clearSuggestions: boolean;\r\n  ngOnInit(): void {\r\n    this.stateService.getHideSuggestions().subscribe(value => {\r\n      this.clearSuggestions = value;\r\n      if (value) {\r\n        this.suggestions = [];\r\n      }\r\n    });\r\n  }\r\n  ngOnChanges(): void {\r\n    if (this.cardsService.getCards()) {\r\n      this.cardsService.getCards().subscribe(cards => {\r\n        this.cards = cards;\r\n        cards.forEach(card => {\r\n          if (card.thema == null) {\r\n            card.thema = \"\";\r\n          }\r\n          if (card.content == null) {\r\n            card.content = \"\";\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  findMatches(e: Event) {\r\n    this.stateService.setHideSuggestions(false); //show suggestions\r\n    if (this.uInput && this.uInput.length > 2) {\r\n      this.suggestions = [];\r\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\r\n\r\n      for (let i = 0; i < this.cards.length; i++) {\r\n        if (this.cards[i].thema.match(regex)) {\r\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  navigateTo(e: Event, index: number) {\r\n    e.preventDefault();\r\n\r\n    this.cardsService.setNewCardIndex(index);\r\n  }\r\n}\r\n","<input\r\n  [(ngModel)]=\"uInput\"\r\n  (input)=\"findMatches($event)\"\r\n  class=\"form-control float-right\"\r\n  id=\"search\"\r\n  type=\"search\"\r\n  placeholder=\"Thema suchen\"\r\n/>\r\n<div *ngIf=\"suggestions\" id=\"matches\">\r\n  <ul class=\"list-group\">\r\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\r\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\r\n        suggestion.title\r\n      }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-signup-form\",\r\n  templateUrl: \"./signup-form.component.html\",\r\n  styleUrls: [\"./signup-form.component.css\"],\r\n})\r\nexport class SignupFormComponent implements OnInit {\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  errors;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.http.createAccount(form.value).subscribe(\r\n      (response) => {\r\n        if (response) {\r\n              this.router.navigate([\"/\"]);\r\n        }\r\n      },\r\n      (error) => {\r\n        if ((error.headers.status = 422)) {\r\n          console.log(error);\r\n          this.errors = error.error.errors;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  isDisabled(username, email, password, password2) {\r\n    if (!(username.value && email.value && password.value)) {\r\n      return true;\r\n    }\r\n    return (\r\n      username.value.length < 5 ||\r\n      password.value.length < 7 ||\r\n      password.value != password2.value ||\r\n      !this.checkEmail(email.value)\r\n    );\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        required\r\n        maxlength=\"20\"\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email Adresse</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        aria-describedby=\"emailHelp\"\r\n        required\r\n        #email=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n      />\r\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort wiederholen</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password2\"\r\n        id=\"password2\"\r\n        #password2=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n        [style]=\"setStyle(password, password2)\"\r\n      />\r\n      <small class=\"form-text\"> </small>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, email, password, password2)\"\r\n    >\r\n      Account erstellen\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-update-card-form\",\r\n  templateUrl: \"./update-card-form.component.html\",\r\n  styleUrls: [\"./update-card-form.component.css\"]\r\n})\r\nexport class UpdateCardFormComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() returnCard: EventEmitter<Card> = new EventEmitter();\r\n  public cardCopy: Card = { thema: \"\", content: \"\" };\r\n  private cards: Card[];\r\n\r\n  private cardIndex: number;\r\n  private activeCardIndex: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private httpService: HttpService,\r\n    private statesService: StatesService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardsService.getCards().subscribe(cards => (this.cards = cards));\r\n    this.cardsService\r\n      .getActiveCardIndex()\r\n      .subscribe(index => (this.activeCardIndex = index));\r\n\r\n    this.cardCopy = { ...this.cards[this.activeCardIndex] };\r\n    this.cardIndex = this.activeCardIndex;\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n    this.statesService.setLoadingState(true);\r\n    this.cardCopy.content = f.value.content;\r\n    this.cardCopy.thema = f.value.thema;\r\n\r\n    this.cards[this.cardIndex] = { ...this.cardCopy };\r\n\r\n    this.cardsService.updateCard(\r\n      this.cards[this.cardIndex],\r\n      this.lecture.abrv,\r\n      this.cardIndex\r\n    );\r\n    f.reset();\r\n  }\r\n  cancelEdit() {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"dialog-overview-example-dialog\",\r\n  templateUrl: \"dialog.html\"\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private service: StatesService\r\n  ) {}\r\n\r\n  cancel() {\r\n    this.service.setFormMode(\"reset\");\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte bearbeiten</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.thema\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.content\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        class=\"btn btn-success mb-2 mr-1\"\r\n        type=\"submit\"\r\n        value=\"Sichern\"\r\n        [disabled]=\"isDisabled(content, thema)\"\r\n      />\r\n      <input\r\n        class=\"btn btn-danger mb-2\"\r\n        type=\"button\"\r\n        value=\"Abbruch\"\r\n        (click)=\"cancelEdit()\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n","<h1 mat-dialog-title>Abbruch</h1>\r\n<div mat-dialog-content>\r\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\r\n</div>\r\n<hr />\r\n<div mat-dialog-actions style=\"text-align: right;\">\r\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\r\n    Nein,zurück\r\n  </button>\r\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\r\n</div>\r\n","export class Card {\r\n  _id?: string;\r\n  thema: string;\r\n  content: string;\r\n  abrv?: string;\r\n  constructor(thema, content) {\r\n    this.thema = thema;\r\n    this.content = content;\r\n  }\r\n}\r\n","export class Vorlesung {\r\n  name: string;\r\n  abrv: string;\r\n  constructor(name, abrv) {\r\n    this.name = name;\r\n    this.abrv = abrv;\r\n  }\r\n}\r\n","import { Component, OnInit, HostListener } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n@Component({\r\n  selector: \"app-cards-page\",\r\n  templateUrl: \"./cards-page.component.html\",\r\n  styleUrls: [\"./cards-page.component.css\"],\r\n})\r\nexport class CardsPageComponent implements OnInit {\r\n  public vlAbrv: string;\r\n  public ativeCard: number;\r\n  public lecture: Vorlesung;\r\n  public loading: boolean = true;\r\n  public formMode: string = \"none\";\r\n  public cards: Card[];\r\n  @HostListener(\"click\", [\"$event.target\"])\r\n  onClick() {\r\n    this.stateServie.setHideSuggestions(true);\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private httpService: HttpService,\r\n    private stateServie: StatesService,\r\n    private cardsService: CardsService,\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.title.setTitle(\"Cards\");\r\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\r\n    this.httpService.getLectureByAbrv(this.vlAbrv).subscribe((resp) => {\r\n      if (resp.status == 504) {\r\n        console.log(\"Server offline\");\r\n      } else {\r\n        this.lecture = resp.body;\r\n        this.httpService.getCardsFromLecture(this.lecture).subscribe((resp) => {\r\n          this.cardsService.initCards(resp.body);\r\n          this.cards = resp.body;\r\n        });\r\n      }\r\n    });\r\n    this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      this.ativeCard = index;\r\n    });\r\n    this.stateServie\r\n      .getLoadingState()\r\n      .subscribe((value) => (this.loading = value));\r\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\r\n  }\r\n\r\n  setLoading(loading: boolean): void {\r\n    this.loading = loading;\r\n    this.stateServie.setLoadingState(loading);\r\n  }\r\n}\r\n","<app-nav-bar [cards]=\"cards\"></app-nav-bar>\r\n<div id=\"progress\">\r\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n<br />\r\n<div class=\"container\">\r\n  <app-carousel\r\n    (setLoading)=\"setLoading($event)\"\r\n    [lecture]=\"lecture\"\r\n  ></app-carousel>\r\n  <br />\r\n  <app-add-card-form\r\n    *ngIf=\"formMode == 'add'\"\r\n    [lecture]=\"lecture\"\r\n  ></app-add-card-form>\r\n  <app-update-card-form\r\n    *ngIf=\"formMode == 'edit'\"\r\n    [lecture]=\"lecture\"\r\n  ></app-update-card-form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"]\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  public loaded: boolean = false;\r\n  public newVl: Vorlesung;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n  setLoaded(loaded: boolean): void {\r\n    this.loaded = loaded;\r\n  }\r\n  emitVl(lecture: Vorlesung) {\r\n    console.log(\"vl: \", lecture);\r\n    this.newVl = lecture;\r\n  }\r\n}\r\n","<app-nav-bar [cards]=\"undefined\"></app-nav-bar>\r\n<mat-progress-bar *ngIf=\"!loaded\" mode=\"indeterminate\"></mat-progress-bar>\r\n<div class=\"container\">\r\n  <app-lectures\r\n    (lecturesLoaded)=\"setLoaded($event)\"\r\n    [newVl]=\"newVl\"\r\n  ></app-lectures>\r\n  <br />\r\n  <app-add-lecture-form (emitVl)=\"emitVl($event)\"></app-add-lecture-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div>\r\n  <app-login-form></app-login-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div>\r\n  <app-signup-form></app-signup-form>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { Subject, Observable, BehaviorSubject, of } from \"rxjs\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\nimport { StatesService } from \"./states.service\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CardsService {\r\n  private cards$: BehaviorSubject<Card[]>;\r\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\r\n    0\r\n  );\r\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\r\n    number\r\n  >(0);\r\n  private cards: Card[];\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private statesService: StatesService\r\n  ) {}\r\n\r\n  getCards(): Observable<Card[]> {\r\n    if (this.cards$) {\r\n      return this.cards$.asObservable();\r\n    } else {\r\n      return of([]);\r\n    }\r\n  }\r\n\r\n  initCards(cards: Card[]) {\r\n    this.cards$ = new BehaviorSubject<Card[]>(cards);\r\n    this.cards = cards;\r\n  }\r\n  updateCards(cards: Card[]) {\r\n    this.cards$.next(cards);\r\n  }\r\n  updateCard(card: Card, vlAbrv: string, index: number) {\r\n    if (!card.abrv) {\r\n      card.abrv = vlAbrv;\r\n    }\r\n    this.httpService.updateCard(card).subscribe(resp => {\r\n      this.statesService.setLoadingState(false);\r\n      this.statesService.setFormMode(\"reset\");\r\n      this.cards[index] = card;\r\n      this.updateCards(this.cards);\r\n    });\r\n  }\r\n  addCard(card: Card, vlAbrv: string) {\r\n    if (!this.cards) {\r\n      this.cards$.subscribe(cards => (this.cards = cards));\r\n    }\r\n\r\n    this.httpService.addCard(card, vlAbrv).subscribe(response => {\r\n      this.statesService.setLoadingState(false);\r\n      card._id = response.body;\r\n      this.cards.push(card);\r\n      this.updateCards(this.cards);\r\n    });\r\n  }\r\n  getNewCardIndex(): Observable<number> {\r\n    return this.newCardIndex$.asObservable();\r\n  }\r\n  setNewCardIndex(i: number) {\r\n    this.newCardIndex$.next(i);\r\n  }\r\n  setActiveCardIndex(i: number) {\r\n    this.activeCardIndex$.next(i);\r\n  }\r\n  getActiveCardIndex(): Observable<number> {\r\n    return this.activeCardIndex$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpResponse,\r\n  \r\n} from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport {tap} from \"rxjs/operators\"\r\n\r\n//Models\r\nimport { User } from \"../models/User\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class HttpService {\r\n  private urlBase: string = \"api/\";\r\n  private user: User;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Cards\r\n  getCardsFromLecture(lecture: Vorlesung): Observable<HttpResponse<Card[]>> {\r\n    return this.http.get<Card[]>(\r\n      this.urlBase + \"getCards/?abrv=\" + lecture.abrv,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n\r\n  addCard(card: Card, vlAbrv: string): Observable<HttpResponse<any>> {\r\n    //Cards müssen richtig im Frontend definiert werden\r\n    return this.http.post<any>(\r\n      this.urlBase + \"addCard\",\r\n      { card: card, abrv: vlAbrv },\r\n      this.httpOptions\r\n    );\r\n  }\r\n  updateCard(card: Card): Observable<HttpResponse<any>> {\r\n    return this.http.put<any>(\r\n      this.urlBase + \"updateCard\",\r\n      { card: card },\r\n      {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      }\r\n    );\r\n  }\r\n\r\n  //Lectures\r\n  getAllLectures(): Observable<HttpResponse<Vorlesung[]>> {\r\n    return this.http.get<Vorlesung[]>(this.urlBase + \"getAllLectures\", {\r\n      observe: \"response\",\r\n    });\r\n  }\r\n\r\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\r\n    return this.http.post<any>(\r\n      this.urlBase + \"addLecture\",\r\n      { lecture: lecture },\r\n      {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      }\r\n    );\r\n  }\r\n\r\n  getLectureByAbrv(abrv: string): Observable<HttpResponse<Vorlesung>> {\r\n    return this.http.get<Vorlesung>(this.urlBase + \"getLecture?abrv=\" + abrv, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\",\r\n    });\r\n  }\r\n\r\n  //User\r\n  login(form): Observable<HttpResponse<User>> {\r\n    return this.http.post<User>(this.urlBase + \"login\", form, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\",\r\n    }).pipe(tap(res=>{\r\n      this.user=res.body\r\n      if(form.remember){\r\n        localStorage.setItem('user',JSON.stringify(this.user))\r\n      }\r\n     \r\n    }));\r\n  }\r\n  \r\n  getUser(): User {\r\n    if(!this.user){\r\n      this.user=JSON.parse(localStorage.getItem(\"user\"))\r\n    }\r\n    return this.user;\r\n  }\r\n  logout() {\r\n    this.http.get<any>(this.urlBase + \"logout\").subscribe((err) => {\r\n      if (err) console.log(err);\r\n    });\r\n    localStorage.removeItem(\"user\")\r\n    this.user = null;\r\n  }\r\n\r\n  //form = {username,email,password}\r\n  createAccount(form): Observable<HttpResponse<User>> {\r\n    return this.http.post<User>(this.urlBase + \"createAccount\", form, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\",\r\n    }).pipe(tap(res=>this.user=res.body))\r\n    \r\n  }\r\n}\r\n","//This service is made to manage states across components\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class StatesService {\r\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\r\n  private lastFormMode: string;\r\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  constructor() {}\r\n\r\n  getFormMode(): Observable<string> {\r\n    return this.formMode$.asObservable();\r\n  }\r\n  setFormMode(mode: string): void {\r\n    if (mode == \"reset\") {\r\n      if (!this.lastFormMode) {\r\n        //last form mode is undefined\r\n        this.lastFormMode = \"none\";\r\n      } // last Form mode defined\r\n      this.formMode$.next(this.lastFormMode);\r\n    } else {\r\n      this.formMode$.next(mode);\r\n      if (mode != \"edit\") this.lastFormMode = mode;\r\n    }\r\n  }\r\n\r\n  getLoadingState(): BehaviorSubject<boolean> {\r\n    return this.loading$;\r\n  }\r\n  setLoadingState(value: boolean) {\r\n    this.loading$.next(value);\r\n  }\r\n  setHideSuggestions(value: boolean) {\r\n    this.hideSgtn$.next(value);\r\n  }\r\n  getHideSuggestions(): Observable<boolean> {\r\n    return this.hideSgtn$.asObservable();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport \"hammerjs\";\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"]}