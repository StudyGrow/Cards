{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/signup-form/signup-form.component.ts","webpack:///src/app/components/signup-form/signup-form.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/models/Vorlesung.ts","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/routes/login-page/login-page.component.ts","webpack:///src/app/routes/login-page/login-page.component.html","webpack:///src/app/routes/signup-page/signup-page.component.ts","webpack:///src/app/routes/signup-page/signup-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","router","titleService","setTitle","selector","templateUrl","styleUrls","MyHammerConfig","overrides","pan","direction","Hammer","DIRECTION_All","swipe","DIRECTION_VERTICAL","element","mc","touchAction","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","recognizers","Swipe","DIRECTION_HORIZONTAL","AppModule","provide","useClass","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","http","getCurrentLecture","subscribe","lecture","f","newCard","value","thema","content","abrv","addCard","res","reset","setTyping","color","length","elem","onSubmit","inField","resetNav","AddLectureFormComponent","statesService","emitVl","newLecture","name","toLowerCase","setLoadingState","addLecture","response","emit","field","max","CardComponent","cs","isCollapsed","getActiveCardIndex","change","hide","static","CarouselComponent","httpService","activeSlide","event","carousel","previousSlide","nextSlide","title","getCards","cards","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","selectSlide","n","toString","rand","count","Math","floor","random","slideEvent","setActiveCardIndex","parseInt","relatedTarget","showRandomCard","enableEdit","toggleAddView","LecturesComponent","lecturesLoaded","getAllLectures","lectures","newVl","console","log","push","LoginFormComponent","form","login","status","navigate","username","password","submit","NavBarComponent","loading","setPageTitle","getUser","user","getLoadingState","val","getErrors","errors","url","i","removeError","currentTitle","logout","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","forEach","card","setHideSuggestions","uInput","regex","RegExp","match","preventDefault","setNewCardIndex","findMatches","SignupFormComponent","createAccount","error","headers","password2","email","test","checkEmail","UpdateCardFormComponent","dialog","activeCardIndex","cardCopy","cardIndex","updateCard","resp","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","close","onNoClick","cancel","Card","Vorlesung","CardsPageComponent","route","stateServie","inTypingField","key","goNext","goPrev","vlAbrv","snapshot","paramMap","get","getTyping","HomePageComponent","LoginPageComponent","SignupPageComponent","CardsService","cards$","newCardIndex$","activeCardIndex$","split","asObservable","next","getCardsFromLectureAbrv","pipe","getValue","_id","body","setTimeout","providedIn","HttpService","urlBase","user$","lecture$","errors$","httpOptions","observe","addErrors","post","put","lectures$","remember","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","err","splice","StatesService","formMode$","loading$","hideSgtn$","typing$","lastFormMode","environment","production","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\n  { path: \"login\", component: LoginPageComponent },\n  { path: \"signup\", component: SignupPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  public constructor(private router: Router, private titleService: Title) {\n    this.titleService.setTitle(\"Home\");\n  }\n}\n","<router-outlet></router-outlet>\n","//Modules\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule, Injectable } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport {\n  CarouselModule,\n  WavesModule,\n  CollapseModule,\n  TooltipModule,\n} from \"angular-bootstrap-md\";\nimport { KatexModule } from \"ng-katex\";\n\n//Components\nimport { AppComponent } from \"./app.component\";\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\nimport { CardComponent } from \"./components/card/card.component\";\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\n//Services\nimport { StatesService } from \"./services/states.service\";\nimport { HttpService } from \"./services/http.service\";\n\n//Material Modules\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\n//Gestures\nimport {\n  HammerModule,\n  HammerGestureConfig,\n  HAMMER_GESTURE_CONFIG,\n} from \"@angular/platform-browser\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\nimport { StoreModule } from \"@ngrx/store\";\ndeclare var Hammer: any;\n//Config to allow swipe gestures on carousel\n@Injectable()\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = <any>{\n    pan: { direction: Hammer.DIRECTION_All },\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\n  };\n\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: \"auto\",\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\n        ? Hammer.PointerEventInput\n        : Hammer.TouchInput,\n      recognizers: [\n        [\n          Hammer.Swipe,\n          {\n            direction: Hammer.DIRECTION_HORIZONTAL,\n          },\n        ],\n      ],\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SearchBarComponent,\n    AddCardFormComponent,\n    CarouselComponent,\n    CardComponent,\n    AddLectureFormComponent,\n    LecturesComponent,\n    HomePageComponent,\n    CardsPageComponent,\n    UpdateCardFormComponent,\n    LoginPageComponent,\n    LoginFormComponent,\n    SignupPageComponent,\n    SignupFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    CarouselModule,\n    WavesModule,\n    HammerModule,\n    CollapseModule,\n    TooltipModule,\n    StoreModule.forRoot({}, {}),\n    KatexModule,\n  ],\n  providers: [\n    StatesService,\n    HttpService,\n\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-add-card-form\",\n  templateUrl: \"./add-card-form.component.html\",\n  styleUrls: [\"./add-card-form.component.css\"],\n})\nexport class AddCardFormComponent implements OnInit {\n  lecture: Vorlesung;\n  newCard: Card;\n  hidden: boolean;\n  Contentlength: number;\n  themaLength: number;\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.http\n      .getCurrentLecture()\n      .subscribe((lecture) => (this.lecture = lecture));\n  }\n  setStyle() {}\n  onSubmit(f: NgForm) {\n    this.newCard = new Card(f.value.thema, f.value.content, this.lecture.abrv);\n    this.cardsService.addCard(this.newCard).subscribe((res) => {\n      f.reset();\n    });\n  }\n  inField() {\n    this.stateService.setTyping(true);\n  }\n  resetNav() {\n    this.stateService.setTyping(false);\n  }\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        ngModel\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        ngModel\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(content, thema)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\n@Component({\n  selector: \"app-add-lecture-form\",\n  templateUrl: \"./add-lecture-form.component.html\",\n  styleUrls: [\"./add-lecture-form.component.css\"],\n})\nexport class AddLectureFormComponent implements OnInit {\n  constructor(\n    private http: HttpService,\n    private statesService: StatesService\n  ) {}\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\n  ngOnInit(): void {}\n  onSubmit(f: NgForm) {\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv.toLowerCase());\n    this.statesService.setLoadingState(true);\n    this.http.addLecture(newLecture).subscribe((response) => {\n      this.statesService.setLoadingState(false);\n      this.emitVl.emit(newLecture);\n    });\n\n    f.reset();\n  }\n\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  isDisabled(name, abrv) {\n    if (!name.value || !abrv.value) {\n      return true;\n    } else {\n      return (\n        abrv.value.length == 0 ||\n        abrv.value.length < 3 ||\n        abrv.value.length > 7 ||\n        name.value.length == 0 ||\n        name.value.length > 60\n      );\n    }\n  }\n}\n","<div id=\"addLecture\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Vorlesung hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"name\">Vorlesungsname</label>\n      <input\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Datenstrukturen und Algorithmen\"\n        minlength=\"3\"\n        required\n        #name=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\n        >{{ getLength(name) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"abrv\">Abkürzung</label>\n      <input\n        class=\"form-control\"\n        id=\"abrv\"\n        name=\"abrv\"\n        required\n        #abrv=\"ngModel\"\n        ngModel\n        placeholder=\"Dsal\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\n        >{{ getLength(abrv) }}/7\n      </small>\n    </div>\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(name, abrv)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { KatexOptions } from \"ng-katex\";\nimport { ViewChild } from \"@angular/core\";\nimport { CardsService } from \"../../services/cards.service\";\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"],\n})\nexport class CardComponent implements OnInit {\n  @Input() card: Card;\n  @ViewChild(\"test\", { static: true }) content;\n  constructor(private cs: CardsService) {}\n  public isCollapsed = true;\n  ngOnInit(): void {\n    this.cs.getActiveCardIndex().subscribe((change) => {\n      //hides te card content when carousel slides\n      this.content.hide();\n    });\n  }\n}\n","<div class=\"card\" id=\"`{{ card._id }}`\">\n  <div class=\"card-header\">\n    {{ card.thema }}\n  </div>\n  <div class=\"card-body\">\n    <button\n      mdbBtn\n      color=\"primary\"\n      class=\"btn btn-light\"\n      type=\"button\"\n      (click)=\"test.toggle()\"\n      mdbWavesEffect\n    >\n      Mehr dazu\n      <i class=\"fas fa-caret-down\"></i>\n    </button>\n    <div class=\"\" mdbCollapse #test>\n      <pre lang=\"de\">\n        <ng-katex-paragraph paragraph={{card.content}}></ng-katex-paragraph>\n      </pre>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, HostListener, ViewChild } from \"@angular/core\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrls: [\"./carousel.component.css\"],\n})\nexport class CarouselComponent implements OnInit {\n  lecture: Vorlesung;\n\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\n    this.carousel.previousSlide();\n  }\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\n    this.carousel.nextSlide();\n  }\n  cards: Card[]; //array of all the cards\n  activeSlide: number = 0;\n  title: string;\n  addComponentHidden: boolean;\n  formShow: boolean;\n  formMode: string;\n\n  constructor(\n    private httpService: HttpService,\n    private stateService: StatesService,\n    private cardsService: CardsService\n  ) {}\n\n  ngOnInit(): void {\n    this.httpService.getCurrentLecture().subscribe((lecture) => {\n      this.lecture = lecture;\n      this.title = this.lecture.name;\n    });\n\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\n    this.stateService.setFormMode(\"none\");\n    this.stateService.getFormMode().subscribe((mode) => {\n      this.formShow = mode == \"add\";\n      this.formMode = mode;\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      if (this.carousel && this.activeSlide != index) {\n        this.activeSlide = index;\n        this.carousel.selectSlide(index);\n      }\n    });\n  }\n\n  toggleAddView(): void {\n    if (this.formMode != \"edit\") {\n      if (this.formMode == \"add\") {\n        this.stateService.setFormMode(\"none\");\n      } else {\n        this.stateService.setFormMode(\"add\");\n      }\n    }\n  }\n  enableEdit() {\n    this.stateService.setFormMode(\"edit\");\n  }\n\n  setClass() {\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\n  }\n\n  selectSlide(n: number) {\n    this.carousel.selectSlide(n.toString());\n  }\n  showRandomCard() {\n    var rand: number = this.activeSlide;\n    var count = 0;\n    while (count < 5 && rand == this.activeSlide) {\n      //calculate a new random index\n      count++;\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\n    }\n    this.carousel.selectSlide(rand.toString());\n  }\n  goToPrev() {\n    if (this.formMode != \"edit\") {\n      this.carousel.previousSlide();\n    }\n  }\n  goToNext() {\n    if (this.formMode != \"edit\") {\n      this.carousel.nextSlide();\n    }\n  }\n  onSlide(slideEvent) {\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\n  }\n}\n","<h1 id=\"vorlesung\">{{ title }}</h1>\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\n  <button\n    class=\"btn btn-light\"\n    id=\"rand\"\n    placement=\"top\"\n    ngbTooltip=\"Zufall\"\n    (click)=\"showRandomCard()\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n  >\n    <div class=\"fas fa-random\"></div>\n  </button>\n  <button\n    class=\"btn btn-light\"\n    id=\"editCard\"\n    type=\"button\"\n    placement=\"top\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n    (click)=\"enableEdit()\"\n    ngbTooltip=\"Bearbeiten\"\n  >\n    <div class=\"fas fa-pen\"></div>\n  </button>\n\n  <button\n    [ngClass]=\"setClass()\"\n    id=\"toggleAdd\"\n    type=\"button\"\n    data-toggle=\"button\"\n    (click)=\"toggleAddView()\"\n    placement=\"top\"\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\n    [disabled]=\"formMode == 'edit'\"\n  >\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\n  </button>\n</div>\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\n  <a (click)=\"goToPrev()\">\n    <span class=\"fas fa-chevron-left\"></span>\n  </a>\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\n    <mdb-carousel\n      (activeSlideChange)=\"onSlide($event)\"\n      #mycarousel\n      [(activeSlideIndex)]=\"activeSlide\"\n      [animation]=\"'slide'\"\n      [isControls]=\"false\"\n      [allowSwipe]=\"true\"\n      [interval]=\"'0'\"\n      ><ng-container *ngFor=\"let card of cards; index as i\">\n        <mdb-carousel-item [id]=\"i.toString()\">\n          <app-card [card]=\"card\"></app-card>\n        </mdb-carousel-item>\n      </ng-container>\n    </mdb-carousel>\n  </div>\n  <a (click)=\"goToNext()\">\n    <span class=\"fas fa-chevron-right\"></span>\n  </a>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\n@Component({\n  selector: \"app-lectures\",\n  templateUrl: \"./lectures.component.html\",\n  styleUrls: [\"./lectures.component.css\"],\n})\nexport class LecturesComponent implements OnInit {\n  lectures: Vorlesung[];\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\n  @Input() newVl: Vorlesung;\n\n  constructor(private httpService: HttpService) {}\n\n  ngOnInit(): void {\n    this.httpService.getAllLectures().subscribe((lectures) => {\n      this.lectures = lectures;\n    });\n  }\n\n  ngOnChanges() {\n    if (this.newVl) {\n      console.log(\"got new vl: \", this.newVl);\n      this.lectures.push(this.newVl);\n    }\n  }\n  setLink(lecture: Vorlesung) {\n    return \"/vorlesung/\" + lecture.abrv;\n  }\n}\n","<ul class=\"list list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\n  </li>\n</ul>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-login-form\",\n  templateUrl: \"./login-form.component.html\",\n  styleUrls: [\"./login-form.component.css\"],\n})\nexport class LoginFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  public errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.http.login(form.value).subscribe((response) => {\n      if (response.status == 200) {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  isDisabled(username, password) {\n    if (!(username.value && password.value)) {\n      return true;\n    }\n    return username.value.length < 5 || password.value.length < 7;\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"username\"\n        required\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        required\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"remember\"\n        name=\"remember\"\n        #remember=\"ngModel\"\n        [checked]=\"true\"\n        ngModel\n      />\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, password)\"\n    >\n      Login\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { Router } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\nimport { User } from \"src/app/models/User\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { StatesService } from \"src/app/services/states.service\";\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"],\n})\nexport class NavBarComponent implements OnInit {\n  public user: User;\n  public cards: Card[];\n  public errors: string[];\n\n  public loading: boolean = false;\n  public constructor(\n    private router: Router,\n    private titleService: Title,\n    private http: HttpService,\n    private cardsService: CardsService,\n    private statesService: StatesService\n  ) {}\n\n  ngOnInit(): void {\n    this.setPageTitle();\n    this.http.getUser().subscribe((user) => (this.user = user));\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n    this.http.getErrors().subscribe((errors) => (this.errors = errors));\n    if (\n      this.router.url != \"/\" &&\n      this.router.url != \"/login\" &&\n      this.router.url != \"/signup\"\n    ) {\n      this.cardsService.getCards().subscribe((cards) => {\n        this.cards = cards;\n      });\n    }\n  }\n  closeAlert(i: number) {\n    this.http.removeError(i);\n  }\n  isActive(path: string): string {\n    return path === this.router.url ? \"active\" : \"\";\n  }\n  setPageTitle(): void {\n    let currentTitle: string;\n    switch (this.router.url) {\n      case \"/login\":\n        currentTitle = \"Login\";\n        break;\n      case \"/signup\":\n        currentTitle = \"Sign Up\";\n        break;\n      case \"/\":\n        currentTitle = \"Home\";\n        break;\n      default:\n        currentTitle = \"Cards\";\n    }\n    this.titleService.setTitle(currentTitle);\n  }\n  logout() {\n    this.http.logout();\n    this.user = null;\n    this.router.navigate([\"/\"]);\n  }\n}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\n  role=\"alert\"\n  style=\"padding-right: 0;\"\n>\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\" id=\"navlist\">\n          <li class=\"{{ isActive('/') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\n            >\n          </li>\n\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\"\n              ><i class=\"fas fa-user\"></i> Login</a\n            >\n          </li>\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\"\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\n            >\n          </li>\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\n            <div class=\"dropdown\">\n              <a\n                class=\"nav-link\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-user-circle\"></i> Account\n              </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a\n                  class=\"dropdown-item disabled\"\n                  href=\"#\"\n                  placement=\"bottom\"\n                  ngbTooltip=\"im Aufbau\"\n                  >Account management</a\n                >\n                <a class=\"dropdown-item\" (click)=\"logout()\">\n                  Logout\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\n      <app-search-bar></app-search-bar>\n    </div>\n  </div>\n</nav>\n<div id=\"progress\">\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n</div>\n\n<div\n  #alert\n  class=\"alert alert-warning alert-dismissible fade show\"\n  role=\"alert\"\n  *ngFor=\"let error of errors; index as i\"\n>\n  <button\n    type=\"button\"\n    class=\"close\"\n    aria-label=\"Close\"\n    (click)=\"closeAlert(i)\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  {{ error }}\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"],\n})\nexport class SearchBarComponent implements OnInit {\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService\n  ) {}\n  cards: Card[];\n  suggestions: SearchSuggestion[];\n  uInput: string;\n  clearSuggestions: boolean;\n\n  ngOnInit(): void {\n    this.stateService.getHideSuggestions().subscribe((value) => {\n      this.clearSuggestions = value;\n      if (value) {\n        this.suggestions = [];\n      }\n    });\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n      cards.forEach((card) => {\n        if (card.thema == null) {\n          card.thema = \"\";\n        }\n        if (card.content == null) {\n          card.content = \"\";\n        }\n      });\n    });\n  }\n  inField() {\n    this.stateService.setTyping(true);\n  }\n  resetNav() {\n    this.stateService.setTyping(false);\n  }\n  findMatches(e: Event) {\n    this.stateService.setHideSuggestions(false); //show suggestions\n    if (this.uInput && this.uInput.length > 2) {\n      this.suggestions = [];\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\n\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].thema.match(regex)) {\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\n        }\n      }\n    }\n  }\n  navigateTo(e: Event, index: number) {\n    e.preventDefault();\n    this.uInput = \"\";\n    this.cardsService.setNewCardIndex(index);\n  }\n}\n","<input\n  [(ngModel)]=\"uInput\"\n  (input)=\"findMatches($event)\"\n  class=\"form-control float-right\"\n  id=\"search\"\n  type=\"search\"\n  placeholder=\"Thema suchen\"\n  (focus)=\"inField()\"\n  (blur)=\"resetNav()\"\n/>\n<div *ngIf=\"suggestions\" id=\"matches\">\n  <ul class=\"list-group\">\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\n        suggestion.title\n      }}</a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-signup-form\",\n  templateUrl: \"./signup-form.component.html\",\n  styleUrls: [\"./signup-form.component.css\"],\n})\nexport class SignupFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.http.createAccount(form.value).subscribe(\n      (response) => {\n        if (response) {\n              this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          console.log(error);\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n  setStyle(password, password2) {\n    if (\n      password2.value &&\n      password2.value.length > 5 &&\n      password2.value != password.value\n    ) {\n      return \"box-shadow:0 0 3px #CC0000;\";\n    }\n    return \"\";\n  }\n  checkEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    }\n\n    return false;\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  isDisabled(username, email, password, password2) {\n    if (!(username.value && email.value && password.value)) {\n      return true;\n    }\n    return (\n      username.value.length < 5 ||\n      password.value.length < 7 ||\n      password.value != password2.value ||\n      !this.checkEmail(email.value)\n    );\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        required\n        maxlength=\"20\"\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email Adresse</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        name=\"email\"\n        id=\"email\"\n        aria-describedby=\"emailHelp\"\n        required\n        #email=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n      />\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort wiederholen</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password2\"\n        id=\"password2\"\n        #password2=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n        [style]=\"setStyle(password, password2)\"\n      />\n      <small class=\"form-text\"> </small>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, email, password, password2)\"\n    >\n      Account erstellen\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-update-card-form\",\n  templateUrl: \"./update-card-form.component.html\",\n  styleUrls: [\"./update-card-form.component.css\"],\n})\nexport class UpdateCardFormComponent implements OnInit {\n  public cardCopy: Card;\n  private cards: Card[];\n  private cardIndex: number; //saves the cardindex which the user is currently updating\n  private activeCardIndex: number; //saves the active cardindex\n  constructor(\n    private cardsService: CardsService,\n    private statesService: StatesService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    });\n    this.cardsService.getActiveCardIndex().subscribe((index) => {\n      this.activeCardIndex = index;\n      if (this.cards) {\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\n      }\n      this.cardIndex = this.activeCardIndex;\n    });\n  }\n  inField() {\n    this.statesService.setTyping(true);\n  }\n  resetNav() {\n    this.statesService.setTyping(false);\n  }\n  onSubmit(f: NgForm) {\n    this.cardCopy.content = f.value.content;\n    this.cardCopy.thema = f.value.thema;\n    this.cardsService\n      .updateCard({ ...this.cardCopy }, this.cardIndex)\n      .subscribe((resp) => {\n        f.reset();\n      });\n  }\n  cancelEdit() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: \"400px\",\n    });\n  }\n\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n@Component({\n  selector: \"dialog-overview-example-dialog\",\n  templateUrl: \"dialog.html\",\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    private service: StatesService\n  ) {}\n\n  cancel() {\n    this.service.setFormMode(\"reset\");\n    this.service.setLoadingState(false);\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte bearbeiten</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        [(ngModel)]=\"cardCopy.thema\"\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        [(ngModel)]=\"cardCopy.content\"\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <input\n        class=\"btn btn-success mb-2 mr-1\"\n        type=\"submit\"\n        value=\"Sichern\"\n        [disabled]=\"isDisabled(content, thema)\"\n      />\n      <input\n        class=\"btn btn-danger mb-2\"\n        type=\"button\"\n        value=\"Abbruch\"\n        (click)=\"cancelEdit()\"\n      />\n    </div>\n  </form>\n</div>\n","<h1 mat-dialog-title>Abbruch</h1>\n<div mat-dialog-content>\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\n</div>\n<hr />\n<div mat-dialog-actions style=\"text-align: right;\">\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\n    Nein,zurück\n  </button>\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\n</div>\n","export class Card {\n  _id?: string;\n  thema: string;\n  content: string;\n  abrv: string;\n  constructor(thema, content, abrv) {\n    this.thema = thema;\n    this.content = content;\n    this.abrv = abrv;\n  }\n}\n","export class Vorlesung {\n  name: string;\n  abrv: string;\n  constructor(name, abrv) {\n    this.name = name;\n    this.abrv = abrv;\n  }\n}\n","import {\n  Component,\n  OnInit,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Title } from \"@angular/platform-browser\";\n@Component({\n  selector: \"app-cards-page\",\n  templateUrl: \"./cards-page.component.html\",\n  styleUrls: [\"./cards-page.component.css\"],\n})\nexport class CardsPageComponent implements OnInit {\n  public vlAbrv: string;\n  public lecture: Vorlesung;\n  public loading: boolean = true;\n  public formMode: string = \"none\";\n  public cards: Card[];\n\n  private inTypingField: boolean;\n  @ViewChild(\"alert\", { static: false }) alert: ElementRef;\n\n  @HostListener(\"click\", [\"$event.target\"])\n  onClick() {\n    this.stateServie.setHideSuggestions(true);\n  }\n  @HostListener(\"window:keyup\", [\"$event\"])\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.inTypingField) {\n      if (event.key == \"ArrowRight\") {\n        this.cardsService.goNext();\n      } else if (event.key == \"ArrowLeft\") {\n        this.cardsService.goPrev();\n      }\n    }\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private stateServie: StatesService,\n    private cardsService: CardsService,\n    private http: HttpService,\n    private title: Title\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Cards\");\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\n    this.cardsService.getCards().subscribe((cards) => {\n      if (cards.length == 0) {\n        this.stateServie.setFormMode(\"add\");\n      }\n    });\n    this.stateServie.getTyping().subscribe((val) => (this.inTypingField = val));\n    this.stateServie\n      .getLoadingState()\n      .subscribe((value) => (this.loading = value));\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\n  }\n\n  setLoading(loading: boolean): void {\n    this.loading = loading;\n    this.stateServie.setLoadingState(loading);\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<br />\n<div class=\"container\">\n  <app-carousel></app-carousel>\n  <br />\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { StatesService } from \"../../services/states.service\";\nimport { from } from \"rxjs\";\n@Component({\n  selector: \"app-home-page\",\n  templateUrl: \"./home-page.component.html\",\n  styleUrls: [\"./home-page.component.css\"],\n})\nexport class HomePageComponent implements OnInit {\n  public loading: boolean = false;\n  public newVl: Vorlesung;\n  constructor(private statesService: StatesService) {}\n\n  ngOnInit(): void {\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n  }\n\n  emitVl(lecture: Vorlesung) {\n    console.log(\"vl: \", lecture);\n    this.newVl = lecture;\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<div class=\"container\">\n  <app-lectures [newVl]=\"newVl\"></app-lectures>\n  <br />\n  <app-add-lecture-form></app-add-lecture-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-login-form></app-login-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.css']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-signup-form></app-signup-form>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"./http.service\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { Card } from \"../models/Card\";\nimport { StatesService } from \"./states.service\";\nimport { tap, map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CardsService {\n  //contains lecture abreviation of the current lecutre\n  private abrv: string;\n  //loads cards once from the server and whenever lecture changes\n  //and provides them as an Observable\n  private cards$: BehaviorSubject<Card[]> = new BehaviorSubject<Card[]>([]);\n  //provides a Subject to set a new index on which card the carousel should show\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\n    0\n  );\n  //provides a Subject of the index of the card that is currently shown\n  //only the carousel shoul set nex values for this subject\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\n    number\n  >(0);\n\n  constructor(\n    private httpService: HttpService, //to make calls to the server\n    private statesService: StatesService, //for setting the loading state\n    private router: Router //used to get the lecture abreviation from the route\n  ) {}\n\n  getCards(): Observable<Card[]> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the lecture abreviation from the route\n    if (this.abrv === abrv) {\n      //cards were already loaded for this lecture\n      return this.cards$.asObservable();\n    } else {\n      this.abrv = abrv;\n      //remove the old cards before fetching the new ones\n      this.cards$.next([]);\n      //make server request\n      this.httpService.getCardsFromLectureAbrv(abrv).subscribe((cards) => {\n        this.cards$.next(cards);\n      });\n      return this.cards$.asObservable();\n    }\n  }\n\n  updateCard(card: Card, index: number): Observable<any> {\n    this.statesService.setLoadingState(true);\n    //send update to server using http service\n    return this.httpService.updateCard(card).pipe(\n      tap((resp) => {\n        this.statesService.setLoadingState(false);\n        this.statesService.setFormMode(\"reset\"); //reset form to its previous state\n        //update subject\n        let cards = this.cards$.getValue();\n        cards[index] = card;\n        this.cards$.next(cards);\n      })\n    );\n  }\n\n  addCard(card: Card): Observable<any> {\n    this.statesService.setLoadingState(true);\n    //send new card to server using http service\n    return this.httpService.addCard(card).pipe(\n      tap((response) => {\n        this.statesService.setLoadingState(false);\n        card._id = response.body; //set id received from server response\n        //upate subject\n        let cards = this.cards$.getValue();\n        cards.push(card);\n        this.cards$.next(cards);\n\n        setTimeout(() => {\n          //show new card timeout needed because the carousel needs time to refresh\n          //its view\n          this.setNewCardIndex(cards.length - 1);\n        }, 100);\n      })\n    );\n  }\n  goNext() {\n    //show the next slide index\n    let index = this.newCardIndex$.getValue();\n    index++;\n    if (index >= this.cards$.getValue().length) {\n      index = 0;\n    }\n    this.newCardIndex$.next(index);\n  }\n  goPrev() {\n    //show the next slide index\n    let index = this.newCardIndex$.getValue();\n    index--;\n    if (index < 0) {\n      index = this.cards$.getValue().length - 1;\n    }\n    this.newCardIndex$.next(index);\n  }\n  //only the carousel should be subscribed to this\n  getNewCardIndex(): Observable<number> {\n    return this.newCardIndex$.asObservable();\n  }\n  //use this function to tell the carousel to go to a specific slide i\n  setNewCardIndex(i: number) {\n    this.newCardIndex$.next(i);\n  }\n  //only the carousel should call this method (on the sliding event)\n  setActiveCardIndex(i: number) {\n    this.activeCardIndex$.next(i);\n  }\n  //subsribe to this function to always get the index of the card that is currently shown\n  getActiveCardIndex(): Observable<number> {\n    return this.activeCardIndex$.asObservable();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { StatesService } from \"./states.service\";\nimport { Router } from \"@angular/router\";\n//Models\nimport { User } from \"../models/User\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  private urlBase: string = \"api/\"; //url  base on which to adress the server with\n  private user$: BehaviorSubject<User> = new BehaviorSubject<User>(null); //stores the user\n  private lecture$: BehaviorSubject<Vorlesung> = new BehaviorSubject<Vorlesung>(\n    new Vorlesung(\"\", \"\")\n  ); //holds the current lecture\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\n  private errors$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>(\n    []\n  );\n  private httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(\n    private http: HttpClient, //for sending http requests\n    private statesService: StatesService, //set the loading state\n    private router: Router //to get info in the current url\n  ) {}\n\n  //get Cards for a specific lecture from server\n  //This function shoul only be called by the cardsservice to initially load cards from server\n  getCardsFromLectureAbrv(abrv: string): Observable<Card[]> {\n    this.statesService.setLoadingState(true);\n    {\n      return this.http\n        .get<Card[]>(this.urlBase + \"cards/?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap(\n            (res) => {\n              this.statesService.setLoadingState(false);\n            },\n            (error) => {\n              this.addErrors(error);\n              this.statesService.setLoadingState(false);\n            }\n          ),\n          map((res) => res.body)\n        );\n    }\n  }\n\n  //add card to the database on server\n  addCard(card: Card): Observable<HttpResponse<any>> {\n    return this.http\n      .post<any>(\n        this.urlBase + \"cards/new\",\n        { card: card },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap(\n          (res) => {\n            this.statesService.setLoadingState(false);\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  //update card on server\n  updateCard(card: Card): Observable<HttpResponse<any>> {\n    return this.http\n      .put<any>(\n        this.urlBase + \"cards/update\",\n        { card: card },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap(\n          (res) => {\n            this.statesService.setLoadingState(false);\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  //get an array of all lectures\n  getAllLectures(): Observable<Vorlesung[]> {\n    this.statesService.setLoadingState(true);\n    if (this.lectures$) {\n      //lectures were already loaded once\n      this.statesService.setLoadingState(false);\n      return this.lectures$.asObservable();\n    } else {\n      //load lectures from the server\n      return this.http\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\n          observe: \"response\",\n        })\n        .pipe(\n          tap(\n            (res) => {\n              this.statesService.setLoadingState(false);\n              this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body); //set the lectures subject\n            },\n            (error) => {\n              this.addErrors(error);\n              this.statesService.setLoadingState(false);\n            }\n          ),\n          map((res) => res.body)\n        );\n    }\n  }\n\n  //get the Current lecture\n  getCurrentLecture(): Observable<Vorlesung> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the abreviation of the lecture from the url\n    if (this.lecture$.getValue().abrv == abrv) {\n      //the lecture was already loaded\n      return this.lecture$.asObservable();\n    } else {\n      //fetch the lecture from the server\n      this.http\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .subscribe(\n          (res) => {\n            this.lecture$.next(res.body);\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        );\n      return this.lecture$.asObservable();\n    }\n  }\n\n  //add a lecture to the database on the server\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<any>(\n        this.urlBase + \"lectures/new\",\n        { lecture: lecture },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap(\n          (res) => {\n            //add the new lecture to the lectures subject\n            this.statesService.setLoadingState(false);\n            let lectures = this.lectures$.getValue();\n            lectures.push(lecture);\n            this.lectures$.next(lectures);\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  //login the user on the server\n  login(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"login\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap(\n          (res) => {\n            this.statesService.setLoadingState(false);\n            this.user$.next(res.body); //set the user\n            if (form.remember) {\n              localStorage.setItem(\n                \"user\",\n                JSON.stringify(this.user$.getValue())\n              ); //store the user locally to keep the session\n            }\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  getUser(): Observable<User> {\n    if (this.user$.getValue() == null) {\n      let user = JSON.parse(localStorage.getItem(\"user\")); //load the user from the local storage\n      this.user$.next(user);\n    }\n    return this.user$.asObservable();\n  }\n\n  //logout the user in front- and backend\n  logout() {\n    this.statesService.setLoadingState(true);\n    this.http.get<any>(this.urlBase + \"user/logout\").subscribe((res) => {\n      this.statesService.setLoadingState(false);\n    });\n    localStorage.removeItem(\"user\"); //remove the user data from localstorage\n    this.user$.next(null);\n  }\n\n  //form = {username,email,password}\n  createAccount(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"user/new\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap(\n          (res) => {\n            this.user$.next(res.body); //login the user (on success)\n            this.statesService.setLoadingState(false);\n          },\n          (error) => {\n            console.log(error.headers);\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n  addErrors(error) {\n    let err = error.error;\n    let errors = this.errors$.getValue();\n    console.log(error.status);\n    if (error.status == 422) {\n      if (typeof err == \"string\") {\n        errors.push(err);\n      } else {\n        console.log(typeof err);\n        errors.push(...err);\n      }\n    } else if (error.status >= 500) {\n      errors.push(\n        \"Der Server scheint offline zu sein. Versuche es später erneut.\"\n      );\n    } else {\n      errors.push(\n        \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\"\n      );\n      console.log(error);\n    }\n    this.errors$.next(errors);\n  }\n\n  //removes a specific error from the error array\n  removeError(index: number) {\n    let errors = this.errors$.getValue();\n    errors.splice(index, 1); //remove error at position index\n    this.errors$.next(errors);\n  }\n\n  getErrors(): Observable<string[]> {\n    return this.errors$.asObservable();\n  }\n}\n","//This service is made to manage states across components\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class StatesService {\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\n  private lastFormMode: string;\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private typing$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  constructor() {}\n\n  getFormMode(): Observable<string> {\n    return this.formMode$.asObservable();\n  }\n  setFormMode(mode: string): void {\n    if (mode == \"reset\") {\n      if (!this.lastFormMode) {\n        //last form mode is undefined\n        this.lastFormMode = \"none\";\n      } // last Form mode defined\n      this.formMode$.next(this.lastFormMode);\n    } else {\n      this.formMode$.next(mode);\n      if (mode != \"edit\") this.lastFormMode = mode;\n    }\n  }\n  setTyping(val: boolean) {\n    this.typing$.next(val);\n  }\n  getTyping(): Observable<boolean> {\n    return this.typing$.asObservable();\n  }\n  getLoadingState(): BehaviorSubject<boolean> {\n    return this.loading$;\n  }\n  setLoadingState(value: boolean) {\n    this.loading$.next(value);\n  }\n  setHideSuggestions(value: boolean) {\n    this.hideSgtn$.next(value);\n  }\n  getHideSuggestions(): Observable<boolean> {\n    return this.hideSgtn$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport \"hammerjs\";\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}