{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/cards-overview/cards-overview.component.ts","webpack:///src/app/components/cards-overview/cards-overview.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/change-profile/change-profile.component.ts","webpack:///src/app/components/change-profile/change-profile.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/notifications/notifications.component.ts","webpack:///src/app/components/notifications/notifications.component.html","webpack:///src/app/components/overview/overview.component.ts","webpack:///src/app/components/overview/overview.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/signup-form/signup-form.component.ts","webpack:///src/app/components/signup-form/signup-form.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/models/Notification.ts","webpack:///src/app/models/User.ts","webpack:///src/app/models/Vorlesung.ts","webpack:///src/app/routes/about/about.component.ts","webpack:///src/app/routes/about/about.component.html","webpack:///src/app/routes/account-page/account-page.component.ts","webpack:///src/app/routes/account-page/account-page.component.html","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/routes/login-page/login-page.component.ts","webpack:///src/app/routes/login-page/login-page.component.html","webpack:///src/app/routes/signup-page/signup-page.component.ts","webpack:///src/app/routes/signup-page/signup-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/config.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/notifications.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","titleService","setTitle","selector","templateUrl","styleUrls","MyHammerConfig","overrides","pan","direction","Hammer","DIRECTION_All","swipe","DIRECTION_VERTICAL","element","mc","touchAction","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","recognizers","Swipe","DIRECTION_HORIZONTAL","AppModule","provide","useValue","useClass","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","http","subscriptions$","sub","getCurrentLecture","subscribe","lecture","push","forEach","unsubscribe","f","newCard","value","thema","content","abrv","addCard","res","reset","setTyping","color","length","elem","onSubmit","inField","resetNav","AddLectureFormComponent","statesService","emitVl","newLecture","name","toLowerCase","setLoadingState","addLecture","response","emit","field","max","SafeHtmlPipe","sanitized","bypassSecurityTrustHtml","CardComponent","cs","styleAppend","parsed","isCollapsed","getActiveCardIndex","change","hide","card","latex","parse","cardContent","generator","hyphenate","doc","htmlDocument","body","innerHTML","static","CardsOverviewComponent","userService","getUserInfo","info","cards","CarouselComponent","httpService","event","carousel","previousSlide","nextSlide","activeSlide","getUserId","userId","title","getCards","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","selectSlide","n","toString","rand","count","Math","floor","random","slideEvent","parseInt","relatedTarget","setActiveCardIndex","currCard","author","showRandomCard","enableEdit","toggleAddView","ChangeProfileComponent","user","surname","userInfo","form","updateAccount","updatePassword","password","password2","s1","s2","checkEmail","email","username","test","changeAccount","changePassword","FooterComponent","LecturesComponent","getAllLectures","lectures","newVl","console","log","LoginFormComponent","login","submit","NavBarComponent","notification","loading","setPageTitle","authentication","val","loggedIn","getLoadingState","events","url","clearNotifications","getNotifications","notifs","notifications","match","i","removeNotification","notif","type","currentTitle","logout","scale","duration","animations","NotificationsComponent","OverviewComponent","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","setHideSuggestions","uInput","regex","RegExp","preventDefault","setNewCardIndex","findMatches","SignupFormComponent","createAccount","UpdateCardFormComponent","dialog","activeCardIndex","cardCopy","cardIndex","updateCard","resp","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","close","onNoClick","cancel","Card","Notification","t","m","message","HttpError","c","InfoMessage","SuccessMessage","User","Vorlesung","AboutComponent","AccountPageComponent","cardCount","page","s","changePage","CardsPageComponent","route","stateServie","inTypingField","key","goNext","goPrev","vlAbrv","snapshot","paramMap","get","getTyping","HomePageComponent","LoginPageComponent","SignupPageComponent","CardsService","cards$","newCardIndex$","activeCardIndex$","config","split","asObservable","next","urlBase","observe","error","handleErrors","put","headers","pipe","getValue","setTimeout","post","_id","providedIn","HttpConfig","HttpService","lecture$","httpOptions","lectures$","addErrors","err","status","addNotification","navigateByUrl","NotificationsService","notifications$","splice","types","StatesService","formMode$","loading$","hideSgtn$","typing$","lastFormMode","UserService","auth$","userId$","localStorage","getItem","setUser","navigate","remember","removeLoginInfo","accountInfo$","date","Date","setItem","JSON","stringify","removeItem","environment","production","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nimport { AboutComponent } from \"./routes/about/about.component\";\nimport { AccountPageComponent } from \"./routes/account-page/account-page.component\";\nimport { UserService as AuthGuard } from \"./services/user.service\";\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\n  { path: \"login\", component: LoginPageComponent },\n  { path: \"signup\", component: SignupPageComponent },\n  { path: \"about\", component: AboutComponent },\n  {\n    path: \"account\",\n    component: AccountPageComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  public constructor(private router: Router, private titleService: Title) {\n    this.titleService.setTitle(\"Home\");\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<app-footer></app-footer>\n","//Modules\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule, Injectable, LOCALE_ID } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport {\n  CarouselModule,\n  WavesModule,\n  CollapseModule,\n  TooltipModule,\n} from \"angular-bootstrap-md\";\n\n//Components\nimport { AppComponent } from \"./app.component\";\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\nimport { CardComponent } from \"./components/card/card.component\";\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\n//Services\nimport { StatesService } from \"./services/states.service\";\nimport { HttpService } from \"./services/http.service\";\n\n//Material Modules\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\n//Gestures\nimport {\n  HammerModule,\n  HammerGestureConfig,\n  HAMMER_GESTURE_CONFIG,\n} from \"@angular/platform-browser\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { FooterComponent } from \"./components/footer/footer.component\";\nimport { AboutComponent } from \"./routes/about/about.component\";\nimport { AccountPageComponent } from \"./routes/account-page/account-page.component\";\nimport { OverviewComponent } from \"./components/overview/overview.component\";\nimport { ChangeProfileComponent } from \"./components/change-profile/change-profile.component\";\nimport { CardsOverviewComponent } from \"./components/cards-overview/cards-overview.component\";\nimport { NotificationsComponent } from \"./components/notifications/notifications.component\";\n\n//Localization\nimport { registerLocaleData } from \"@angular/common\";\nimport de from \"@angular/common/locales/de\";\n\n// the second parameter 'fr-FR' is optional\nregisterLocaleData(de);\n\n//Pipes\nimport { SafeHtmlPipe } from \"./components/card/card.component\";\n\ndeclare var Hammer: any;\n//Config to allow swipe gestures on carousel\n@Injectable()\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = <any>{\n    pan: { direction: Hammer.DIRECTION_All },\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\n  };\n\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: \"auto\",\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\n        ? Hammer.PointerEventInput\n        : Hammer.TouchInput,\n      recognizers: [\n        [\n          Hammer.Swipe,\n          {\n            direction: Hammer.DIRECTION_HORIZONTAL,\n          },\n        ],\n      ],\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SearchBarComponent,\n    AddCardFormComponent,\n    CarouselComponent,\n    CardComponent,\n    AddLectureFormComponent,\n    LecturesComponent,\n    HomePageComponent,\n    CardsPageComponent,\n    UpdateCardFormComponent,\n    LoginPageComponent,\n    LoginFormComponent,\n    SignupPageComponent,\n    SignupFormComponent,\n    FooterComponent,\n    AboutComponent,\n    AccountPageComponent,\n    OverviewComponent,\n    ChangeProfileComponent,\n    CardsOverviewComponent,\n    NotificationsComponent,\n    SafeHtmlPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    CarouselModule,\n    WavesModule,\n    HammerModule,\n    CollapseModule,\n    TooltipModule,\n    StoreModule.forRoot({}, {}),\n  ],\n  providers: [\n    StatesService,\n    HttpService,\n    { provide: LOCALE_ID, useValue: \"de\" },\n\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { Observable, Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-add-card-form\",\n  templateUrl: \"./add-card-form.component.html\",\n  styleUrls: [\"./add-card-form.component.css\"],\n})\nexport class AddCardFormComponent implements OnInit, OnDestroy {\n  lecture: Vorlesung;\n  newCard: Card;\n  hidden: boolean;\n  Contentlength: number;\n  themaLength: number;\n  subscriptions$: Subscription[] = [];\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    let sub = this.http\n      .getCurrentLecture()\n      .subscribe((lecture) => (this.lecture = lecture));\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  setStyle() {}\n  onSubmit(f: NgForm) {\n    this.newCard = new Card(\n      f.value.thema,\n      f.value.content,\n      this.lecture.abrv,\n      0\n    );\n    let sub = this.cardsService.addCard(this.newCard).subscribe((res) => {\n      f.reset();\n      sub.unsubscribe();\n    });\n  }\n  inField() {\n    this.stateService.setTyping(true);\n  }\n  resetNav() {\n    this.stateService.setTyping(false);\n  }\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Frage</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        ngModel\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Antwort</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        ngModel\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(content, thema)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"app-add-lecture-form\",\n  templateUrl: \"./add-lecture-form.component.html\",\n  styleUrls: [\"./add-lecture-form.component.css\"],\n})\nexport class AddLectureFormComponent implements OnInit {\n  subscriptions$: Subscription[] = [];\n  constructor(\n    private http: HttpService,\n    private statesService: StatesService\n  ) {}\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\n  ngOnInit(): void {}\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  onSubmit(f: NgForm) {\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv.toLowerCase());\n    this.statesService.setLoadingState(true);\n    let sub = this.http.addLecture(newLecture).subscribe((response) => {\n      this.statesService.setLoadingState(false);\n      this.emitVl.emit(newLecture);\n      sub.unsubscribe();\n    });\n\n    f.reset();\n  }\n\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  isDisabled(name, abrv) {\n    if (!name.value || !abrv.value) {\n      return true;\n    } else {\n      return (\n        abrv.value.length == 0 ||\n        abrv.value.length < 3 ||\n        abrv.value.length > 7 ||\n        name.value.length == 0 ||\n        name.value.length > 60\n      );\n    }\n  }\n}\n","<div id=\"addLecture\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Vorlesung hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"name\">Vorlesungsname</label>\n      <input\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Datenstrukturen und Algorithmen\"\n        minlength=\"3\"\n        required\n        #name=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\n        >{{ getLength(name) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"abrv\">Abkürzung</label>\n      <input\n        class=\"form-control\"\n        id=\"abrv\"\n        name=\"abrv\"\n        required\n        #abrv=\"ngModel\"\n        ngModel\n        placeholder=\"Dsal\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\n        >{{ getLength(abrv) }}/7\n      </small>\n    </div>\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(name, abrv)\"\n    />\n  </form>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  Pipe,\n  PipeTransform,\n} from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { ViewChild } from \"@angular/core\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Subscription } from \"rxjs\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { parse, HtmlGenerator } from \"latex.js/dist/latex.js\";\n\n@Pipe({ name: \"safeHtml\" })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"],\n})\nexport class CardComponent implements OnInit, OnDestroy {\n  @Input() card: Card;\n  @ViewChild(\"test\", { static: true }) content;\n  subscriptions$: Subscription[] = [];\n\n  styleAppend = `<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/css/katex.css\"><link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/css/article.css\"><script src=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/dist/js/base.js\"></script>`;\n  parsed: any = [];\n\n  constructor(private cs: CardsService) {}\n  public isCollapsed = true;\n  ngOnInit(): void {\n    let sub = this.cs.getActiveCardIndex().subscribe((change) => {\n      //hides te card content when carousel slides\n      this.content.hide();\n    });\n    if (this.card.latex != 0) {\n      this.parse(this.card.content);\n    } else {\n      this.parsed.push(this.card.content);\n    }\n    this.subscriptions$.push(sub);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  parse(cardContent: any) {\n    var latex = cardContent;\n    let generator = new HtmlGenerator({ hyphenate: false });\n    let doc = parse(latex, { generator: generator }).htmlDocument();\n    latex = this.styleAppend + doc.body.innerHTML;\n    this.parsed.push(latex);\n  }\n}\n","<div class=\"card\" id=\"`{{ card._id }}`\">\n  <div class=\"card-header\">\n    {{ card.thema }}\n  </div>\n  <div class=\"card-body\">\n    <button\n      mdbBtn\n      color=\"primary\"\n      class=\"btn btn-light\"\n      type=\"button\"\n      (click)=\"test.toggle()\"\n      mdbWavesEffect\n    >\n      Mehr dazu\n      <i class=\"fas fa-caret-down\"></i>\n    </button>\n    <div class=\"\" mdbCollapse #test>\n      <pre lang=\"de\">\n          <div  [innerHtml]=\"parsed[0] | safeHtml\"></div>\n      </pre>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { Card } from \"src/app/models/Card\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-cards-overview\",\n  templateUrl: \"./cards-overview.component.html\",\n  styleUrls: [\"./cards-overview.component.css\"],\n})\nexport class CardsOverviewComponent implements OnInit, OnDestroy {\n  subscriptions$: Subscription[] = [];\n  public cards: Card[];\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    let sub = this.userService.getUserInfo().subscribe((info) => {\n      this.cards = info.cards;\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n","<div class=\"list-group\">\n  <a *ngFor=\"let card of cards\" class=\"list-group-item list-group-item-action\">\n    <div class=\"d-flex w-100 justify-content-between\">\n      <h5 class=\"mb-1\">{{ card.thema }}</h5>\n      <small>{{ card.date | date: \"longDate\":\"de\" }}</small>\n    </div>\n    <p class=\"mb-1\">\n      {{ card.content }}\n    </p>\n  </a>\n</div>\n","import {\n  Component,\n  OnInit,\n  HostListener,\n  ViewChild,\n  OnDestroy,\n} from \"@angular/core\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { UserService } from \"../../services/user.service\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrls: [\"./carousel.component.css\"],\n})\nexport class CarouselComponent implements OnInit, OnDestroy {\n  lecture: Vorlesung;\n\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\n    this.carousel.previousSlide();\n  }\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\n    this.carousel.nextSlide();\n  }\n  cards: Card[]; //array of all the cards\n  activeSlide: number;\n  title: string;\n  addComponentHidden: boolean;\n  formShow: boolean;\n  formMode: string;\n  private userId: string;\n  subscriptions$: Subscription[] = [];\n  constructor(\n    private httpService: HttpService,\n    private stateService: StatesService,\n    private cardsService: CardsService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.activeSlide = 0;\n    let sub = this.userService\n      .getUserId()\n      .subscribe((userId) => (this.userId = userId));\n    this.subscriptions$.push(sub);\n    sub = this.httpService.getCurrentLecture().subscribe((lecture) => {\n      this.lecture = lecture;\n      this.title = this.lecture.name;\n    });\n    this.subscriptions$.push(sub);\n    sub = this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\n    this.subscriptions$.push(sub);\n    this.stateService.setFormMode(\"none\");\n    sub = this.stateService.getFormMode().subscribe((mode) => {\n      this.formShow = mode == \"add\";\n      this.formMode = mode;\n    });\n    this.subscriptions$.push(sub);\n\n    sub = this.cardsService.getNewCardIndex().subscribe((index) => {\n      if (this.carousel) {\n        this.activeSlide = index;\n        this.carousel.selectSlide(index);\n      }\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  toggleAddView(): void {\n    if (this.formMode != \"edit\") {\n      if (this.formMode == \"add\") {\n        this.stateService.setFormMode(\"none\");\n      } else {\n        this.stateService.setFormMode(\"add\");\n      }\n    }\n  }\n  enableEdit() {\n    this.stateService.setFormMode(\"edit\");\n  }\n\n  setClass() {\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\n  }\n\n  selectSlide(n: number) {\n    this.carousel.selectSlide(n.toString());\n  }\n  showRandomCard() {\n    var rand: number = this.activeSlide;\n    var count = 0;\n    while (count < 5 && rand == this.activeSlide) {\n      //calculate a new random index\n      count++;\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\n    }\n    this.carousel.selectSlide(rand.toString());\n  }\n  goToPrev() {\n    if (this.formMode != \"edit\") {\n      this.carousel.previousSlide();\n    }\n  }\n  goToNext() {\n    if (this.formMode != \"edit\") {\n      this.carousel.nextSlide();\n    }\n  }\n  onSlide(slideEvent) {\n    this.activeSlide = parseInt(slideEvent.relatedTarget);\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\n  }\n  isDisabled() {\n    if (this.formMode == \"edit\" || !this.cards || this.cards.length == 0) {\n      return true;\n    } else {\n      let currCard = this.cards[this.activeSlide]; //get the card that is currently showing\n\n      if (!currCard.author || currCard.author.length == 0) {\n        return false;\n      }\n      if (!this.userId || currCard.author !== this.userId) {\n        //there is an author an it is not the user\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n}\n","<h1 id=\"vorlesung\">{{ title }}</h1>\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\n  <button\n    class=\"btn btn-light\"\n    id=\"rand\"\n    placement=\"top\"\n    ngbTooltip=\"Zufall\"\n    (click)=\"showRandomCard()\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n  >\n    <div class=\"fas fa-random\"></div>\n  </button>\n  <button\n    class=\"btn btn-light\"\n    id=\"editCard\"\n    type=\"button\"\n    placement=\"top\"\n    [disabled]=\"isDisabled()\"\n    (click)=\"enableEdit()\"\n    ngbTooltip=\"Bearbeiten\"\n  >\n    <div class=\"fas fa-pen\"></div>\n  </button>\n\n  <button\n    [ngClass]=\"setClass()\"\n    id=\"toggleAdd\"\n    type=\"button\"\n    data-toggle=\"button\"\n    (click)=\"toggleAddView()\"\n    placement=\"top\"\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\n    [disabled]=\"formMode == 'edit'\"\n  >\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\n  </button>\n</div>\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\n  <a *ngIf=\"cards.length > 0\" (click)=\"goToPrev()\">\n    <span class=\"fas fa-chevron-left\"></span>\n  </a>\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\n    <mdb-carousel\n      (activeSlideChange)=\"onSlide($event)\"\n      #mycarousel\n      [(activeSlideIndex)]=\"activeSlide\"\n      [animation]=\"'slide'\"\n      [isControls]=\"false\"\n      [allowSwipe]=\"true\"\n      [interval]=\"'0'\"\n      ><ng-container *ngFor=\"let card of cards; index as i\">\n        <mdb-carousel-item [id]=\"i.toString()\">\n          <app-card [card]=\"card\"></app-card>\n        </mdb-carousel-item>\n      </ng-container>\n    </mdb-carousel>\n  </div>\n  <a *ngIf=\"cards.length > 0\" (click)=\"goToNext()\">\n    <span class=\"fas fa-chevron-right\"></span>\n  </a>\n</div>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { HttpService } from \"../../services/http.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { User } from \"src/app/models/User\";\nimport { UserInfo } from \"src/app/models/userInfo\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"app-change-profile\",\n  templateUrl: \"./change-profile.component.html\",\n  styleUrls: [\"./change-profile.component.css\"],\n})\nexport class ChangeProfileComponent implements OnInit, OnDestroy {\n  public userInfo: UserInfo;\n  subscriptions$: Subscription[] = [];\n  public user = new User(\"\", \"\");\n  constructor(private http: HttpService, private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user.name = \"\";\n    this.user.surname = \"\";\n    let sub = this.userService.getUserInfo().subscribe((info) => {\n      this.userInfo = info;\n      if (info && info.user) {\n        this.user = info.user;\n      }\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  changeAccount(form: NgForm) {\n    this.userService.updateAccount(form.value);\n  }\n  changePassword(form: NgForm) {\n    let sub = this.userService.updatePassword(form.value).subscribe((res) => {\n      form.reset();\n      sub.unsubscribe();\n    });\n  }\n  setStyle(password, password2) {\n    if (\n      password2.value &&\n      password2.value.length > 5 &&\n      password2.value != password.value\n    ) {\n      return \"box-shadow:0 0 3px #CC0000;\";\n    }\n    return \"\";\n  }\n  match(s1: string, s2: string) {\n    return s1 && s1.length > 7 && s1 === s2;\n  }\n  validate(form: NgForm) {\n    if (\n      this.checkEmail(form.value.email) &&\n      form.value.username &&\n      form.value.username.length >= 5\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  checkEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","<h2>Accountdaten ändern</h2>\n<form #form=\"ngForm\" (ngSubmit)=\"changeAccount(form)\" novalidate>\n  <div class=\"form-group\">\n    <label for=\"name\">Vorname</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"name\"\n      id=\"name\"\n      aria-describedby=\"nameHelp\"\n      #name=\"ngModel\"\n      [(ngModel)]=\"user.name\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"surname\">Nachname</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"surname\"\n      id=\"surname\"\n      aria-describedby=\"surnameHelp\"\n      #surname=\"ngModel\"\n      [(ngModel)]=\"user.surname\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Benutzername</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"username\"\n      name=\"username\"\n      required\n      maxlength=\"20\"\n      aria-describedby=\"nameHelp\"\n      #username=\"ngModel\"\n      [(ngModel)]=\"user.username\"\n    />\n    <small class=\"form-text\">Wenigstens 5 Zeichen </small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email Adresse</label>\n    <input\n      type=\"email\"\n      class=\"form-control\"\n      name=\"email\"\n      id=\"email\"\n      aria-describedby=\"emailHelp\"\n      required\n      #email=\"ngModel\"\n      [(ngModel)]=\"user.email\"\n    />\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!validate(form)\">\n    Aktualisieren\n  </button>\n</form>\n\n<hr />\n<h2>Passwort ändern</h2>\n<form #pwform=\"ngForm\" (ngSubmit)=\"changePassword(pwform)\" novalidate>\n  <div class=\"form-group\">\n    <label for=\"password\">Neues Passwort</label>\n    <input\n      type=\"password\"\n      class=\"form-control\"\n      name=\"password\"\n      id=\"password\"\n      #password=\"ngModel\"\n      ngModel\n      minlength=\"7\"\n    />\n    <small class=\"form-text\">Wenigstens 7 Zeichen </small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password2\">Neues Passwort wiederholen</label>\n    <input\n      type=\"password\"\n      class=\"form-control\"\n      name=\"password2\"\n      id=\"password2\"\n      #password2=\"ngModel\"\n      ngModel\n      minlength=\"7\"\n      [style]=\"setStyle(password, password2)\"\n    />\n  </div>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary\"\n    [disabled]=\"!match(password.value, password2.value)\"\n  >\n    Ändern\n  </button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n  <ul class=\"list-group list-group-horizontal\">\n    <li class=\"list-group-item\">\n      <a routerLink=\"/about\"> About </a>\n    </li>\n    <li class=\"list-group-item\">\n      <a routerLink=\"/about\" fragment=\"FAQ\"> FAQ </a>\n    </li>\n    <li class=\"list-group-item\">\n      <a href=\"https://git.rwth-aachen.de/jungerjunge2/cards\" target=\"_blank\"\n        >GitLab</a\n      >\n    </li>\n    <li class=\"list-group-item\">\n      v.0.2\n    </li>\n  </ul>\n</footer>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  Input,\n  OnDestroy,\n} from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"app-lectures\",\n  templateUrl: \"./lectures.component.html\",\n  styleUrls: [\"./lectures.component.css\"],\n})\nexport class LecturesComponent implements OnInit, OnDestroy {\n  lectures: Vorlesung[];\n\n  @Input() newVl: Vorlesung;\n\n  constructor(private httpService: HttpService) {}\n  subscriptions$: Subscription[] = [];\n  ngOnInit(): void {\n    let sub = this.httpService.getAllLectures().subscribe((lectures) => {\n      this.lectures = lectures;\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  ngOnChanges() {\n    if (this.newVl) {\n      console.log(\"got new vl: \", this.newVl);\n      this.lectures.push(this.newVl);\n    }\n  }\n  setLink(lecture: Vorlesung) {\n    return \"/vorlesung/\" + lecture.abrv;\n  }\n}\n","<ul class=\"list list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\n  </li>\n</ul>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { UserService } from \"../../services/user.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-login-form\",\n  templateUrl: \"./login-form.component.html\",\n  styleUrls: [\"./login-form.component.css\"],\n})\nexport class LoginFormComponent implements OnInit {\n  constructor(private user: UserService, private router: Router) {}\n  public errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.user.login(form.value);\n  }\n\n  isDisabled(username, password) {\n    if (!(username.value && password.value)) {\n      return true;\n    }\n    return username.value.length < 5 || password.value.length < 7;\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"username\"\n        required\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        required\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"remember\"\n        name=\"remember\"\n        #remember=\"ngModel\"\n        [checked]=\"true\"\n        ngModel\n      />\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, password)\"\n    >\n      Login\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\n\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { NotificationsService } from \"../../services/notifications.service\";\n\nimport { StatesService } from \"src/app/services/states.service\";\nimport { Notification } from \"../../models/Notification\";\nimport { UserService } from \"../../services/user.service\";\nimport {\n  pulseOnEnterAnimation,\n  fadeOutOnLeaveAnimation,\n} from \"angular-animations\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"],\n  animations: [\n    pulseOnEnterAnimation({ scale: 1.05, duration: 500 }),\n    fadeOutOnLeaveAnimation({ duration: 200 }),\n  ],\n})\nexport class NavBarComponent implements OnInit, OnDestroy {\n  public loggedIn: boolean;\n  public cards: Card[];\n  public notifications: Notification[];\n  subscriptions$: Subscription[] = [];\n  public loading: boolean = false;\n  public constructor(\n    private router: Router,\n    private titleService: Title,\n\n    private cardsService: CardsService,\n    private statesService: StatesService,\n    private notification: NotificationsService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.setPageTitle();\n    let sub = this.userService\n      .authentication()\n      .subscribe((val) => (this.loggedIn = val));\n    this.subscriptions$.push(sub);\n    sub = this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n    this.subscriptions$.push(sub);\n    this.router.events.subscribe((e) => {\n      //clear messages on route change\n\n      if (e instanceof NavigationEnd) {\n        if (this.router.url == \"/\") {\n          this.notification.clearNotifications(\"alert\"); //prevent successfull login message from being removed on home\n        } else {\n          this.notification.clearNotifications(\"alert\", \"success\");\n        }\n      }\n    });\n    this.subscriptions$.push(sub);\n    sub = this.notification\n      .getNotifications()\n      .subscribe((notifs) => (this.notifications = notifs));\n    this.subscriptions$.push(sub);\n    if (this.router.url.match(/vorlesung/)) {\n      sub = this.cardsService.getCards().subscribe((cards) => {\n        this.cards = cards;\n      });\n      this.subscriptions$.push(sub);\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  closeAlert(i: number) {\n    this.notification.removeNotification(i);\n  }\n  isActive(path: string): string {\n    return path === this.router.url ? \"active\" : \"\";\n  }\n  setAlertClass(notif: Notification) {\n    return `alert alert-${notif.type} alert-dismissible fade show`;\n  }\n  setPageTitle(): void {\n    let currentTitle: string;\n    switch (this.router.url) {\n      case \"/login\":\n        currentTitle = \"Login\";\n        break;\n      case \"/signup\":\n        currentTitle = \"Sign Up\";\n        break;\n      case \"/\":\n        currentTitle = \"Home\";\n        break;\n      default:\n        currentTitle = \"Cards\";\n    }\n    this.titleService.setTitle(currentTitle);\n  }\n  logout() {\n    this.userService.logout();\n  }\n}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\n  role=\"alert\"\n  style=\"padding-right: 0;\"\n>\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\" id=\"navlist\">\n          <li class=\"{{ isActive('/') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\n            >\n          </li>\n\n          <li *ngIf=\"!loggedIn\" class=\"{{ isActive('/login') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\"\n              ><i class=\"fas fa-user\"></i> Login</a\n            >\n          </li>\n          <li *ngIf=\"!loggedIn\" class=\"{{ isActive('/signup') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\"\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\n            >\n          </li>\n          <li *ngIf=\"loggedIn\" class=\"{{ isActive('/profile') }} nav-item\">\n            <div class=\"dropdown\">\n              <a\n                class=\"nav-link\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-user-circle\"></i> Account\n              </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a\n                  class=\"dropdown-item\"\n                  routerLink=\"/account\"\n                  placement=\"bottom\"\n                  >Account management</a\n                >\n                <a class=\"dropdown-item\" (click)=\"logout()\">\n                  Logout\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\n      <app-search-bar></app-search-bar>\n    </div>\n  </div>\n</nav>\n<div id=\"progress\">\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n</div>\n\n<div\n  #alert\n  *ngFor=\"let notif of notifications; index as i\"\n  [@pulseOnEnter]\n  [@fadeOutOnLeave]\n  [class]=\"setAlertClass(notif)\"\n  role=\"alert\"\n>\n  <button\n    type=\"button\"\n    class=\"close\"\n    aria-label=\"Close\"\n    (click)=\"closeAlert(i)\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  {{ notif.message }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"./notifications.component.html\",\n  styleUrls: [\"./notifications.component.css\"],\n})\nexport class NotificationsComponent implements OnInit {\n  subscriptions$: Subscription[] = [];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<p>\n  Hier werden später Benachrichtigungen über Bearbeitungsvorschläge und\n  Kommentare stehen\n</p>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { UserInfo } from \"../../models/userInfo\";\nimport { User } from \"src/app/models/User\";\nimport { UserService } from \"src/app/services/user.service\";\nimport { Subscription } from \"rxjs\";\n@Component({\n  selector: \"app-overview\",\n  templateUrl: \"./overview.component.html\",\n  styleUrls: [\"./overview.component.css\"],\n})\nexport class OverviewComponent implements OnInit, OnDestroy {\n  public userInfo: UserInfo;\n  public user = new User(\"\", \"\");\n  subscriptions$: Subscription[] = [];\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    let sub = this.userService.getUserInfo().subscribe((info) => {\n      this.userInfo = info;\n      if (info && info.user) {\n        this.user = info.user;\n      }\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h2 class=\"card-title\">\n      <img src=\"assets/profile.svg\" alt=\"Profile picture\" /> {{ user.username }}\n    </h2>\n  </div>\n  <ul class=\"list-group list-group-flush\">\n    <li class=\"list-group-item\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          Email\n        </div>\n        <div class=\"col-6 text-right\">\n          {{ user.email }}\n        </div>\n      </div>\n    </li>\n    <li class=\"list-group-item\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          Vorname\n        </div>\n        <div class=\"col-6 text-right\">\n          {{ user.name }}\n        </div>\n      </div>\n    </li>\n    <li class=\"list-group-item\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          Nachname\n        </div>\n        <div class=\"col-6 text-right\">\n          {{ user.surname }}\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { StatesService } from \"../../services/states.service\";\n\nimport { Card } from \"../../models/Card\";\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"],\n})\nexport class SearchBarComponent implements OnInit, OnDestroy {\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService\n  ) {}\n  subscriptions$: Subscription[] = [];\n  cards: Card[];\n  suggestions: SearchSuggestion[];\n  uInput: string;\n  clearSuggestions: boolean;\n\n  ngOnInit(): void {\n    let sub = this.stateService.getHideSuggestions().subscribe((value) => {\n      this.clearSuggestions = value;\n      if (value) {\n        this.suggestions = [];\n      }\n    });\n    this.subscriptions$.push(sub);\n    sub = this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n      cards.forEach((card) => {\n        if (card.thema == null) {\n          card.thema = \"\";\n        }\n        if (card.content == null) {\n          card.content = \"\";\n        }\n      });\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  inField() {\n    this.stateService.setTyping(true);\n  }\n  resetNav() {\n    this.stateService.setTyping(false);\n  }\n  findMatches(e: Event) {\n    this.stateService.setHideSuggestions(false); //show suggestions\n    if (this.uInput && this.uInput.length > 2) {\n      this.suggestions = [];\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\n\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].thema.match(regex)) {\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\n        }\n      }\n    }\n  }\n  navigateTo(e: Event, index: number) {\n    e.preventDefault();\n    this.uInput = \"\";\n    this.cardsService.setNewCardIndex(index);\n  }\n}\n","<input\n  [(ngModel)]=\"uInput\"\n  (input)=\"findMatches($event)\"\n  class=\"form-control float-right\"\n  id=\"search\"\n  type=\"search\"\n  placeholder=\"Frage suchen\"\n  (focus)=\"inField()\"\n  (blur)=\"resetNav()\"\n/>\n<div *ngIf=\"suggestions\" id=\"matches\">\n  <ul class=\"list-group\">\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\n        suggestion.title\n      }}</a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\nimport { UserService } from \"src/app/services/user.service\";\n@Component({\n  selector: \"app-signup-form\",\n  templateUrl: \"./signup-form.component.html\",\n  styleUrls: [\"./signup-form.component.css\"],\n})\nexport class SignupFormComponent implements OnInit {\n  constructor(private userService: UserService, private router: Router) {}\n  errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.userService.createAccount(form.value);\n  }\n  setStyle(password, password2) {\n    if (\n      password2.value &&\n      password2.value.length > 5 &&\n      password2.value != password.value\n    ) {\n      return \"box-shadow:0 0 3px #CC0000;\";\n    }\n    return \"\";\n  }\n  checkEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    }\n\n    return false;\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  isDisabled(username, email, password, password2) {\n    if (!(username.value && email.value && password.value)) {\n      return true;\n    }\n    return (\n      username.value.length < 5 ||\n      password.value.length < 7 ||\n      password.value != password2.value ||\n      !this.checkEmail(email.value)\n    );\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        required\n        maxlength=\"20\"\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email Adresse</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        name=\"email\"\n        id=\"email\"\n        aria-describedby=\"emailHelp\"\n        required\n        #email=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n      />\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort wiederholen</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password2\"\n        id=\"password2\"\n        #password2=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n        [style]=\"setStyle(password, password2)\"\n      />\n      <small class=\"form-text\"> </small>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, email, password, password2)\"\n    >\n      Account erstellen\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\n\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\n\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-update-card-form\",\n  templateUrl: \"./update-card-form.component.html\",\n  styleUrls: [\"./update-card-form.component.css\"],\n})\nexport class UpdateCardFormComponent implements OnInit, OnDestroy {\n  public cardCopy: Card;\n  private cards: Card[];\n  private cardIndex: number; //saves the cardindex which the user is currently updating\n  private activeCardIndex: number; //saves the active cardindex\n  subscriptions$: Subscription[] = [];\n  constructor(\n    private cardsService: CardsService,\n    private statesService: StatesService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    let sub = this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    });\n    this.subscriptions$.push(sub);\n    sub = this.cardsService.getActiveCardIndex().subscribe((index) => {\n      this.activeCardIndex = index;\n      if (this.cards) {\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\n      }\n      this.cardIndex = this.activeCardIndex;\n    });\n    this.subscriptions$.push(sub);\n  }\n  ngOnDestroy() {\n    this.subscriptions$.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  inField() {\n    this.statesService.setTyping(true);\n  }\n  resetNav() {\n    this.statesService.setTyping(false);\n  }\n  onSubmit(f: NgForm) {\n    this.cardCopy.content = f.value.content;\n    this.cardCopy.thema = f.value.thema;\n    let sub = this.cardsService\n      .updateCard({ ...this.cardCopy }, this.cardIndex)\n      .subscribe((resp) => {\n        f.reset();\n        sub.unsubscribe();\n      });\n  }\n  cancelEdit() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: \"400px\",\n    });\n  }\n\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n@Component({\n  selector: \"dialog-overview-example-dialog\",\n  templateUrl: \"dialog.html\",\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    private service: StatesService\n  ) {}\n\n  cancel() {\n    this.service.setFormMode(\"reset\");\n    this.service.setLoadingState(false);\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte bearbeiten</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Frage</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        [(ngModel)]=\"cardCopy.thema\"\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Antwort</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        [(ngModel)]=\"cardCopy.content\"\n        (focus)=\"inField()\"\n        (blur)=\"resetNav()\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <input\n        class=\"btn btn-success mb-2 mr-1\"\n        type=\"submit\"\n        value=\"Sichern\"\n        [disabled]=\"isDisabled(content, thema)\"\n      />\n      <input\n        class=\"btn btn-danger mb-2\"\n        type=\"button\"\n        value=\"Abbruch\"\n        (click)=\"cancelEdit()\"\n      />\n    </div>\n  </form>\n</div>\n","<h1 mat-dialog-title>Abbruch</h1>\n<div mat-dialog-content>\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\n</div>\n<hr />\n<div mat-dialog-actions style=\"text-align: right;\">\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\n    Nein,zurück\n  </button>\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\n</div>\n","export class Card {\n  _id?: string;\n  thema: string;\n  author?: string;\n  content: string;\n  abrv: string;\n  date?: Date;\n  latex: number;\n\n  constructor(thema, content, abrv, latex) {\n    this.thema = thema;\n    this.content = content;\n    this.abrv = abrv;\n    latex = latex;\n  }\n}\n","export abstract class Notification {\n  type: string;\n  message: string;\n\n  constructor(t: string, m: string) {\n    this.type = t;\n    this.message = m;\n  }\n}\n\nexport class HttpError extends Notification {\n  code: number;\n  constructor(m: string, c?: number) {\n    super(\"warning\", m);\n    this.code = c;\n  }\n}\n\nexport class InfoMessage extends Notification {\n  constructor(m: string) {\n    super(\"info\", m);\n  }\n}\nexport class SuccessMessage extends Notification {\n  constructor(m: string) {\n    super(\"success\", m);\n  }\n}\n","export class User {\n  username: string;\n  email: string;\n  _id: string;\n  name: string;\n  surname: string;\n  constructor(name: string, email: string) {\n    this.username = name;\n    this.email = email;\n  }\n}\n","export class Vorlesung {\n  name: string;\n  abrv: string;\n  constructor(name, abrv) {\n    this.name = name;\n    this.abrv = abrv;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { UserService } from \"src/app/services/user.service\";\n\n@Component({\n  selector: \"app-about\",\n  templateUrl: \"./about.component.html\",\n  styleUrls: [\"./about.component.css\"],\n})\nexport class AboutComponent implements OnInit {\n  public loggedIn: boolean;\n  constructor(private user: UserService) {}\n\n  ngOnInit(): void {\n    this.user.authentication().subscribe((val) => {\n      this.loggedIn = val;\n    });\n  }\n}\n","<div class=\"media\">\n  <img src=\"assets/c.png\" class=\"align-self-center mr-1\" alt=\"Logo\" />\n  <div class=\"media-body\">\n    <h3>Cards</h3>\n  </div>\n</div>\n<p>\n  Cards ist eine Webseite, die dir dabei helfen soll dich auf deine Klausuren\n  und Prüfungen vorzubereiten. Das Konzept von Cards beruht auf den klassischen\n  Karteikarten. Anders als die klassischen Karteikarten brauchst du jedoch nicht\n  deinen Stapel an Karten überall mitzuschleppen. Unsere Webseite eignet sich\n  vor allem auch für Smartphones, somit kannst du dir deine Karteikarten auch\n  unterwegs anschauen. Sie richtet sich vor allem an Studenten.\n</p>\n<p *ngIf=\"!loggedIn\">\n  <a routerLink=\"/signup\">Erstelle einen Account</a>, um alle Vorteile unserer\n  Webseite zu nutzen.\n</p>\n<h4>Sharing is Caring</h4>\n<p>\n  Karteikarten, die du auf unserer Webseite hinzufügst, sind automatisch für\n  alle anderen Nutzer sichtbar. Andererseits kannst du dir auch Karten von\n  anderen Nutzern anschauen.Dies sorgt dafür, dass du optimal auf deine Klausur\n  vorbereitet bist. <br />\n  Wenn du mit einer Karte nicht zufrieden bist, oder du glaubst ihr Inhalt wäre\n  falsch oder unvollständig, kannst du sie bearbeiten. Karten, welche von\n  registrierten Nutzern erstellt worden sind, kannst du leider nicht bearbeiten.\n  In einer späteren Version wird es möglich sein für diese Karte einen\n  Verberungsvorschlag an den Ertseller der Karte zu senden.\n</p>\n<h4>Wir freuen uns über Feedback</h4>\n<p>\n  Wir bemühen uns, die Seite fehlerfrei zu gestalten. Trotzdem kann es sein,\n  dass sich der ein oder andere Fehler eingeschlichen hat. Diesen kannst du uns\n  gerne melden indem du\n  <a\n    href=\"https://git.rwth-aachen.de/jungerjunge2/cards/-/issues\"\n    target=\"_blank\"\n    >hier</a\n  >\n  ein Issue erstellst. Wir versuchen den Fehler, dann so schnell wie möglich zu\n  beheben. Du kannst uns dort auch gerne Feedback hinterlassen\n</p>\n\n<h3 id=\"FAQ\">FAQ</h3>\n<h4>Wo finde ich die Karteikarten zu meiner Vorlesung?</h4>\n<p>\n  Auf unserer <a routerLink=\"/\">Startseite</a> findest du eine Liste aller\n  Vorlesungen, für die bisher Karten hinzugefügt wurden. Wähle deine Vorlesung\n  aus. Falls du die Vorlesung nich in der Liste findest, dann kannst du sie\n  hinzufügen indem du das Formular ausfüllst und auf \"Hinzufügen\" drückst.\n  <br />\n  Nachdem du auf die Vorlesung gedrückt hast kommst du auf eine neue Seite, auf\n  der du dir alle Karteikarten, die zu der Vorlesung bereits hinzugefügt wurden,\n  anschauen. Nutze die Pfeiltasten oder wische horizontal über die Karte, um dir\n  weitere Karten anzuschauen. Du kannst den Inhalt der Karte aufklappen indem du\n  auf \"Mehr dazu\" drückst. <br />\n  Du kannst auch die Suchfunktion in der Navigationsleiste nutzen, um nach\n  bestimmten Karten zu suchen.\n</p>\n<h4>Wie erstelle ich eine Karte?</h4>\n<p>\n  Auf unserer <a routerLink=\"/\">Startseite</a> siehst du eine Liste von\n  Vorlesungen. Wähle die Vorlesung aus zu der du eine Karteikarte hinzufügen\n  möchtest. Falls deine Vorlesung nicht findest, kannst du sie über das Formular\n  hinzufügen. <br />\n  Nachdem du auf die Seite der Vorlesung navigiert bist kannst du eine neue\n  Karte hinzufügen indem du auf das <i class=\"fas fa-plus\"></i> Symbol unter der\n  Überschrift drückst. Nun kannst du deine Karteikarte hinzufügen indem du das\n  Formular ausfüllst und auf \"Hinzufügen\" drückst.\n  <span *ngIf=\"!loggedIn\">\n    Erstelle am Besten einen\n    <a routerLink=\"/signup\"> Account</a>, oder\n    <a routerLink=\"/login\">logge dich ein</a>, damit du Ertseller dieser Karte\n    wirst und nur du diese bearbeiten kannst.\n  </span>\n  Pro-Tip: du kannst auch mathematische Symbole schreiben indem du Latex Befehle\n  verwendest und diese mit $ Zeichen umhüllst. Mehr zu den Latex Befehlen\n  findest du\n  <a href=\"https://en.wikibooks.org/wiki/LaTeX/Mathematics\">hier</a>.\n</p>\n\n<h4>Wie bearbeite ich eine Karte?</h4>\n<p>\n  Wähle zuerst die Karteikarte aus die du bearbeiten möchtest. Drücke auf das\n  <i class=\"fas fa-pen\"></i> Symbol unter der Überschrift. Bearbeite deine Karte\n  im Formular und drücke auf \"Sichern\". Bitte beachte, dass du nur öffentliche\n  und deine eigenen Karten bearbeiten kannst. Karten, die von anderen\n  registrierten Nutzern erstellt worden sind kannst du leider nicht bearbeit. In\n  einer späteren Version wird es möglich sein für diese Karte einen\n  Verberungsvorschlag an den Ertseller der Karte zu senden.\n</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UserService } from \"src/app/services/user.service\";\nimport {\n  fadeInOnEnterAnimation,\n  fadeOutOnLeaveAnimation,\n} from \"angular-animations\";\n\n@Component({\n  selector: \"app-account-page\",\n  templateUrl: \"./account-page.component.html\",\n  styleUrls: [\"./account-page.component.css\"],\n})\nexport class AccountPageComponent implements OnInit {\n  public page: string;\n  public cardCount = 0;\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.page = \"overview\";\n    this.userService.getUserInfo().subscribe((info) => {\n      if (info && info.cards) {\n        this.cardCount = info.cards.length;\n      } else {\n        this.cardCount = 0;\n      }\n    });\n  }\n\n  changePage(e: Event, s: string) {\n    e.preventDefault;\n    this.page = s;\n  }\n  setClass(s: string) {\n    if (this.page === s) {\n      return \"list-group-item list-group-item-action active\";\n    } else {\n      return \"list-group-item list-group-item-action\";\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4 col-xs-12\">\n    <div class=\"list-group\">\n      <button\n        [class]=\"setClass('overview')\"\n        (click)=\"changePage($event, 'overview')\"\n      >\n        Übersicht\n      </button>\n      <button\n        [class]=\"setClass('management')\"\n        (click)=\"changePage($event, 'management')\"\n      >\n        Profildaten ändern\n      </button>\n      <button\n        *ngIf=\"cardCount > 0\"\n        [class]=\"setClass('cards')\"\n        (click)=\"changePage($event, 'cards')\"\n      >\n        Karteikarten\n      </button>\n    </div>\n  </div>\n\n  <div class=\"col-md-8 col-xs-12\" id=\"sub\" [ngSwitch]=\"page\">\n    <app-overview *ngSwitchCase=\"'overview'\"></app-overview>\n    <app-change-profile *ngSwitchCase=\"'management'\"></app-change-profile>\n    <app-cards-overview *ngSwitchCase=\"'cards'\"></app-cards-overview>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Title } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-cards-page\",\n  templateUrl: \"./cards-page.component.html\",\n  styleUrls: [\"./cards-page.component.css\"],\n})\nexport class CardsPageComponent implements OnInit {\n  public vlAbrv: string;\n  public lecture: Vorlesung;\n  public loading: boolean = true;\n  public formMode: string = \"none\";\n  public cards: Card[];\n\n  private inTypingField: boolean;\n  @ViewChild(\"alert\", { static: false }) alert: ElementRef;\n\n  @HostListener(\"click\", [\"$event.target\"])\n  onClick() {\n    this.stateServie.setHideSuggestions(true);\n  }\n  @HostListener(\"window:keyup\", [\"$event\"])\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.inTypingField) {\n      if (event.key == \"ArrowRight\") {\n        this.cardsService.goNext();\n      } else if (event.key == \"ArrowLeft\") {\n        this.cardsService.goPrev();\n      }\n    }\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private stateServie: StatesService,\n    private cardsService: CardsService,\n    private http: HttpService,\n    private title: Title\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Cards\");\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\n    this.cardsService.getCards().subscribe((cards) => {\n      if (cards.length == 0) {\n        this.stateServie.setFormMode(\"add\");\n      }\n    });\n    this.stateServie.getTyping().subscribe((val) => (this.inTypingField = val));\n    this.stateServie\n      .getLoadingState()\n      .subscribe((value) => (this.loading = value));\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\n  }\n\n  setLoading(loading: boolean): void {\n    this.loading = loading;\n    this.stateServie.setLoadingState(loading);\n  }\n}\n","<div class=\"container\">\n  <app-carousel></app-carousel>\n  <br />\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { StatesService } from \"../../services/states.service\";\n\n@Component({\n  selector: \"app-home-page\",\n  templateUrl: \"./home-page.component.html\",\n  styleUrls: [\"./home-page.component.css\"],\n})\nexport class HomePageComponent implements OnInit {\n  public loading: boolean = false;\n  public newVl: Vorlesung;\n  constructor(private statesService: StatesService) {}\n\n  ngOnInit(): void {\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n  }\n\n  emitVl(lecture: Vorlesung) {\n    this.newVl = lecture;\n  }\n}\n","<app-lectures [newVl]=\"newVl\"></app-lectures>\n<br />\n<app-add-lecture-form></app-add-lecture-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <app-login-form></app-login-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.css']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <app-signup-form></app-signup-form>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { Card } from \"../models/Card\";\nimport { StatesService } from \"./states.service\";\nimport { tap, map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { HttpConfig } from \"./config\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { NotificationsService } from \"./notifications.service\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CardsService {\n  //contains lecture abreviation of the current lecutre\n  private abrv: string;\n  //loads cards once from the server and whenever lecture changes\n  //and provides them as an Observable\n  private cards$: BehaviorSubject<Card[]> = new BehaviorSubject<Card[]>([]);\n  //provides a Subject to set a new index on which card the carousel should show\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\n    0\n  );\n  //provides a Subject of the index of the card that is currently shown\n  //only the carousel shoul set nex values for this subject\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\n    number\n  >(0);\n\n  private config = new HttpConfig();\n  constructor(\n    private notifications: NotificationsService,\n    private http: HttpClient, //to make calls to the server\n    private statesService: StatesService, //for setting the loading state\n    private router: Router //used to get the lecture abreviation from the route\n  ) {}\n\n  getCards(): Observable<Card[]> {\n    this.statesService.setLoadingState(true);\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the lecture abreviation from the route\n    if (this.abrv === abrv) {\n      //cards were already loaded for this lecture\n      this.statesService.setLoadingState(false);\n      return this.cards$.asObservable();\n    } else {\n      this.abrv = abrv;\n      //remove the old cards before fetching the new ones\n      this.cards$.next([]);\n      //make server request\n      this.http\n        .get<Card[]>(this.config.urlBase + \"cards/?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .subscribe(\n          (response) => {\n            this.statesService.setLoadingState(false);\n            this.cards$.next(response.body);\n          },\n          (error) => {\n            this.notifications.handleErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        );\n      return this.cards$.asObservable();\n    }\n  }\n\n  updateCard(card: Card, index: number): Observable<any> {\n    this.statesService.setLoadingState(true);\n    //send update to server using http service\n    return this.http\n      .put<any>(\n        this.config.urlBase + \"cards/update\",\n        { card: card },\n        {\n          headers: this.config.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap(\n          (resp) => {\n            this.statesService.setLoadingState(false);\n            this.statesService.setFormMode(\"reset\"); //reset form to its previous state\n            //update subject\n            let cards = this.cards$.getValue();\n            cards[index] = card;\n            this.cards$.next(cards);\n            setTimeout(() => {\n              //show new card timeout needed because the carousel needs time to refresh\n              //its view\n              this.setNewCardIndex(index);\n            }, 100);\n          },\n          (error) => {\n            this.notifications.handleErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  addCard(card: Card): Observable<any> {\n    this.statesService.setLoadingState(true);\n    //send new card to server using http service\n    return this.http\n      .post<any>(\n        this.config.urlBase + \"cards/new\",\n        { card: card },\n        {\n          headers: this.config.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap(\n          (response) => {\n            this.statesService.setLoadingState(false);\n            card._id = response.body.id; //set id received from server response\n            //upate subject\n            let cards = this.cards$.getValue();\n            cards.push(card);\n            this.cards$.next(cards);\n\n            setTimeout(() => {\n              //show new card timeout needed because the carousel needs time to refresh\n              //its view\n              this.setNewCardIndex(cards.length - 1);\n            }, 100);\n          },\n          (error) => {\n            this.notifications.handleErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        ),\n        map((res) => res.body)\n      );\n  }\n  goNext() {\n    //show the next slide index\n    let index = this.newCardIndex$.getValue();\n    index++;\n    if (index >= this.cards$.getValue().length) {\n      index = 0;\n    }\n    this.newCardIndex$.next(index);\n  }\n  goPrev() {\n    //show the next slide index\n    let index = this.newCardIndex$.getValue();\n    index--;\n    if (index < 0) {\n      index = this.cards$.getValue().length - 1;\n    }\n    this.newCardIndex$.next(index);\n  }\n  //only the carousel should be subscribed to this\n  getNewCardIndex(): Observable<number> {\n    return this.newCardIndex$.asObservable();\n  }\n  //use this function to tell the carousel to go to a specific slide i\n  setNewCardIndex(i: number) {\n    this.newCardIndex$.next(i);\n  }\n  //only the carousel should call this method (on the sliding event)\n  setActiveCardIndex(i: number) {\n    this.activeCardIndex$.next(i);\n  }\n  //subsribe to this function to always get the index of the card that is currently shown\n  getActiveCardIndex(): Observable<number> {\n    return this.activeCardIndex$.asObservable();\n  }\n}\n","import { HttpHeaders } from \"@angular/common/http\";\n\nexport class HttpConfig {\n  urlBase: string = \"api/\";\n  headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n  constructor() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { StatesService } from \"./states.service\";\nimport { NotificationsService } from \"./notifications.service\";\nimport { Router } from \"@angular/router\";\n//Models\nimport { Vorlesung } from \"../models/Vorlesung\";\nimport { HttpError } from \"../models/Notification\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  private urlBase: string = \"api/\"; //url  base on which to adress the server with\n\n  private lecture$: BehaviorSubject<Vorlesung> = new BehaviorSubject<Vorlesung>(\n    new Vorlesung(\"\", \"\")\n  ); //holds the current lecture\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\n\n  private httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(\n    private notifications: NotificationsService,\n    private http: HttpClient, //for sending http requests\n    private statesService: StatesService, //set the loading state\n    private router: Router //to get info in the current url\n  ) {}\n\n  //get an array of all lectures\n  getAllLectures(): Observable<Vorlesung[]> {\n    this.statesService.setLoadingState(true);\n    if (this.lectures$) {\n      //lectures were already loaded once\n      this.statesService.setLoadingState(false);\n      return this.lectures$.asObservable();\n    } else {\n      //load lectures from the server\n      return this.http\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\n          observe: \"response\",\n        })\n        .pipe(\n          tap(\n            (res) => {\n              this.statesService.setLoadingState(false);\n              this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body); //set the lectures subject\n            },\n            (error) => {\n              this.addErrors(error);\n              this.statesService.setLoadingState(false);\n            }\n          ),\n          map((res) => res.body)\n        );\n    }\n  }\n\n  //get the Current lecture\n  getCurrentLecture(): Observable<Vorlesung> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the abreviation of the lecture from the url\n    if (this.lecture$.getValue().abrv == abrv) {\n      //the lecture was already loaded\n      return this.lecture$.asObservable();\n    } else {\n      //fetch the lecture from the server\n      this.http\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .subscribe(\n          (res) => {\n            this.lecture$.next(res.body);\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        );\n      return this.lecture$.asObservable();\n    }\n  }\n\n  //add a lecture to the database on the server\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<any>(\n        this.urlBase + \"lectures/new\",\n        { lecture: lecture },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap(\n          (res) => {\n            //add the new lecture to the lectures subject\n            this.statesService.setLoadingState(false);\n            let lectures = this.lectures$.getValue();\n            lectures.push(lecture);\n            this.lectures$.next(lectures);\n          },\n          (error) => {\n            this.addErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  //because errors suck and we dont have a unified error handling system in the backend\n\n  addErrors(error) {\n    let err = error.error;\n    console.log(error);\n    if (error.status == 400) {\n      this.notifications.addNotification(\n        new HttpError(\"Bitte logge dich erst ein.\", error.status)\n      );\n      this.router.navigateByUrl(\"/login\");\n    } else if (error.status == 422) {\n      if (typeof err == \"string\") {\n        this.notifications.addNotification(new HttpError(err, error.status));\n      } else if (typeof err == \"object\") {\n        this.notifications.addNotification(\n          new HttpError(\n            \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\n            error.status\n          )\n        );\n        console.log(err);\n      } else {\n        for (const e of err) {\n          this.notifications.addNotification(new HttpError(e, error.status));\n        }\n      }\n    } else if (error.status >= 500) {\n      this.notifications.addNotification(\n        new HttpError(\n          \"Der Server scheint offline zu sein. Versuche es später erneut.\",\n          error.status\n        )\n      );\n    } else {\n      this.notifications.addNotification(\n        new HttpError(\n          \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\n          error.status\n        )\n      );\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { Notification, HttpError, InfoMessage } from \"../models/Notification\";\nimport { Router } from \"@angular/router\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationsService {\n  private notifications$ = new BehaviorSubject<Notification[]>([]);\n  constructor(private router: Router) {}\n\n  addNotification(n: Notification) {\n    let notifications = this.notifications$.getValue();\n    notifications.push(n);\n  }\n\n  //removes a specific error from the error array\n  removeNotification(index: number) {\n    let notifications = this.notifications$.getValue();\n    notifications.splice(index, 1); //remove error at position index\n    this.notifications$.next(notifications);\n  }\n  clearNotifications(...types: string[]) {\n    let notifs = this.notifications$.getValue();\n    types.forEach((type) => {\n      for (let i = 0; i < notifs.length; i++) {\n        if (notifs[i].type === type) {\n          this.removeNotification(i);\n        }\n      }\n    });\n\n    this.notifications$.next(notifs);\n  }\n  removeLoginInfo() {\n    let notifs = this.notifications$.getValue();\n    for (let i = 0; i < notifs.length; i++) {\n      if (notifs[i] instanceof InfoMessage) {\n        //only check if notif is of type InfoMessage as LoginInfo is the only info message for now\n        this.removeNotification(i);\n      }\n    }\n  }\n  getNotifications(): Observable<Notification[]> {\n    return this.notifications$.asObservable();\n  }\n\n  //because errors suck and we dont have a unified error handling system in the backend\n  handleErrors(error) {\n    let err = error.error;\n    console.log(error);\n    if (error.status == 400) {\n      this.addNotification(\n        new InfoMessage(\"Du musst dich einloggen, um diese Seite zu besuchen\")\n      );\n    } else if (error.status == 422) {\n      if (typeof err == \"string\") {\n        this.addNotification(new HttpError(err, error.status));\n      } else if (typeof err == \"object\") {\n        this.addNotification(\n          new HttpError(\n            \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\n            error.status\n          )\n        );\n        console.log(err);\n      } else {\n        for (const e of err) {\n          this.addNotification(new HttpError(e, error.status));\n        }\n      }\n    } else if (error.status >= 500) {\n      this.addNotification(\n        new HttpError(\n          \"Der Server scheint offline zu sein. Versuche es später erneut.\",\n          error.status\n        )\n      );\n    } else {\n      this.addNotification(\n        new HttpError(\n          \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\n          error.status\n        )\n      );\n    }\n  }\n}\n","//This service is made to manage states across components\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class StatesService {\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\n  private lastFormMode: string;\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private typing$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  constructor() {}\n\n  getFormMode(): Observable<string> {\n    return this.formMode$.asObservable();\n  }\n  setFormMode(mode: string): void {\n    if (mode == \"reset\") {\n      if (!this.lastFormMode) {\n        //last form mode is undefined\n        this.lastFormMode = \"none\";\n      } // last Form mode defined\n      this.formMode$.next(this.lastFormMode);\n    } else {\n      this.formMode$.next(mode);\n      if (mode != \"edit\") this.lastFormMode = mode;\n    }\n  }\n  setTyping(val: boolean) {\n    this.typing$.next(val);\n  }\n  getTyping(): Observable<boolean> {\n    return this.typing$.asObservable();\n  }\n  getLoadingState(): BehaviorSubject<boolean> {\n    return this.loading$;\n  }\n  setLoadingState(value: boolean) {\n    this.loading$.next(value);\n  }\n  setHideSuggestions(value: boolean) {\n    this.hideSgtn$.next(value);\n  }\n  getHideSuggestions(): Observable<boolean> {\n    return this.hideSgtn$.asObservable();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { UserInfo } from \"../models/userInfo\";\nimport { Observable, BehaviorSubject } from \"rxjs\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { tap, map } from \"rxjs/operators\";\nimport { InfoMessage, HttpError, SuccessMessage } from \"../models/Notification\";\nimport { NotificationsService } from \"./notifications.service\";\nimport { HttpConfig } from \"./config\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { StatesService } from \"./states.service\";\nimport { User } from \"../models/User\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService implements CanActivate {\n  private auth$ = new BehaviorSubject<boolean>(false); //subject which is true if user is authenticated\n  private userId$ = new BehaviorSubject<string>(null);\n  private accountInfo$: BehaviorSubject<UserInfo>; //stores account info of the user used\n  private config = new HttpConfig();\n  constructor(\n    private http: HttpClient, //for sending http requests\n    private statesService: StatesService,\n    private router: Router,\n    private notifications: NotificationsService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.auth$.getValue()) {\n      return true;\n    } else {\n      let id = localStorage.getItem(\"userId\");\n      if (id) {\n        this.setUser(id);\n        return true;\n      } else {\n        this.notifications.addNotification(\n          new InfoMessage(\"Du musst dich einloggen, um diese Seite zu besuchen\")\n        );\n        this.setUser(null);\n        this.router.navigate([\"login\"]);\n        return false;\n      }\n    }\n  }\n  //used to login the user\n  login(form) {\n    this.statesService.setLoadingState(true);\n    this.http\n      .post<User>(this.config.urlBase + \"login\", form, {\n        headers: this.config.headers,\n        observe: \"response\",\n      })\n      .subscribe(\n        (res) => {\n          this.statesService.setLoadingState(false);\n          this.setUser(res.body._id, form.remember);\n          this.notifications.removeLoginInfo();\n          this.notifications.addNotification(\n            new SuccessMessage(`Herzlich willkommen ${res.body.username}`)\n          );\n\n          this.router.navigateByUrl(\"/\");\n        },\n        (error) => {\n          this.notifications.handleErrors(error);\n          this.setUser(null);\n          this.statesService.setLoadingState(false);\n        }\n      );\n  }\n  createAccount(form): Observable<User> {\n    return this.http\n      .post<User>(this.config.urlBase + \"user/new\", form, {\n        headers: this.config.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap(\n          (res) => {\n            this.setUser(res.body._id);\n            this.statesService.setLoadingState(false);\n            this.router.navigate([\"/\"]);\n          },\n          (error) => {\n            this.notifications.handleErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        ),\n        map((res) => res.body)\n      );\n  }\n\n  getUserId(): Observable<string> {\n    return this.userId$.asObservable();\n  }\n\n  logout() {\n    this.statesService.setLoadingState(true);\n    this.http\n      .get<any>(this.config.urlBase + \"user/logout\", { observe: \"response\" })\n      .subscribe(\n        (res) => {\n          this.statesService.setLoadingState(false);\n          this.setUser(null);\n          this.notifications.addNotification(\n            new SuccessMessage(\"Erfolgreich abgemeldet\")\n          );\n          this.router.navigate([\"/\"]);\n        },\n        (error) => {\n          this.notifications.handleErrors(error);\n          this.statesService.setLoadingState(false);\n        }\n      );\n  }\n\n  authentication(): Observable<boolean> {\n    if (this.auth$) {\n      return this.auth$.asObservable();\n    } else {\n      let id = localStorage.getItem(\"userId\");\n      if (id) {\n        this.auth$ = new BehaviorSubject<boolean>(true);\n        this.userId$.next(id);\n      } else {\n        this.auth$ = new BehaviorSubject<boolean>(false);\n      }\n      return this.auth$.asObservable();\n    }\n  }\n\n  getUserInfo(): Observable<UserInfo> {\n    if (this.accountInfo$) {\n      return this.accountInfo$.asObservable();\n    } else {\n      this.statesService.setLoadingState(true);\n      this.accountInfo$ = new BehaviorSubject<UserInfo>(null);\n      this.http\n        .get<UserInfo>(this.config.urlBase + \"user/info\", {\n          observe: \"response\",\n        })\n        .subscribe(\n          (res) => {\n            this.statesService.setLoadingState(false);\n            for (const card of res.body.cards) {\n              card.date = new Date(card.date);\n            }\n\n            this.accountInfo$.next(res.body);\n          },\n          (error) => {\n            this.router.navigateByUrl(\"/login\");\n            this.statesService.setLoadingState(false);\n            this.notifications.handleErrors(error);\n          }\n        );\n      return this.accountInfo$.asObservable();\n    }\n  }\n  updateAccount(form) {\n    this.statesService.setLoadingState(true);\n    this.http\n      .put<any>(this.config.urlBase + \"user/updateAccount\", form, {\n        headers: this.config.headers,\n        observe: \"response\",\n      })\n      .subscribe(\n        (res) => {\n          this.statesService.setLoadingState(false);\n\n          let info = this.accountInfo$.getValue();\n          info.user = form;\n          this.accountInfo$.next(info);\n          this.notifications.addNotification(\n            new SuccessMessage(\n              \"Deine Informationen wurden erfolgreich aktualisiert\"\n            )\n          );\n        },\n        (error) => {\n          this.notifications.handleErrors(error);\n          this.statesService.setLoadingState(false);\n        }\n      );\n  }\n\n  updatePassword(form) {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .put<any>(this.config.urlBase + \"user/updatePassword\", form, {\n        headers: this.config.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap(\n          (res) => {\n            this.statesService.setLoadingState(false);\n            this.notifications.addNotification(\n              new SuccessMessage(\"Dein Passwort wurde erfolgreich aktualisiert\")\n            );\n          },\n          (error) => {\n            this.notifications.handleErrors(error);\n            this.statesService.setLoadingState(false);\n          }\n        )\n      );\n  }\n\n  deleteAccount() {\n    console.log(\"not yet implemented\");\n  }\n  private setUser(id: string, remember?: boolean) {\n    if (id) {\n      this.userId$.next(id);\n      this.auth$.next(true);\n      if (remember) {\n        localStorage.setItem(\"userId\", JSON.stringify(id)); //store the user locally to keep the session\n      }\n    } else {\n      this.userId$.next(null);\n      this.auth$.next(false);\n      localStorage.removeItem(\"userId\");\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport \"hammerjs\";\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}