{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-card-form/add-card-form.component.ts","webpack:///src/app/components/add-card-form/add-card-form.component.html","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.ts","webpack:///src/app/components/add-lecture-form/add-lecture-form.component.html","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/carousel/carousel.component.ts","webpack:///src/app/components/carousel/carousel.component.html","webpack:///src/app/components/lectures/lectures.component.ts","webpack:///src/app/components/lectures/lectures.component.html","webpack:///src/app/components/modal/modal.component.ts","webpack:///src/app/components/modal/modal.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/update-card-form/update-card-form.component.ts","webpack:///src/app/components/update-card-form/update-card-form.component.html","webpack:///src/app/components/update-card-form/dialog.html","webpack:///src/app/models/Card.ts","webpack:///src/app/routes/cards-page/cards-page.component.ts","webpack:///src/app/routes/cards-page/cards-page.component.html","webpack:///src/app/routes/home-page/home-page.component.ts","webpack:///src/app/routes/home-page/home-page.component.html","webpack:///src/app/services/cards.service.ts","webpack:///src/app/services/http.service.ts","webpack:///src/app/services/states.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddCardFormComponent","cardsService","stateService","returnCard","f","newCard","value","thema","content","addCard","lecture","abrv","setLoadingState","reset","color","length","elem","onSubmit","AddLectureFormComponent","console","log","name","field","max","CardComponent","isCollapsed","CarouselComponent","config","httpService","setLoading","interval","wrap","keyboard","pauseOnHover","title","getCardsFromLecture","subscribe","resp","cards","body","initCards","emit","setFormMode","getFormMode","mode","formShow","formMode","getNewCardIndex","index","carousel","activeSlide","select","toString","n","rand","count","Math","floor","random","prev","next","slideEvent","setActiveCardIndex","parseInt","current","showRandomCard","enableEdit","toggleAddView","goToPrev","goToNext","static","LecturesComponent","lecturesLoaded","getAllLectures","status","lectures","ModalComponent","NavBarComponent","SearchBarComponent","getHideSuggestions","clearSuggestions","suggestions","getCards","forEach","card","setHideSuggestions","uInput","regex","RegExp","i","match","push","preventDefault","setNewCardIndex","findMatches","UpdateCardFormComponent","statesService","dialog","cardCopy","getActiveCardIndex","activeCardIndex","cardIndex","updateCard","dialogRef","open","DialogOverviewExampleDialog","width","cancelEdit","service","close","onNoClick","cancel","Card","CardsPageComponent","route","stateServie","loading","vlAbrv","snapshot","paramMap","get","getLectureByAbrv","ativeCard","getLoadingState","HomePageComponent","loaded","CardsService","newCardIndex$","activeCardIndex$","cards$","asObservable","updateCards","response","_id","providedIn","HttpService","http","urlBase","httpOptions","headers","observe","post","put","StatesService","formMode$","loading$","hideSgtn$","lastFormMode","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomePageComponent },\r\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\nexport class AppComponent {}\r\n","<router-outlet></router-outlet>\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\r\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\r\n\r\nimport { ModalComponent } from \"./components/modal/modal.component\";\r\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\r\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\r\nimport { CardComponent } from \"./components/card/card.component\";\r\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\r\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\n//Services\r\nimport { StatesService } from \"./services/states.service\";\r\nimport { HttpService } from \"./services/http.service\";\r\nimport { CardsService } from \"./services/cards.service\";\r\n\r\n//Material Modules\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SearchBarComponent,\r\n\r\n    ModalComponent,\r\n\r\n    AddCardFormComponent,\r\n    CarouselComponent,\r\n    CardComponent,\r\n    AddLectureFormComponent,\r\n    LecturesComponent,\r\n    HomePageComponent,\r\n    CardsPageComponent,\r\n    UpdateCardFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [StatesService, HttpService, CardsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\n\r\n@Component({\r\n  selector: \"app-add-card-form\",\r\n  templateUrl: \"./add-card-form.component.html\",\r\n  styleUrls: [\"./add-card-form.component.css\"]\r\n})\r\nexport class AddCardFormComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() returnCard: EventEmitter<Card> = new EventEmitter();\r\n  newCard: Card;\r\n  hidden: boolean;\r\n  Contentlength: number;\r\n  themaLength: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  setStyle() {}\r\n  onSubmit(f: NgForm) {\r\n    this.newCard = new Card(f.value.thema, f.value.content);\r\n    this.cardsService.addCard(this.newCard, this.lecture.abrv);\r\n    this.stateService.setLoadingState(true);\r\n    f.reset();\r\n  }\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        ngModel\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(content, thema)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n@Component({\r\n  selector: \"app-add-lecture-form\",\r\n  templateUrl: \"./add-lecture-form.component.html\",\r\n  styleUrls: [\"./add-lecture-form.component.css\"]\r\n})\r\nexport class AddLectureFormComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(f: NgForm) {\r\n    console.log(f.value.name);\r\n    console.log(f.value.abrv);\r\n  }\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  isDisabled(name, abrv) {\r\n    if (!name.value || !abrv.value) {\r\n      return true;\r\n    } else {\r\n      return (\r\n        abrv.value.length == 0 ||\r\n        abrv.value.length < 3 ||\r\n        abrv.value.length > 7 ||\r\n        name.value.length == 0 ||\r\n        name.value.length > 60\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div id=\"addLecture\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Vorlesung hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Vorlesungsname</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Datenstrukturen und Algorithmen\"\r\n        minlength=\"3\"\r\n        required\r\n        #name=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\r\n        >{{ getLength(name) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"abrv\">Abkürzung</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"abrv\"\r\n        name=\"abrv\"\r\n        required\r\n        #abrv=\"ngModel\"\r\n        ngModel\r\n        placeholder=\"Dsal\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\r\n        >{{ getLength(abrv) }}/7\r\n      </small>\r\n    </div>\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(name, abrv)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\nimport { Card } from \"../../models/Card\";\r\n\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.css\"]\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() card: Card;\r\n\r\n  constructor() {}\r\n  public isCollapsed = true;\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"card\" id=\"`{{ card._id }}`\">\r\n  <div class=\"card-header\">\r\n    {{ card.thema }}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <button\r\n      class=\"btn btn-light\"\r\n      type=\"button\"\r\n      (click)=\"isCollapsed = !isCollapsed\"\r\n    >\r\n      Mehr dazu\r\n      <i class=\"fas fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"collapse\" [ngbCollapse]=\"isCollapsed\">\r\n      <pre lang=\"de\">{{ card.content }}</pre>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from \"@angular/core\";\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  group\r\n} from \"@angular/animations\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport {\r\n  NgbCarouselConfig,\r\n  NgbCarousel,\r\n  NgbSlideEvent,\r\n  NgbSlideEventSource\r\n} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: \"app-carousel\",\r\n  templateUrl: \"./carousel.component.html\",\r\n  styleUrls: [\"./carousel.component.css\"]\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() setLoading: EventEmitter<boolean> = new EventEmitter();\r\n  @ViewChild(\"mycarousel\", { static: false }) carousel: NgbCarousel;\r\n\r\n  cards: Card[]; //array of all the cards\r\n  activeSlide: number;\r\n  title: string;\r\n  addComponentHidden: boolean;\r\n  formShow: boolean;\r\n  formMode: string;\r\n\r\n  constructor(\r\n    config: NgbCarouselConfig,\r\n    private httpService: HttpService,\r\n    private stateService: StatesService,\r\n    private cardsService: CardsService\r\n  ) {\r\n    config.interval = -1;\r\n    config.wrap = true;\r\n    config.keyboard = true;\r\n    config.pauseOnHover = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.lecture) {\r\n      this.title = this.lecture.name;\r\n      this.httpService.getCardsFromLecture(this.lecture).subscribe(resp => {\r\n        this.cards = resp.body;\r\n        this.cardsService.initCards(this.cards);\r\n        this.setLoading.emit(false);\r\n      }); //load the specific cards from the server by subscribing to the observable that the card-service provides\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.stateService.setFormMode(\"none\");\r\n    this.stateService.getFormMode().subscribe(mode => {\r\n      this.formShow = mode == \"add\";\r\n      this.formMode = mode;\r\n    });\r\n\r\n    this.cardsService.getNewCardIndex().subscribe(index => {\r\n      if (this.carousel && this.activeSlide != index) {\r\n        this.activeSlide = index;\r\n        console.log(\"sliding\");\r\n        this.carousel.select(index.toString());\r\n      }\r\n    });\r\n  }\r\n\r\n  completeLoading(): void {\r\n    this.setLoading.emit(false);\r\n  }\r\n  toggleAddView(): void {\r\n    if (this.formMode != \"edit\") {\r\n      if (this.formMode == \"add\") {\r\n        this.stateService.setFormMode(\"none\");\r\n      } else {\r\n        this.stateService.setFormMode(\"add\");\r\n      }\r\n    }\r\n  }\r\n  enableEdit() {\r\n    this.stateService.setFormMode(\"edit\");\r\n  }\r\n\r\n  setClass() {\r\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\r\n  }\r\n\r\n  selectSlide(n: number) {\r\n    this.carousel.select(n.toString());\r\n  }\r\n  showRandomCard() {\r\n    var rand: number = this.activeSlide;\r\n    var count = 0;\r\n    while (count < 5 && rand == this.activeSlide) {\r\n      //calculate a new random index\r\n      count++;\r\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\r\n    }\r\n    this.carousel.select(rand.toString());\r\n  }\r\n  goToPrev() {\r\n    this.carousel.prev();\r\n  }\r\n  goToNext() {\r\n    this.carousel.next();\r\n  }\r\n  onSlide(slideEvent: NgbSlideEvent) {\r\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.current));\r\n  }\r\n}\r\n","<h3 id=\"vorlesung\">{{ title }}</h3>\r\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"rand\"\r\n    placement=\"top\"\r\n    ngbTooltip=\"Zufall\"\r\n    (click)=\"showRandomCard()\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div class=\"fas fa-random\"></div>\r\n  </button>\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"editCard\"\r\n    type=\"button\"\r\n    state=\"pen\"\r\n    placement=\"top\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n    (click)=\"enableEdit()\"\r\n    ngbTooltip=\"Bearbeiten\"\r\n  >\r\n    <div class=\"fas fa-pen\"></div>\r\n  </button>\r\n\r\n  <button\r\n    [ngClass]=\"setClass()\"\r\n    id=\"toggleAdd\"\r\n    type=\"button\"\r\n    data-toggle=\"button\"\r\n    (click)=\"toggleAddView()\"\r\n    placement=\"top\"\r\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\r\n  </button>\r\n</div>\r\n<div class=\"row\">\r\n  <a (click)=\"goToPrev()\">\r\n    <span class=\"fas fa-chevron-left\"></span>\r\n  </a>\r\n  <div id=\"carousel\">\r\n    <ngb-carousel\r\n      #mycarousel\r\n      (slide)=\"onSlide($event)\"\r\n      *ngIf=\"cards\"\r\n      [showNavigationArrows]=\"false\"\r\n      [showNavigationIndicators]=\"false\"\r\n      ><ng-container *ngFor=\"let card of cards; index as i\">\r\n        <ng-template ngbSlide [id]=\"i.toString()\">\r\n          <div>\r\n            <app-card [card]=\"card\"></app-card>\r\n          </div>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ngb-carousel>\r\n  </div>\r\n  <a (click)=\"goToNext()\">\r\n    <span class=\"fas fa-chevron-right\"></span>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\n@Component({\r\n  selector: \"app-lectures\",\r\n  templateUrl: \"./lectures.component.html\",\r\n  styleUrls: [\"./lectures.component.css\"]\r\n})\r\nexport class LecturesComponent implements OnInit {\r\n  lectures: Vorlesung[];\r\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getAllLectures().subscribe(resp => {\r\n      if (resp.status == 504) {\r\n        console.log(\"Server down\");\r\n        this.lectures = [];\r\n      } else {\r\n        this.lecturesLoaded.emit(true);\r\n        this.lectures = resp.body;\r\n      }\r\n    });\r\n  }\r\n  setLink(lecture: Vorlesung) {\r\n    return \"/vorlesung/\" + lecture.abrv;\r\n  }\r\n}\r\n","<ul class=\"list list-group\">\r\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\r\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Abbruch</h5><button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div>\r\n            <div class=\"modal-body\">Bist du sicher dass du das Bearbeiten dieser Karte abbrechen willst?</div>\r\n            <div class=\"modal-footer\"><button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Nein, zurück</button><button class=\"btn btn-danger\" id=\"cancel\" type=\"button\">Ja</button></div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\n@Component({\r\n  selector: \"app-nav-bar\",\r\n  templateUrl: \"./nav-bar.component.html\",\r\n  styleUrls: [\"./nav-bar.component.css\"]\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  @Input() cards: Card[];\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  role=\"alert\"\r\n  style=\"padding-right:0;\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\" id=\"navlist\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\r\n              >Kategorie w&auml;hlen</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-4\" style=\"padding-right:0;\">\r\n      <app-search-bar [cards]=\"cards\"></app-search-bar>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\r\n\r\n@Component({\r\n  selector: \"app-search-bar\",\r\n  templateUrl: \"./search-bar.component.html\",\r\n  styleUrls: [\"./search-bar.component.css\"]\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n  @Input() cards: Card[];\r\n  suggestions: SearchSuggestion[];\r\n  uInput: string;\r\n  clearSuggestions: boolean;\r\n  ngOnInit(): void {\r\n    this.stateService.getHideSuggestions().subscribe(value => {\r\n      this.clearSuggestions = value;\r\n      if (value) {\r\n        this.suggestions = [];\r\n      }\r\n    });\r\n  }\r\n  ngOnChanges(): void {\r\n    if (this.cardsService.getCards()) {\r\n      this.cardsService.getCards().subscribe(cards => {\r\n        this.cards = cards;\r\n        cards.forEach(card => {\r\n          if (card.thema == null) {\r\n            card.thema = \"\";\r\n          }\r\n          if (card.content == null) {\r\n            card.content = \"\";\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  findMatches(e: Event) {\r\n    this.stateService.setHideSuggestions(false); //show suggestions\r\n    if (this.uInput && this.uInput.length > 2) {\r\n      this.suggestions = [];\r\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\r\n\r\n      for (let i = 0; i < this.cards.length; i++) {\r\n        if (this.cards[i].thema.match(regex)) {\r\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  navigateTo(e: Event, index: number) {\r\n    e.preventDefault();\r\n    console.log(\"index: \", index);\r\n    this.cardsService.setNewCardIndex(index);\r\n  }\r\n}\r\n","<input\r\n  [(ngModel)]=\"uInput\"\r\n  (input)=\"findMatches($event)\"\r\n  class=\"form-control float-right\"\r\n  id=\"search\"\r\n  type=\"search\"\r\n  placeholder=\"Thema suchen\"\r\n/>\r\n<div *ngIf=\"suggestions\" id=\"matches\">\r\n  <ul class=\"list-group\">\r\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\r\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\r\n        suggestion.title\r\n      }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-update-card-form\",\r\n  templateUrl: \"./update-card-form.component.html\",\r\n  styleUrls: [\"./update-card-form.component.css\"]\r\n})\r\nexport class UpdateCardFormComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() returnCard: EventEmitter<Card> = new EventEmitter();\r\n  public cardCopy: Card = { thema: \"\", content: \"\" };\r\n  private cards: Card[];\r\n\r\n  private cardIndex: number;\r\n  private activeCardIndex: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private httpService: HttpService,\r\n    private statesService: StatesService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardsService.getCards().subscribe(cards => (this.cards = cards));\r\n    this.cardsService\r\n      .getActiveCardIndex()\r\n      .subscribe(index => (this.activeCardIndex = index));\r\n\r\n    this.cardCopy = { ...this.cards[this.activeCardIndex] };\r\n    this.cardIndex = this.activeCardIndex;\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n    this.statesService.setLoadingState(true);\r\n    this.cardCopy.content = f.value.content;\r\n    this.cardCopy.thema = f.value.thema;\r\n\r\n    this.cards[this.cardIndex] = { ...this.cardCopy };\r\n\r\n    this.cardsService.updateCard(\r\n      this.cards[this.cardIndex],\r\n      this.lecture.abrv,\r\n      this.cardIndex\r\n    );\r\n    f.reset();\r\n  }\r\n  cancelEdit() {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"dialog-overview-example-dialog\",\r\n  templateUrl: \"dialog.html\"\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private service: StatesService\r\n  ) {}\r\n\r\n  cancel() {\r\n    this.service.setFormMode(\"reset\");\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte bearbeiten</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.thema\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.content\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        class=\"btn btn-success mb-2 mr-1\"\r\n        type=\"submit\"\r\n        value=\"Sichern\"\r\n        [disabled]=\"isDisabled(content, thema)\"\r\n      />\r\n      <input\r\n        class=\"btn btn-danger mb-2\"\r\n        type=\"button\"\r\n        value=\"Abbruch\"\r\n        (click)=\"cancelEdit()\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n","<h1 mat-dialog-title>Abbruch</h1>\r\n<div mat-dialog-content>\r\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\r\n</div>\r\n<hr />\r\n<div mat-dialog-actions style=\"text-align: right;\">\r\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\r\n    Nein,zurück\r\n  </button>\r\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\r\n</div>\r\n","export class Card {\r\n  _id?: string;\r\n  thema: string;\r\n  content: string;\r\n  abrv?: string;\r\n  constructor(thema, content) {\r\n    this.thema = thema;\r\n    this.content = content;\r\n  }\r\n}\r\n","import { Component, OnInit, HostListener } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\n@Component({\r\n  selector: \"app-cards-page\",\r\n  templateUrl: \"./cards-page.component.html\",\r\n  styleUrls: [\"./cards-page.component.css\"]\r\n})\r\nexport class CardsPageComponent implements OnInit {\r\n  public vlAbrv: string;\r\n  public ativeCard: number;\r\n  public lecture: Vorlesung;\r\n  public loading: boolean = true;\r\n  public formMode: string = \"none\";\r\n  public cards: Card[];\r\n  @HostListener(\"click\", [\"$event.target\"])\r\n  onClick() {\r\n    this.stateServie.setHideSuggestions(true);\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private httpService: HttpService,\r\n    private stateServie: StatesService,\r\n    private cardsService: CardsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\r\n    this.httpService.getLectureByAbrv(this.vlAbrv).subscribe(resp => {\r\n      if (resp.status == 504) {\r\n        console.log(\"Server offline\");\r\n      } else {\r\n        this.lecture = resp.body;\r\n        this.httpService.getCardsFromLecture(this.lecture).subscribe(resp => {\r\n          this.cardsService.initCards(resp.body);\r\n          this.cards = resp.body;\r\n        });\r\n      }\r\n    });\r\n    this.cardsService.getNewCardIndex().subscribe(index => {\r\n      this.ativeCard = index;\r\n    });\r\n    this.stateServie\r\n      .getLoadingState()\r\n      .subscribe(value => (this.loading = value));\r\n    this.stateServie.getFormMode().subscribe(mode => (this.formMode = mode));\r\n  }\r\n\r\n  setLoading(loading: boolean): void {\r\n    this.loading = loading;\r\n    this.stateServie.setLoadingState(loading);\r\n  }\r\n}\r\n","<app-nav-bar [cards]=\"cards\"></app-nav-bar>\r\n<div id=\"progress\">\r\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n<br />\r\n<div class=\"container\">\r\n  <app-carousel\r\n    (setLoading)=\"setLoading($event)\"\r\n    [lecture]=\"lecture\"\r\n  ></app-carousel>\r\n  <br />\r\n  <app-add-card-form\r\n    *ngIf=\"formMode == 'add'\"\r\n    [lecture]=\"lecture\"\r\n  ></app-add-card-form>\r\n  <app-update-card-form\r\n    *ngIf=\"formMode == 'edit'\"\r\n    [lecture]=\"lecture\"\r\n  ></app-update-card-form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"]\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  public loaded: boolean = false;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n  lecturesLoaded(loaded: boolean): void {\r\n    this.loaded = loaded;\r\n  }\r\n}\r\n","<mat-progress-bar *ngIf=\"!loaded\" mode=\"indeterminate\"></mat-progress-bar>\r\n<div class=\"container\">\r\n  <app-lectures (lecturesLoaded)=\"lecturesLoaded($event)\"></app-lectures>\r\n  <br />\r\n  <app-add-lecture-form></app-add-lecture-form>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { Subject, Observable, BehaviorSubject, of } from \"rxjs\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\nimport { StatesService } from \"./states.service\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CardsService {\r\n  private cards$: BehaviorSubject<Card[]>;\r\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\r\n    0\r\n  );\r\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\r\n    number\r\n  >(0);\r\n  private cards: Card[];\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private statesService: StatesService\r\n  ) {}\r\n\r\n  getCards(): Observable<Card[]> {\r\n    if (this.cards$) {\r\n      return this.cards$.asObservable();\r\n    } else {\r\n      console.log(\"requesting uninitialized cards array, returning []\");\r\n      return of([]);\r\n    }\r\n  }\r\n\r\n  initCards(cards: Card[]) {\r\n    this.cards$ = new BehaviorSubject<Card[]>(cards);\r\n    this.cards = cards;\r\n  }\r\n  updateCards(cards: Card[]) {\r\n    this.cards$.next(cards);\r\n  }\r\n  updateCard(card: Card, vlAbrv: string, index: number) {\r\n    if (!card.abrv) {\r\n      card.abrv = vlAbrv;\r\n    }\r\n    this.httpService.updateCard(card).subscribe(resp => {\r\n      this.statesService.setLoadingState(false);\r\n      this.statesService.setFormMode(\"reset\");\r\n      this.cards[index] = card;\r\n      this.updateCards(this.cards);\r\n    });\r\n  }\r\n  addCard(card: Card, vlAbrv: string) {\r\n    if (!this.cards) {\r\n      this.cards$.subscribe(cards => (this.cards = cards));\r\n    }\r\n\r\n    this.httpService.addCard(card, vlAbrv).subscribe(response => {\r\n      this.statesService.setLoadingState(false);\r\n      card._id = response.body;\r\n      this.cards.push(card);\r\n      this.updateCards(this.cards);\r\n    });\r\n  }\r\n  getNewCardIndex(): Observable<number> {\r\n    return this.newCardIndex$.asObservable();\r\n  }\r\n  setNewCardIndex(i: number) {\r\n    console.log(i);\r\n    this.newCardIndex$.next(i);\r\n  }\r\n  setActiveCardIndex(i: number) {\r\n    this.activeCardIndex$.next(i);\r\n  }\r\n  getActiveCardIndex(): Observable<number> {\r\n    return this.activeCardIndex$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\n\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class HttpService {\r\n  private urlBase: string = \"api/\";\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" })\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Cards\r\n  getCardsFromLecture(lecture: Vorlesung): Observable<HttpResponse<Card[]>> {\r\n    return this.http.get<Card[]>(\r\n      this.urlBase + \"getCards/?abrv=\" + lecture.abrv,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n\r\n  addCard(card: Card, vlAbrv: string): Observable<HttpResponse<any>> {\r\n    //Cards müssen richtig im Frontend definiert werden\r\n    return this.http.post<any>(\r\n      this.urlBase + \"addCard\",\r\n      { card: card, abrv: vlAbrv },\r\n      this.httpOptions\r\n    );\r\n  }\r\n  updateCard(card: Card): Observable<HttpResponse<any>> {\r\n    return this.http.put<any>(\r\n      this.urlBase + \"updateCard\",\r\n      { card: card },\r\n      {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\"\r\n      }\r\n    );\r\n  }\r\n\r\n  //Lectures\r\n  getAllLectures(): Observable<HttpResponse<Vorlesung[]>> {\r\n    return this.http.get<Vorlesung[]>(this.urlBase + \"getAllLectures\", {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\r\n    return this.http.post<any>(this.urlBase + \"addLecture\", lecture, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\"\r\n    });\r\n  }\r\n\r\n  getLectureByAbrv(abrv: string): Observable<HttpResponse<Vorlesung>> {\r\n    return this.http.get<Vorlesung>(this.urlBase + \"getLecture?abrv=\" + abrv, {\r\n      observe: \"response\"\r\n    });\r\n  }\r\n}\r\n","//This service is made to manage states across components\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class StatesService {\r\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\r\n  private lastFormMode: string;\r\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  constructor() {}\r\n\r\n  getFormMode(): Observable<string> {\r\n    return this.formMode$.asObservable();\r\n  }\r\n  setFormMode(mode: string): void {\r\n    if (mode == \"reset\") {\r\n      if (!this.lastFormMode) {\r\n        //last form mode is undefined\r\n        this.lastFormMode = \"none\";\r\n      } // last Form mode defined\r\n      this.formMode$.next(this.lastFormMode);\r\n    } else {\r\n      this.formMode$.next(mode);\r\n      if (mode != \"edit\") this.lastFormMode = mode;\r\n    }\r\n  }\r\n\r\n  getLoadingState(): BehaviorSubject<boolean> {\r\n    return this.loading$;\r\n  }\r\n  setLoadingState(value: boolean) {\r\n    this.loading$.next(value);\r\n  }\r\n  setHideSuggestions(value: boolean) {\r\n    this.hideSgtn$.next(value);\r\n  }\r\n  getHideSuggestions(): Observable<boolean> {\r\n    return this.hideSgtn$.asObservable();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}