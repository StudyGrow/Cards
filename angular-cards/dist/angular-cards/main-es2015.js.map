{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-card-form/add-card-form.component.ts","./src/app/components/add-card-form/add-card-form.component.html","./src/app/components/add-lecture-form/add-lecture-form.component.ts","./src/app/components/add-lecture-form/add-lecture-form.component.html","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/carousel/carousel.component.ts","./src/app/components/carousel/carousel.component.html","./src/app/components/lectures/lectures.component.ts","./src/app/components/lectures/lectures.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/signup-form/signup-form.component.ts","./src/app/components/signup-form/signup-form.component.html","./src/app/components/update-card-form/update-card-form.component.ts","./src/app/components/update-card-form/update-card-form.component.html","./src/app/components/update-card-form/dialog.html","./src/app/models/Card.ts","./src/app/models/Vorlesung.ts","./src/app/routes/cards-page/cards-page.component.ts","./src/app/routes/cards-page/cards-page.component.html","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/home-page.component.html","./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/signup-page/signup-page.component.ts","./src/app/routes/signup-page/signup-page.component.html","./src/app/services/cards.service.ts","./src/app/services/http.service.ts","./src/app/services/states.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACoB;AACG;AACA;AACG;;;AACjF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,uFAAiB,EAAE;IAC1C,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,0FAAkB,EAAE;IAC1D,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0FAAkB,EAAE;IAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,6FAAmB,EAAE;CACnD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AASnC,MAAM,YAAY;IACvB,YAA2B,MAAc,EAAU,YAAmB;QAA3C,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAO;QACpE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;;wEAHU,YAAY;4FAAZ,YAAY;QCTzB,2EAA+B;;6FDSlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS;AACiD;AACjB;AACe;AACD;AACC;AACX;AACyB;AACX;AACQ;AAEnE,YAAY;AACmC;AAC0B;AACS;AACQ;AACb;AACZ;AACkC;AACtB;AACF;AACG;AAC9E,UAAU;AACgD;AACJ;AACE;AAExD,kBAAkB;AAC6D;AACoB;AACnG,UAAU;AAKyB;AAC2C;AACI;AACD;AACI;;AAErF,4CAA4C;AACrC,MAAM,cAAe,SAAQ,6EAAmB;IAAvD;;QACE,cAAS,GAAQ;YACf,GAAG,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,aAAa,EAAE;YACxC,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,kBAAkB,EAAE;SAChD,CAAC;IAmBJ,CAAC;IAjBC,WAAW,CAAC,OAAoB;QAC9B,MAAM,EAAE,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE;YAC7B,WAAW,EAAE,MAAM;YACnB,UAAU,EAAE,MAAM,CAAC,sBAAsB;gBACvC,CAAC,CAAC,MAAM,CAAC,iBAAiB;gBAC1B,CAAC,CAAC,MAAM,CAAC,UAAU;YACrB,WAAW,EAAE;gBACX;oBACE,MAAM,CAAC,KAAK;oBACZ;wBACE,SAAS,EAAE,MAAM,CAAC,oBAAoB;qBACvC;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACZ,CAAC;CACF;AA4CM,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAXT;QACT,uEAAa;QACb,mEAAW;QACX,qEAAY;QACZ;YACE,OAAO,EAAE,+EAAqB;YAC9B,QAAQ,EAAE,cAAc;SACzB;KACF,YArBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,oEAAS;YACT,0DAAW;YACX,6FAAuB;YACvB,mFAAoB;YACpB,wEAAe;YACf,mEAAc;YACd,gEAAW;YACX,sEAAY;SACb;mIAYU,SAAS,mBAxClB,2DAAY;QACZ,sFAAe;QACf,+FAAkB;QAClB,uGAAoB;QACpB,0FAAiB;QACjB,8EAAa;QACb,gHAAuB;QACvB,0FAAiB;QACjB,wFAAiB;QACjB,2FAAkB;QAClB,gHAAuB;QACvB,2FAAkB;QAClB,+FAAkB;QAClB,8FAAmB;QACnB,kGAAmB,aAGnB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,oEAAS;QACT,0DAAW;QACX,6FAAuB;QACvB,mFAAoB;QACpB,wEAAe;QACf,mEAAc;QACd,gEAAW;QACX,sEAAY;6FAaH,SAAS;cA1CrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,sFAAe;oBACf,+FAAkB;oBAClB,uGAAoB;oBACpB,0FAAiB;oBACjB,8EAAa;oBACb,gHAAuB;oBACvB,0FAAiB;oBACjB,wFAAiB;oBACjB,2FAAkB;oBAClB,gHAAuB;oBACvB,2FAAkB;oBAClB,+FAAkB;oBAClB,8FAAmB;oBACnB,kGAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,oEAAS;oBACT,0DAAW;oBACX,6FAAuB;oBACvB,mFAAoB;oBACpB,wEAAe;oBACf,mEAAc;oBACd,gEAAW;oBACX,sEAAY;iBACb;gBACD,SAAS,EAAE;oBACT,uEAAa;oBACb,mEAAW;oBACX,qEAAY;oBACZ;wBACE,OAAO,EAAE,+EAAqB;wBAC9B,QAAQ,EAAE,cAAc;qBACzB;iBACF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC5GD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAItC;;;;;;AAQlC,MAAM,oBAAoB;IAO/B,YACU,YAA0B,EAC1B,YAA2B;QAD3B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAe;QAP3B,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAQ3D,CAAC;IAEJ,QAAQ,KAAU,CAAC;IACnB,QAAQ,KAAI,CAAC;IACb,QAAQ,CAAC,CAAS;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,iDAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IACD,oDAAoD;IACpD,0BAA0B,CAAC,KAAK;QAC9B,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,OAAO;gBACL,KAAK,EACH,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACjE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;oBACrB,CAAC,CAAC,SAAS;oBACX,CAAC,CAAC,SAAS;aAChB,CAAC;SACH;aAAM;YACL,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SAC7B;IACH,CAAC;IACD,oDAAoD;IACpD,4BAA4B,CAAC,OAAO;QAClC,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,OAAO;gBACL,KAAK,EACH,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;aACtE,CAAC;SACH;aAAM;YACL,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC1B;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAED,UAAU,CAAC,OAAO,EAAE,KAAK;QACvB,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAClC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CACL,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;YAC1B,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAClD,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CACxB,CAAC;IACJ,CAAC;;wFA/DU,oBAAoB;oGAApB,oBAAoB;;QCZjC,yEACE;QAAA,6EACE;QADgB,8RAAY,kBAAW,IAAC;QACxC,qEAAI;QAAA,sFAAsB;QAAA,4DAAK;QAC/B,yEACE;QAAA,2EAAmB;QAAA,2EAAW;QAAA,4DAAQ;QACtC,yEAWA;QAAA,4EAGG;QAAA,wDACH;QAAA,4DAAQ;QACV,4DAAM;QACN,0EACE;QAAA,4EAAqB;QAAA,yEAAa;QAAA,4DAAQ;QAC1C,8EAQY;QACZ,4EAGG;QAAA,wDACH;QAAA,4DAAQ;QACV,4DAAM;QAEN,wEAOF;QAAA,4DAAO;QACT,4DAAM;;;;QA9BE,2DAA6C;QAA7C,yGAA6C;QAC5C,0DACH;QADG,iGACH;QAeE,0DAAiD;QAAjD,2GAAiD;QAChD,0DACH;QADG,kGACH;QAQA,0DAAuC;QAAvC,gGAAuC;;6FDjChC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAEE,mDAAK;;kBACL,oDAAM;;;;;;;;;;;;;;AEdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAErB;;;;;;AAQ5C,MAAM,uBAAuB;IAClC,YACU,IAAiB,EACjB,aAA4B;QAD5B,SAAI,GAAJ,IAAI,CAAa;QACjB,kBAAa,GAAb,aAAa,CAAe;QAE5B,WAAM,GAA4B,IAAI,0DAAY,EAAE,CAAC;IAD5D,CAAC;IAEJ,QAAQ,KAAU,CAAC;IACnB,QAAQ,CAAC,CAAS;QAChB,IAAI,UAAU,GAAG,IAAI,2DAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IAED,qBAAqB,CAAC,KAAK,EAAE,GAAW;QACtC,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,OAAO;gBACL,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;aACxD,CAAC;SACH;aAAM;YACL,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SAC7B;IACH,CAAC;IACD,SAAS,CAAC,IAAI;QACZ,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC1B;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IACD,UAAU,CAAC,IAAI,EAAE,IAAI;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,CACL,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;gBACtB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CACvB,CAAC;SACH;IACH,CAAC;;8FA9CU,uBAAuB;uGAAvB,uBAAuB;;QCVpC,yEACE;QAAA,6EACE;QADgB,iSAAY,kBAAW,IAAC;QACxC,qEAAI;QAAA,oFAAoB;QAAA,4DAAK;QAC7B,yEACE;QAAA,2EAAkB;QAAA,yEAAc;QAAA,4DAAQ;QACxC,yEAWA;QAAA,4EAGG;QAAA,wDACH;QAAA,4DAAQ;QACV,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,0EAAS;QAAA,4DAAQ;QACnC,2EASA;QAAA,4EAGG;QAAA,wDACH;QAAA,4DAAQ;QACV,4DAAM;QACN,wEAOF;QAAA,4DAAO;QACT,4DAAM;;;;QA7BE,2DAA2C;QAA3C,wGAA2C;QAC1C,0DACH;QADG,iGACH;QAeE,0DAA0C;QAA1C,uGAA0C;QACzC,0DACH;QADG,gGACH;QAOA,0DAAmC;QAAnC,gGAAmC;;6FDlC5B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;kBAME,oDAAM;;;;;;;;;;;;;;AEfT;AAAA;AAAA;AAAA;AAAyD;;;AASlD,MAAM,aAAa;IAGxB;QACO,gBAAW,GAAG,IAAI,CAAC;IADX,CAAC;IAEhB,QAAQ,KAAU,CAAC;;0EALR,aAAa;6FAAb,aAAa;QCT1B,yEACE;QAAA,yEACE;QAAA,uDACF;QAAA,4DAAM;QACN,yEACE;QAAA,4EAKE;QAFA,2KAAoC;QAEpC,sEACA;QAAA,kEAAiC;QACnC,4DAAS;QACT,yEACE;QAAA,yEAAe;QAAA,uDAAkB;QAAA,4DAAM;QACzC,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAjBY,kGAAqB;QAEnC,0DACF;QADE,0FACF;QAUwB,0DAA2B;QAA3B,wFAA2B;QAChC,0DAAkB;QAAlB,iFAAkB;;6FDL1B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAEE,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQuB;;;;;;;;;;;IC0ChB,wEACC;IAAA,wFACE;IAAA,0EAAmC;IACrC,4DAAoB;IACtB,qEAAe;;;;IAHM,0DAAmB;IAAnB,gFAAmB;IAC1B,0DAAa;IAAb,0EAAa;;;;IAfjC,yEACE;IAAA,uEACE;IADC,kTAAoB;IACrB,sEAAyC;IAC3C,4DAAI;IACJ,0EACE;IADiB,4TAAwB;IACzC,uFAQG;IAPD,gWAAqC;IAOpC,sIACC;IAIJ,4DAAe;IACjB,4DAAM;IACN,uEACE;IADC,kTAAoB;IACrB,sEAA0C;IAC5C,4DAAI;IACN,4DAAM;;;IAfA,0DAAkC;IAAlC,iGAAkC;IAKnB,0DAAsC;IAAtC,kFAAsC;;AD5BpD,MAAM,iBAAiB;IAkB5B,YACE,MAAyB,EACjB,WAAwB,EACxB,YAA2B,EAC3B,YAA0B;QAF1B,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAe;QAC3B,iBAAY,GAAZ,YAAY,CAAc;QApB1B,eAAU,GAA0B,IAAI,0DAAY,EAAE,CAAC;QAUjE,gBAAW,GAAW,CAAC,CAAC;QAYtB,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9B,CAAC;IAvB6C,SAAS,CAAC,KAAU;QAChE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IAC8C,SAAS,CAAC,KAAU;QACjE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;IAC5B,CAAC;IAoBD,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBACpE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC,yGAAyG;SAC9G;IACH,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,KAAK,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACtD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE;gBAC9C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD,aAAa;QACX,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;gBAC1B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACtC;SACF;IACH,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC;IAC3D,CAAC;IAED,WAAW,CAAC,CAAS;QACnB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,cAAc;QACZ,IAAI,IAAI,GAAW,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAO,KAAK,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YAC5C,8BAA8B;YAC9B,KAAK,EAAE,CAAC;YACR,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB;SACzE;QACD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7C,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;SAC/B;IACH,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;SAC3B;IACH,CAAC;IACD,OAAO,CAAC,UAAU;QAChB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3E,CAAC;;kFArGU,iBAAiB;iGAAjB,iBAAiB;;;;;;;;QCtB9B,wEAAmB;QAAA,uDAAW;QAAA,4DAAK;QACnC,yEACE;QAAA,4EAQE;QAHA,yIAAS,oBAAgB,IAAC;QAG1B,oEAAiC;QACnC,4DAAS;QACT,4EASE;QAHA,yIAAS,gBAAY,IAAC;QAGtB,oEAA8B;QAChC,4DAAS;QAET,4EAUE;QALA,yIAAS,mBAAe,IAAC;QAKzB,iEAAwE;QAC1E,4DAAS;QACX,4DAAM;QACN,6GACE;;QAtCiB,0DAAW;QAAX,0EAAW;QAQ1B,0DAA8D;QAA9D,mIAA8D;QAS9D,0DAA8D;QAA9D,mIAA8D;QAQ9D,0DAAsB;QAAtB,mFAAsB;QASjB,0DAA4D;QAA5D,gHAA4D;QAGhE,0DAAiC;QAAjC,mGAAiC;;6FDfzB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAEE,mDAAK;;kBACL,oDAAM;;kBAEN,uDAAS;mBAAC,YAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;kBACzC,0DAAY;mBAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;;kBAGpC,0DAAY;mBAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;AE9BxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;ICC7E,wEACE;IAAA,uEAAmC;IAAA,uDAAkB;IAAA,4DAAI;IAC3D,4DAAK;;;;IADA,0DAA+B;IAA/B,oGAA+B;IAAC,0DAAkB;IAAlB,iFAAkB;;ADOlD,MAAM,iBAAiB;IAK5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAHlC,mBAAc,GAA0B,IAAI,0DAAY,EAAE,CAAC;IAGtB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACpB;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC;IACD,OAAO,CAAC,OAAkB;QACxB,OAAO,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC;IACtC,CAAC;;kFA3BU,iBAAiB;iGAAjB,iBAAiB;QCT9B,wEACE;QAAA,2GACE;QAEJ,4DAAK;;QAHyB,0DAAgC;QAAhC,iFAAgC;;6FDQjD,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;kBAGE,oDAAM;;kBACN,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICAlD,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sFACF;;ADOO,MAAM,kBAAkB;IAC7B,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEjE,QAAQ,KAAU,CAAC;IACnB,MAAM,CAAC,IAAY;QACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACnC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;gBAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;aAClC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,QAAQ,EAAE,QAAQ;QAC3B,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAChE,CAAC;;oFAzBU,kBAAkB;kGAAlB,kBAAkB;;QCT/B,8GACE;QAEF,yEACE;QAAA,6EACE;QADmB,4RAAY,gBAAY,IAAC;QAC5C,yEACE;QAAA,2EAAkB;QAAA,uEAAY;QAAA,4DAAQ;QACtC,yEAUF;QAAA,4DAAM;QACN,yEACE;QAAA,4EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,2EAQF;QAAA,4DAAM;QACN,2EACE;QAAA,4EAUA;QAAA,6EAA+C;QAAA,8EAAkB;QAAA,4DAAQ;QAC3E,4DAAM;QACN,8EAKE;QAAA,mEACF;QAAA,4DAAS;QACX,4DAAO;QACT,4DAAM;;;;QAlD2B,+EAA4B;QA6CvD,2DAA2C;QAA3C,gGAA2C;;6FDpCpC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;IC0B/C,qEACE;IAAA,wEAKG;IAAA,mEAA2B;IAAC,iEAAK;IAAA,4DACnC;IACH,4DAAK;;;IARa,gHAAyC;;;IAS3D,qEACE;IAAA,wEACG;IAAA,mEAA2B;IAAC,wEAAY;IAAA,4DAC1C;IACH,4DAAK;;;IAJa,iHAA0C;;;IAK5D,qEACE;IAAA,wEAKG;IAAA,mEAAkC;IAAC,mEAAO;IAAA,4DAC5C;IACH,4DAAK;;;IARY,kHAA2C;;;IAalE,0EACE;IAAA,gFAAiD;IACnD,4DAAM;;;IADY,0DAAe;IAAf,+EAAe;;AD1C9B,MAAM,eAAe;IAG1B,YACU,MAAc,EACd,YAAmB,EACnB,IAAiB;QAFjB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAO;QACnB,SAAI,GAAJ,IAAI,CAAa;IACxB,CAAC;IACJ,QAAQ,CAAC,IAAY;QACnB,OAAO,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;IAClD,CAAC;IACD,YAAY;QACV,IAAI,YAAoB,CAAC;QACzB,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACvB,KAAK,QAAQ;gBACX,YAAY,GAAG,OAAO,CAAC;gBACvB,MAAM;YACR,KAAK,SAAS;gBACZ,YAAY,GAAG,SAAS,CAAC;gBACzB,MAAM;YACR,KAAK,GAAG;gBACN,YAAY,GAAG,MAAM,CAAC;gBACtB,MAAM;YACR;gBACE,YAAY,GAAG,OAAO,CAAC;SAC1B;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;;8EAhCU,eAAe;+FAAf,eAAe;QCZ5B,yEAKE;QAAA,yEACE;QAAA,yEACE;QAAA,4EASE;QAAA,qEAAyC;QAC3C,4DAAS;QACT,yEACE;QAAA,wEACE;QAAA,qEACE;QAAA,uEACG;QAAA,kEAA2B;QAAC,wEAAW;QAAA,4DACzC;QACH,4DAAK;QAEL,2GACE;QAQF,2GACE;QAIF,2GACE;QAQJ,4DAAK;QACP,4DAAM;QACR,4DAAM;QAEN,8GACE;QAEJ,4DAAM;QACR,4DAAM;;QArCQ,0DAAoC;QAApC,wGAAoC;QAMpC,0DAAa;QAAb,2EAAa;QASb,0DAAa;QAAb,2EAAa;QAKb,0DAAY;QAAZ,0EAAY;QAajB,0DAAa;QAAb,2EAAa;;6FDzCT,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;kBAEE,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;ICUrD,wEACE;IAAA,uEAA2D;IAA/C,mYAA8C;IAAC,uDAEzD;IAAA,4DAAI;IACR,4DAAK;;;IAHwD,0DAEzD;IAFyD,qFAEzD;;;IALR,yEACE;IAAA,wEACE;IAAA,kHACE;IAIJ,4DAAK;IACP,4DAAM;;;IANE,0DAAsC;IAAtC,uFAAsC;;ADEvC,MAAM,kBAAkB;IAC7B,YACU,YAA0B,EAC1B,YAA2B;QAD3B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAe;IAClC,CAAC;IAKJ,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACvD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;wBACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;qBACjB;oBACD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;wBACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;qBACnB;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,WAAW,CAAC,CAAQ;QAClB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,kBAAkB;QAC/D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;YAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;iBACjE;aACF;SACF;IACH,CAAC;IACD,UAAU,CAAC,CAAQ,EAAE,KAAa;QAChC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;;oFAlDU,kBAAkB;kGAAlB,kBAAkB;QCZ/B,2EAQA;QAPE,sLAAoB,uFACX,uBAAmB,IADR;QADtB,4DAQA;QAAA,8GACE;;QARA,+EAAoB;QAOjB,0DAAmB;QAAnB,iFAAmB;;6FDIX,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAME,mDAAK;;;;;;;;;;;;;;AEjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICAlD,0EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sFACF;;ADOO,MAAM,mBAAmB;IAC9B,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAGjE,QAAQ,KAAU,CAAC;IACnB,MAAM,CAAC,IAAY;QACjB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3C,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBAChD,IAAI,IAAI,EAAE;wBACR,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC7B;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;gBAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;aAClC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IACD,QAAQ,CAAC,QAAQ,EAAE,SAAS;QAC1B,IACE,SAAS,CAAC,KAAK;YACf,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YAC1B,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,EACjC;YACA,OAAO,6BAA6B,CAAC;SACtC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,UAAU,CAAC,KAAK;QACd,IAAI,+CAA+C,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC/D,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IACD,SAAS,CAAC,IAAI;QACZ,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC1B;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IACD,qBAAqB,CAAC,KAAK,EAAE,GAAW;QACtC,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,OAAO;gBACL,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;aACxD,CAAC;SACH;aAAM;YACL,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SAC7B;IACH,CAAC;IACD,UAAU,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS;QAC7C,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACtD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CACL,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YACzB,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YACzB,QAAQ,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK;YACjC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAC9B,CAAC;IACJ,CAAC;;sFApEU,mBAAmB;mGAAnB,mBAAmB;;QCThC,+GACE;QAEF,yEACE;QAAA,6EACE;QADmB,6RAAY,gBAAY,IAAC;QAC5C,yEACE;QAAA,2EAAkB;QAAA,uEAAY;QAAA,4DAAQ;QACtC,yEAWA;QAAA,2EAAyB;QAAA,iFAAqB;QAAA,4DAAQ;QACxD,4DAAM;QACN,0EACE;QAAA,4EAAmB;QAAA,yEAAa;QAAA,4DAAQ;QACxC,4EAUF;QAAA,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,4EASA;QAAA,4EAAyB;QAAA,iFAAqB;QAAA,4DAAQ;QACxD,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,gFAAoB;QAAA,4DAAQ;QAClD,4EAUA;QAAA,uEAAkC;QACpC,4DAAM;QACN,8EAKE;QAAA,+EACF;QAAA,4DAAS;QACX,4DAAO;QACT,4DAAM;;;;;;QApE2B,+EAA4B;QAwDrD,2DAAuC;QAAvC,kFAAuC;QAOzC,0DAA6D;QAA7D,4GAA6D;;6FDtDtD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;AAcxE,MAAM,uBAAuB;IAQlC,YACU,YAA0B,EAC1B,WAAwB,EACxB,aAA4B,EAC7B,MAAiB;QAHhB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAW;QAVhB,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;QACvD,aAAQ,GAAS,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;IAUhD,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY;aACd,kBAAkB,EAAE;aACpB,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC;QAEtD,IAAI,CAAC,QAAQ,qBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAE,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QAEpC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAQ,IAAI,CAAC,QAAQ,CAAE,CAAC;QAElD,IAAI,CAAC,YAAY,CAAC,UAAU,CAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EACjB,IAAI,CAAC,SAAS,CACf,CAAC;QACF,CAAC,CAAC,KAAK,EAAE,CAAC;IACZ,CAAC;IACD,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE;YAC9D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,0BAA0B,CAAC,KAAK;QAC9B,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,OAAO;gBACL,KAAK,EACH,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACjE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;oBACrB,CAAC,CAAC,SAAS;oBACX,CAAC,CAAC,SAAS;aAChB,CAAC;SACH;aAAM;YACL,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SAC7B;IACH,CAAC;IACD,oDAAoD;IACpD,4BAA4B,CAAC,OAAO;QAClC,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,OAAO;gBACL,KAAK,EACH,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;aACtE,CAAC;SACH;aAAM;YACL,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SAC1B;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAED,UAAU,CAAC,OAAO,EAAE,KAAK;QACvB,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAClC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CACL,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;YAC1B,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAClD,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CACxB,CAAC;IACJ,CAAC;;8FAxFU,uBAAuB;uGAAvB,uBAAuB;;QCdpC,yEACE;QAAA,6EACE;QADgB,iSAAY,kBAAW,IAAC;QACxC,qEAAI;QAAA,iFAAsB;QAAA,4DAAK;QAC/B,yEACE;QAAA,2EAAmB;QAAA,2EAAW;QAAA,4DAAQ;QACtC,8EAWA;QAFE,mMAA4B;QAT9B,4DAWA;QAAA,4EAGG;QAAA,wDACH;QAAA,4DAAQ;QACV,4DAAM;QACN,0EACE;QAAA,4EAAqB;QAAA,yEAAa;QAAA,4DAAQ;QAC1C,mFAQY;QADV,yMAA8B;QAC/B,4DAAW;QACZ,4EAGG;QAAA,wDACH;QAAA,4DAAQ;QACV,4DAAM;QACN,0EACE;QAAA,wEAMA;QAAA,6EAMF;QAFI,+IAAS,gBAAY,IAAC;QAJxB,4DAMF;QAAA,4DAAM;QACR,4DAAO;QACT,4DAAM;;;;QAxCE,0DAA4B;QAA5B,uFAA4B;QAI5B,0DAA6C;QAA7C,yGAA6C;QAC5C,0DACH;QADG,iGACH;QAWE,0DAA8B;QAA9B,yFAA8B;QAI9B,0DAAiD;QAAjD,2GAAiD;QAChD,0DACH;QADG,kGACH;QAOE,0DAAuC;QAAvC,gGAAuC;;6FD9BlC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;kBAEE,mDAAK;;kBACL,oDAAM;;AA4FF,MAAM,2BAA2B;IACtC,YACS,SAAoD,EACnD,OAAsB;QADvB,cAAS,GAAT,SAAS,CAA2C;QACnD,YAAO,GAAP,OAAO,CAAe;IAC7B,CAAC;IAEJ,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAElC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;sGAbU,2BAA2B;2GAA3B,2BAA2B;QE5GxC,wEAAqB;QAAA,kEAAO;QAAA,4DAAK;QACjC,yEACE;QAAA,oEAAG;QAAA,uIAAuE;QAAA,4DAAI;QAChF,4DAAM;QACN,gEACA;QAAA,yEACE;QAAA,4EACE;QADgD,mJAAS,eAAW,IAAC;QACrE,6EACF;QAAA,4DAAS;QACT,4EAA6D;QAAnB,mJAAS,YAAQ,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC1E,4DAAM;;6FFkGO,2BAA2B;cAJvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,WAAW,EAAE,aAAa;aAC3B;;;;;;;;;;;;;;AG3GD;AAAA;AAAO,MAAM,IAAI;IAKf,YAAY,KAAK,EAAE,OAAO;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;;;;;;;;;;;;;ACTD;AAAA;AAAO,MAAM,SAAS;IAGpB,YAAY,IAAI,EAAE,IAAI;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;;;;;;;;;;;;;;ICE9D,iFAA0E;;;IAS1E,kFAGqB;;;IADnB,mFAAmB;;;IAErB,qFAGwB;;;IADtB,mFAAmB;;ADJhB,MAAM,kBAAkB;IAW7B,YACU,KAAqB,EACrB,WAAwB,EACxB,WAA0B,EAC1B,YAA0B,EAC1B,KAAY;QAJZ,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAe;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAO;QAZf,YAAO,GAAY,IAAI,CAAC;QACxB,aAAQ,GAAW,MAAM,CAAC;IAY9B,CAAC;IATJ,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IASD,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChE,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;aAC/B;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;oBACpE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACtD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW;aACb,eAAe,EAAE;aACjB,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;;oFA7CU,kBAAkB;kGAAlB,kBAAkB;;;QCb/B,4EAA2C;QAC3C,yEACE;QAAA,wIAAuD;QACzD,4DAAM;QACN,gEACA;QAAA,yEACE;QAAA,kFAGgB;QAFd,gKAAc,sBAAkB,IAAC;QAElC,4DAAe;QAChB,gEACA;QAAA,0IAGC;QACD,gJAGC;QACH,4DAAM;;QAnBO,4EAAe;QAER,0DAAe;QAAf,6EAAe;QAM/B,0DAAmB;QAAnB,gFAAmB;QAInB,0DAAyB;QAAzB,uFAAyB;QAIzB,0DAA0B;QAA1B,wFAA0B;;6FDHjB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAQE,0DAAY;mBAAC,OAAO,EAAE,CAAC,eAAe,CAAC;;;;;;;;;;;;;;AEpB1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICClD,iFAA0E;;ADMnE,MAAM,iBAAiB;IAG5B;QAFO,WAAM,GAAY,KAAK,CAAC;IAEhB,CAAC;IAEhB,QAAQ,KAAU,CAAC;IACnB,SAAS,CAAC,MAAe;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IACD,MAAM,CAAC,OAAkB;QACvB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACvB,CAAC;;kFAZU,iBAAiB;iGAAjB,iBAAiB;QCP9B,4EAA+C;QAC/C,uIAAuD;QACvD,yEACE;QAAA,kFAGgB;QAFd,uKAAkB,qBAAiB,IAAC;QAErC,4DAAe;QAChB,gEACA;QAAA,0FAAuE;QAAjD,+JAAU,kBAAc,IAAC;QAAC,4DAAuB;QACzE,4DAAM;;QATO,4EAAmB;QACd,0DAAe;QAAf,6EAAe;QAI7B,0DAAe;QAAf,4EAAe;;6FDEN,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,kBAAkB;IAE7B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEAA2B;QAC3B,sEACE;QAAA,4EAAiC;QACnC,4DAAM;;6FDIO,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,mBAAmB;IAE9B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEAA2B;QAC3B,sEACE;QAAA,6EAAmC;QACrC,4DAAM;;6FDIO,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEqB;;;;AAOzD,MAAM,YAAY;IAUvB,YACU,WAAwB,EACxB,aAA4B;QAD5B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAV9B,kBAAa,GAA4B,IAAI,oDAAe,CAClE,CAAC,CACF,CAAC;QACM,qBAAgB,GAA4B,IAAI,oDAAe,CAErE,CAAC,CAAC,CAAC;IAMF,CAAC;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;SACnC;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;YAClE,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;SACf;IACH,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,GAAG,IAAI,oDAAe,CAAS,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACD,UAAU,CAAC,IAAU,EAAE,MAAc,EAAE,KAAa;QAClD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACpB;QACD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO,CAAC,IAAU,EAAE,MAAc;QAChC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC1D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IACD,eAAe,CAAC,CAAS;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB,CAAC,CAAS;QAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IACD,kBAAkB;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAC9C,CAAC;;wEAlEU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;AAMb;;;AAWvB,MAAM,WAAW;IAOtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN5B,YAAO,GAAW,MAAM,CAAC;QAEzB,gBAAW,GAAG;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SACjE,CAAC;IAEqC,CAAC;IAExC,OAAO;IACP,mBAAmB,CAAC,OAAkB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,OAAO,CAAC,IAAI,EAC/C,EAAE,OAAO,EAAE,UAAU,EAAE,CACxB,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,IAAU,EAAE,MAAc;QAChC,mDAAmD;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,OAAO,GAAG,SAAS,EACxB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,EAC5B,IAAI,CAAC,WAAW,CACjB,CAAC;IACJ,CAAC;IACD,UAAU,CAAC,IAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,OAAO,GAAG,YAAY,EAC3B,EAAE,IAAI,EAAE,IAAI,EAAE,EACd;YACE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,OAAO,EAAE,UAAU;SACpB,CACF,CAAC;IACJ,CAAC;IAED,UAAU;IACV,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE;YACjE,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,OAAkB;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,OAAO,GAAG,YAAY,EAC3B,EAAE,OAAO,EAAE,OAAO,EAAE,EACpB;YACE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,OAAO,EAAE,UAAU;SACpB,CACF,CAAC;IACJ,CAAC;IAED,gBAAgB,CAAC,IAAY;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,IAAI,EAAE;YACxE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;IACL,CAAC;IAED,MAAM;IACN,KAAK,CAAC,IAAI;QACR,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,IAAI,EAAE;YACjE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,OAAO,CAAC,IAAU;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5D,IAAI,GAAG;gBAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACxB,CAAC;IAED,kCAAkC;IAClC,aAAa,CAAC,IAAI;QAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,IAAI,EAAE;YACxE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,OAAO,EAAE,UAAU;SACpB,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IAClB,CAAC;;sEAzFU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA,yDAAyD;AAEd;AACQ;;AAK5C,MAAM,aAAa;IAMxB;QALQ,cAAS,GAA4B,IAAI,oDAAe,CAAC,MAAM,CAAC,CAAC;QAEjE,aAAQ,GAA6B,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,cAAS,GAA6B,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;IAEzD,CAAC;IAEhB,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IACvC,CAAC;IACD,WAAW,CAAC,IAAY;QACtB,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,6BAA6B;gBAC7B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;aAC5B,CAAC,yBAAyB;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,IAAI,IAAI,MAAM;gBAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC9C;IACH,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD,eAAe,CAAC,KAAc;QAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACD,kBAAkB,CAAC,KAAc;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IACD,kBAAkB;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IACvC,CAAC;;0EAnCU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAE7B;AAEuC;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBACN,CAAC,0DAAU;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomePageComponent },\r\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\r\n  { path: \"login\", component: LoginPageComponent },\r\n  { path: \"signup\", component: SignupPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  public constructor(private router: Router, private titleService: Title) {\r\n    this.titleService.setTitle(\"Home\");\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { CarouselModule, WavesModule } from \"angular-bootstrap-md\";\r\n\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\r\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\r\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\r\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\r\nimport { CardComponent } from \"./components/card/card.component\";\r\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\r\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\n//Services\r\nimport { StatesService } from \"./services/states.service\";\r\nimport { HttpService } from \"./services/http.service\";\r\nimport { CardsService } from \"./services/cards.service\";\r\n\r\n//Material Modules\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\r\n//Gestures\r\nimport {\r\n  HammerModule,\r\n  HammerGestureConfig,\r\n  HAMMER_GESTURE_CONFIG,\r\n} from \"@angular/platform-browser\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { LoginFormComponent } from './components/login-form/login-form.component';\r\nimport { SignupPageComponent } from './routes/signup-page/signup-page.component';\r\nimport { SignupFormComponent } from './components/signup-form/signup-form.component';\r\ndeclare var Hammer: any;\r\n//Config to allow swipe gestures on carousel\r\nexport class MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    pan: { direction: Hammer.DIRECTION_All },\r\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\r\n  };\r\n\r\n  buildHammer(element: HTMLElement) {\r\n    const mc = new Hammer(element, {\r\n      touchAction: \"auto\",\r\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\r\n        ? Hammer.PointerEventInput\r\n        : Hammer.TouchInput,\r\n      recognizers: [\r\n        [\r\n          Hammer.Swipe,\r\n          {\r\n            direction: Hammer.DIRECTION_HORIZONTAL,\r\n          },\r\n        ],\r\n      ],\r\n    });\r\n    return mc;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SearchBarComponent,\r\n    AddCardFormComponent,\r\n    CarouselComponent,\r\n    CardComponent,\r\n    AddLectureFormComponent,\r\n    LecturesComponent,\r\n    HomePageComponent,\r\n    CardsPageComponent,\r\n    UpdateCardFormComponent,\r\n    LoginPageComponent,\r\n    LoginFormComponent,\r\n    SignupPageComponent,\r\n    SignupFormComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    HammerModule,\r\n  ],\r\n  providers: [\r\n    StatesService,\r\n    HttpService,\r\n    CardsService,\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: MyHammerConfig,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\n\r\n@Component({\r\n  selector: \"app-add-card-form\",\r\n  templateUrl: \"./add-card-form.component.html\",\r\n  styleUrls: [\"./add-card-form.component.css\"]\r\n})\r\nexport class AddCardFormComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() returnCard: EventEmitter<Card> = new EventEmitter();\r\n  newCard: Card;\r\n  hidden: boolean;\r\n  Contentlength: number;\r\n  themaLength: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  setStyle() {}\r\n  onSubmit(f: NgForm) {\r\n    this.newCard = new Card(f.value.thema, f.value.content);\r\n    this.cardsService.addCard(this.newCard, this.lecture.abrv);\r\n    this.stateService.setLoadingState(true);\r\n    f.reset();\r\n  }\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        ngModel\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(content, thema)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n@Component({\r\n  selector: \"app-add-lecture-form\",\r\n  templateUrl: \"./add-lecture-form.component.html\",\r\n  styleUrls: [\"./add-lecture-form.component.css\"]\r\n})\r\nexport class AddLectureFormComponent implements OnInit {\r\n  constructor(\r\n    private http: HttpService,\r\n    private statesService: StatesService\r\n  ) {}\r\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\r\n  ngOnInit(): void {}\r\n  onSubmit(f: NgForm) {\r\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv);\r\n    this.statesService.setLoadingState(true);\r\n    this.http.addLecture(newLecture).subscribe(response => {\r\n      this.statesService.setLoadingState(false);\r\n      this.emitVl.emit(newLecture);\r\n    });\r\n\r\n    f.reset();\r\n  }\r\n\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  isDisabled(name, abrv) {\r\n    if (!name.value || !abrv.value) {\r\n      return true;\r\n    } else {\r\n      return (\r\n        abrv.value.length == 0 ||\r\n        abrv.value.length < 3 ||\r\n        abrv.value.length > 7 ||\r\n        name.value.length == 0 ||\r\n        name.value.length > 60\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div id=\"addLecture\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Vorlesung hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Vorlesungsname</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Datenstrukturen und Algorithmen\"\r\n        minlength=\"3\"\r\n        required\r\n        #name=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\r\n        >{{ getLength(name) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"abrv\">Abkürzung</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"abrv\"\r\n        name=\"abrv\"\r\n        required\r\n        #abrv=\"ngModel\"\r\n        ngModel\r\n        placeholder=\"Dsal\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\r\n        >{{ getLength(abrv) }}/7\r\n      </small>\r\n    </div>\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(name, abrv)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\nimport { Card } from \"../../models/Card\";\r\n\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.css\"]\r\n})\r\nexport class CardComponent implements OnInit {\r\n  @Input() card: Card;\r\n\r\n  constructor() {}\r\n  public isCollapsed = true;\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"card\" id=\"`{{ card._id }}`\">\r\n  <div class=\"card-header\">\r\n    {{ card.thema }}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <button\r\n      class=\"btn btn-light\"\r\n      type=\"button\"\r\n      (click)=\"isCollapsed = !isCollapsed\"\r\n    >\r\n      Mehr dazu\r\n      <i class=\"fas fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"collapse\" [ngbCollapse]=\"isCollapsed\">\r\n      <pre lang=\"de\">{{ card.content }}</pre>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\n\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { NgbCarouselConfig, NgbSlideEvent } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: \"app-carousel\",\r\n  templateUrl: \"./carousel.component.html\",\r\n  styleUrls: [\"./carousel.component.css\"],\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() setLoading: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\r\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\r\n    this.carousel.previousSlide();\r\n  }\r\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\r\n    this.carousel.nextSlide();\r\n  }\r\n  cards: Card[]; //array of all the cards\r\n  activeSlide: number = 0;\r\n  title: string;\r\n  addComponentHidden: boolean;\r\n  formShow: boolean;\r\n  formMode: string;\r\n\r\n  constructor(\r\n    config: NgbCarouselConfig,\r\n    private httpService: HttpService,\r\n    private stateService: StatesService,\r\n    private cardsService: CardsService\r\n  ) {\r\n    config.interval = -1;\r\n    config.wrap = true;\r\n    config.keyboard = true;\r\n    config.pauseOnHover = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.lecture) {\r\n      this.title = this.lecture.name;\r\n      this.httpService.getCardsFromLecture(this.lecture).subscribe((resp) => {\r\n        this.cards = resp.body;\r\n        this.cardsService.initCards(this.cards);\r\n        this.setLoading.emit(false);\r\n      }); //load the specific cards from the server by subscribing to the observable that the card-service provides\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.stateService.setFormMode(\"none\");\r\n    this.stateService.getFormMode().subscribe((mode) => {\r\n      this.formShow = mode == \"add\";\r\n      this.formMode = mode;\r\n    });\r\n\r\n    this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      if (this.carousel && this.activeSlide != index) {\r\n        this.activeSlide = index;\r\n        console.log(\"sliding\");\r\n        this.carousel.selectSlide(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  completeLoading(): void {\r\n    this.setLoading.emit(false);\r\n  }\r\n  toggleAddView(): void {\r\n    if (this.formMode != \"edit\") {\r\n      if (this.formMode == \"add\") {\r\n        this.stateService.setFormMode(\"none\");\r\n      } else {\r\n        this.stateService.setFormMode(\"add\");\r\n      }\r\n    }\r\n  }\r\n  enableEdit() {\r\n    this.stateService.setFormMode(\"edit\");\r\n  }\r\n\r\n  setClass() {\r\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\r\n  }\r\n\r\n  selectSlide(n: number) {\r\n    this.carousel.selectSlide(n.toString());\r\n  }\r\n  showRandomCard() {\r\n    var rand: number = this.activeSlide;\r\n    var count = 0;\r\n    while (count < 5 && rand == this.activeSlide) {\r\n      //calculate a new random index\r\n      count++;\r\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\r\n    }\r\n    this.carousel.selectSlide(rand.toString());\r\n  }\r\n  goToPrev() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.previousSlide();\r\n    }\r\n  }\r\n  goToNext() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.nextSlide();\r\n    }\r\n  }\r\n  onSlide(slideEvent) {\r\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\r\n  }\r\n}\r\n","<h3 id=\"vorlesung\">{{ title }}</h3>\r\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"rand\"\r\n    placement=\"top\"\r\n    ngbTooltip=\"Zufall\"\r\n    (click)=\"showRandomCard()\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n  >\r\n    <div class=\"fas fa-random\"></div>\r\n  </button>\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"editCard\"\r\n    type=\"button\"\r\n    placement=\"top\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n    (click)=\"enableEdit()\"\r\n    ngbTooltip=\"Bearbeiten\"\r\n  >\r\n    <div class=\"fas fa-pen\"></div>\r\n  </button>\r\n\r\n  <button\r\n    [ngClass]=\"setClass()\"\r\n    id=\"toggleAdd\"\r\n    type=\"button\"\r\n    data-toggle=\"button\"\r\n    (click)=\"toggleAddView()\"\r\n    placement=\"top\"\r\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\r\n  <a (click)=\"goToPrev()\">\r\n    <span class=\"fas fa-chevron-left\"></span>\r\n  </a>\r\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\r\n    <mdb-carousel\r\n      (activeSlideChange)=\"onSlide($event)\"\r\n      #mycarousel\r\n      [(activeSlideIndex)]=\"activeSlide\"\r\n      [animation]=\"'slide'\"\r\n      [isControls]=\"false\"\r\n      [allowSwipe]=\"true\"\r\n      [interval]=\"'0'\"\r\n      ><ng-container *ngFor=\"let card of cards; index as i\">\r\n        <mdb-carousel-item [id]=\"i.toString()\">\r\n          <app-card [card]=\"card\"></app-card>\r\n        </mdb-carousel-item>\r\n      </ng-container>\r\n    </mdb-carousel>\r\n  </div>\r\n  <a (click)=\"goToNext()\">\r\n    <span class=\"fas fa-chevron-right\"></span>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Card } from \"../../models/Card\";\r\n@Component({\r\n  selector: \"app-lectures\",\r\n  templateUrl: \"./lectures.component.html\",\r\n  styleUrls: [\"./lectures.component.css\"]\r\n})\r\nexport class LecturesComponent implements OnInit {\r\n  lectures: Vorlesung[];\r\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\r\n  @Input() newVl: Vorlesung;\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.httpService.getAllLectures().subscribe(resp => {\r\n      if (resp.status == 504) {\r\n        console.log(\"Server down\");\r\n        this.lectures = [];\r\n      } else {\r\n        this.lecturesLoaded.emit(true);\r\n        this.lectures = resp.body;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.newVl) {\r\n      console.log(\"got new vl: \", this.newVl);\r\n      this.lectures.push(this.newVl);\r\n    }\r\n  }\r\n  setLink(lecture: Vorlesung) {\r\n    return \"/vorlesung/\" + lecture.abrv;\r\n  }\r\n}\r\n","<ul class=\"list list-group\">\r\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\r\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-login-form\",\r\n  templateUrl: \"./login-form.component.html\",\r\n  styleUrls: [\"./login-form.component.css\"],\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  public errors;\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.http.login(form.value).subscribe(\r\n      (response) => {\r\n        if (response.status == 200) {\r\n          this.http.setUser(response.body);\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      },\r\n      (error) => {\r\n        if ((error.headers.status = 422)) {\r\n          this.errors = error.error.errors;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  isDisabled(username, password) {\r\n    if (!(username.value && password.value)) {\r\n      return true;\r\n    }\r\n    return username.value.length < 5 || password.value.length < 7;\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"username\"\r\n        required\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n      <input\r\n        required\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        id=\"remember\"\r\n        name=\"remember\"\r\n        #remember=\"ngModel\"\r\n        checked\r\n        ngModel\r\n      />\r\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, password)\"\r\n    >\r\n      Login\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { HttpService } from \"src/app/services/http.service\";\r\n\r\n@Component({\r\n  selector: \"app-nav-bar\",\r\n  templateUrl: \"./nav-bar.component.html\",\r\n  styleUrls: [\"./nav-bar.component.css\"],\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  @Input() cards: Card[];\r\n  public user: User;\r\n  public constructor(\r\n    private router: Router,\r\n    private titleService: Title,\r\n    private http: HttpService\r\n  ) {}\r\n  isActive(path: string): string {\r\n    return path === this.router.url ? \"active\" : \"\";\r\n  }\r\n  setPageTitle(): void {\r\n    let currentTitle: string;\r\n    switch (this.router.url) {\r\n      case \"/login\":\r\n        currentTitle = \"Login\";\r\n        break;\r\n      case \"/signup\":\r\n        currentTitle = \"Sign Up\";\r\n        break;\r\n      case \"/\":\r\n        currentTitle = \"Home\";\r\n        break;\r\n      default:\r\n        currentTitle = \"Cards\";\r\n    }\r\n    this.titleService.setTitle(currentTitle);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setPageTitle();\r\n    this.user = this.http.getUser();\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  role=\"alert\"\r\n  style=\"padding-right: 0;\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\" id=\"navlist\">\r\n          <li class=\"{{ isActive('/') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\r\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\r\n            >\r\n          </li>\r\n\r\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              routerLink=\"/login\"\r\n              placement=\"bottom\"\r\n              ngbTooltip=\"im Aufbau\"\r\n              ><i class=\"fas fa-user\"></i> Login</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/signup\"\r\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\r\n            <a\r\n              class=\"nav-link\"\r\n              routerLink=\"/\"\r\n              placement=\"bottom\"\r\n              ngbTooltip=\"im Aufbau\"\r\n              ><i class=\"fas fa-user-circle\"></i> Account</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\r\n      <app-search-bar [cards]=\"cards\"></app-search-bar>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\r\n\r\n@Component({\r\n  selector: \"app-search-bar\",\r\n  templateUrl: \"./search-bar.component.html\",\r\n  styleUrls: [\"./search-bar.component.css\"]\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n  @Input() cards: Card[];\r\n  suggestions: SearchSuggestion[];\r\n  uInput: string;\r\n  clearSuggestions: boolean;\r\n  ngOnInit(): void {\r\n    this.stateService.getHideSuggestions().subscribe(value => {\r\n      this.clearSuggestions = value;\r\n      if (value) {\r\n        this.suggestions = [];\r\n      }\r\n    });\r\n  }\r\n  ngOnChanges(): void {\r\n    if (this.cardsService.getCards()) {\r\n      this.cardsService.getCards().subscribe(cards => {\r\n        this.cards = cards;\r\n        cards.forEach(card => {\r\n          if (card.thema == null) {\r\n            card.thema = \"\";\r\n          }\r\n          if (card.content == null) {\r\n            card.content = \"\";\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  findMatches(e: Event) {\r\n    this.stateService.setHideSuggestions(false); //show suggestions\r\n    if (this.uInput && this.uInput.length > 2) {\r\n      this.suggestions = [];\r\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\r\n\r\n      for (let i = 0; i < this.cards.length; i++) {\r\n        if (this.cards[i].thema.match(regex)) {\r\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  navigateTo(e: Event, index: number) {\r\n    e.preventDefault();\r\n    console.log(\"index: \", index);\r\n    this.cardsService.setNewCardIndex(index);\r\n  }\r\n}\r\n","<input\r\n  [(ngModel)]=\"uInput\"\r\n  (input)=\"findMatches($event)\"\r\n  class=\"form-control float-right\"\r\n  id=\"search\"\r\n  type=\"search\"\r\n  placeholder=\"Thema suchen\"\r\n/>\r\n<div *ngIf=\"suggestions\" id=\"matches\">\r\n  <ul class=\"list-group\">\r\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\r\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\r\n        suggestion.title\r\n      }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-signup-form\",\r\n  templateUrl: \"./signup-form.component.html\",\r\n  styleUrls: [\"./signup-form.component.css\"],\r\n})\r\nexport class SignupFormComponent implements OnInit {\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  errors;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.http.createAccount(form.value).subscribe(\r\n      (response) => {\r\n        if (response.status == 200) {\r\n          this.http.login(response.body).subscribe((user) => {\r\n            if (user) {\r\n              this.http.setUser(response.body);\r\n              this.router.navigate([\"/\"]);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        if ((error.headers.status = 422)) {\r\n          console.log(error);\r\n          this.errors = error.error.errors;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  isDisabled(username, email, password, password2) {\r\n    if (!(username.value && email.value && password.value)) {\r\n      return true;\r\n    }\r\n    return (\r\n      username.value.length < 5 ||\r\n      password.value.length < 7 ||\r\n      password.value != password2.value ||\r\n      !this.checkEmail(email.value)\r\n    );\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        required\r\n        maxlength=\"20\"\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email Adresse</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        aria-describedby=\"emailHelp\"\r\n        required\r\n        #email=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n      />\r\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort wiederholen</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password2\"\r\n        id=\"password2\"\r\n        #password2=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n        [style]=\"setStyle(password, password2)\"\r\n      />\r\n      <small class=\"form-text\"> </small>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, email, password, password2)\"\r\n    >\r\n      Account erstellen\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-update-card-form\",\r\n  templateUrl: \"./update-card-form.component.html\",\r\n  styleUrls: [\"./update-card-form.component.css\"]\r\n})\r\nexport class UpdateCardFormComponent implements OnInit {\r\n  @Input() lecture: Vorlesung;\r\n  @Output() returnCard: EventEmitter<Card> = new EventEmitter();\r\n  public cardCopy: Card = { thema: \"\", content: \"\" };\r\n  private cards: Card[];\r\n\r\n  private cardIndex: number;\r\n  private activeCardIndex: number;\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private httpService: HttpService,\r\n    private statesService: StatesService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cardsService.getCards().subscribe(cards => (this.cards = cards));\r\n    this.cardsService\r\n      .getActiveCardIndex()\r\n      .subscribe(index => (this.activeCardIndex = index));\r\n\r\n    this.cardCopy = { ...this.cards[this.activeCardIndex] };\r\n    this.cardIndex = this.activeCardIndex;\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n    this.statesService.setLoadingState(true);\r\n    this.cardCopy.content = f.value.content;\r\n    this.cardCopy.thema = f.value.thema;\r\n\r\n    this.cards[this.cardIndex] = { ...this.cardCopy };\r\n\r\n    this.cardsService.updateCard(\r\n      this.cards[this.cardIndex],\r\n      this.lecture.abrv,\r\n      this.cardIndex\r\n    );\r\n    f.reset();\r\n  }\r\n  cancelEdit() {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: \"400px\"\r\n    });\r\n  }\r\n\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\"\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"dialog-overview-example-dialog\",\r\n  templateUrl: \"dialog.html\"\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private service: StatesService\r\n  ) {}\r\n\r\n  cancel() {\r\n    this.service.setFormMode(\"reset\");\r\n\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte bearbeiten</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Überschrift</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.thema\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Informationen</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.content\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        class=\"btn btn-success mb-2 mr-1\"\r\n        type=\"submit\"\r\n        value=\"Sichern\"\r\n        [disabled]=\"isDisabled(content, thema)\"\r\n      />\r\n      <input\r\n        class=\"btn btn-danger mb-2\"\r\n        type=\"button\"\r\n        value=\"Abbruch\"\r\n        (click)=\"cancelEdit()\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n","<h1 mat-dialog-title>Abbruch</h1>\r\n<div mat-dialog-content>\r\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\r\n</div>\r\n<hr />\r\n<div mat-dialog-actions style=\"text-align: right;\">\r\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\r\n    Nein,zurück\r\n  </button>\r\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\r\n</div>\r\n","export class Card {\r\n  _id?: string;\r\n  thema: string;\r\n  content: string;\r\n  abrv?: string;\r\n  constructor(thema, content) {\r\n    this.thema = thema;\r\n    this.content = content;\r\n  }\r\n}\r\n","export class Vorlesung {\r\n  name: string;\r\n  abrv: string;\r\n  constructor(name, abrv) {\r\n    this.name = name;\r\n    this.abrv = abrv;\r\n  }\r\n}\r\n","import { Component, OnInit, HostListener } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { HttpService } from \"../../services/http.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n@Component({\r\n  selector: \"app-cards-page\",\r\n  templateUrl: \"./cards-page.component.html\",\r\n  styleUrls: [\"./cards-page.component.css\"],\r\n})\r\nexport class CardsPageComponent implements OnInit {\r\n  public vlAbrv: string;\r\n  public ativeCard: number;\r\n  public lecture: Vorlesung;\r\n  public loading: boolean = true;\r\n  public formMode: string = \"none\";\r\n  public cards: Card[];\r\n  @HostListener(\"click\", [\"$event.target\"])\r\n  onClick() {\r\n    this.stateServie.setHideSuggestions(true);\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private httpService: HttpService,\r\n    private stateServie: StatesService,\r\n    private cardsService: CardsService,\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.title.setTitle(\"Cards\");\r\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\r\n    this.httpService.getLectureByAbrv(this.vlAbrv).subscribe((resp) => {\r\n      if (resp.status == 504) {\r\n        console.log(\"Server offline\");\r\n      } else {\r\n        this.lecture = resp.body;\r\n        this.httpService.getCardsFromLecture(this.lecture).subscribe((resp) => {\r\n          this.cardsService.initCards(resp.body);\r\n          this.cards = resp.body;\r\n        });\r\n      }\r\n    });\r\n    this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      this.ativeCard = index;\r\n    });\r\n    this.stateServie\r\n      .getLoadingState()\r\n      .subscribe((value) => (this.loading = value));\r\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\r\n  }\r\n\r\n  setLoading(loading: boolean): void {\r\n    this.loading = loading;\r\n    this.stateServie.setLoadingState(loading);\r\n  }\r\n}\r\n","<app-nav-bar [cards]=\"cards\"></app-nav-bar>\r\n<div id=\"progress\">\r\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n<br />\r\n<div class=\"container\">\r\n  <app-carousel\r\n    (setLoading)=\"setLoading($event)\"\r\n    [lecture]=\"lecture\"\r\n  ></app-carousel>\r\n  <br />\r\n  <app-add-card-form\r\n    *ngIf=\"formMode == 'add'\"\r\n    [lecture]=\"lecture\"\r\n  ></app-add-card-form>\r\n  <app-update-card-form\r\n    *ngIf=\"formMode == 'edit'\"\r\n    [lecture]=\"lecture\"\r\n  ></app-update-card-form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"]\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  public loaded: boolean = false;\r\n  public newVl: Vorlesung;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n  setLoaded(loaded: boolean): void {\r\n    this.loaded = loaded;\r\n  }\r\n  emitVl(lecture: Vorlesung) {\r\n    console.log(\"vl: \", lecture);\r\n    this.newVl = lecture;\r\n  }\r\n}\r\n","<app-nav-bar [cards]=\"undefined\"></app-nav-bar>\r\n<mat-progress-bar *ngIf=\"!loaded\" mode=\"indeterminate\"></mat-progress-bar>\r\n<div class=\"container\">\r\n  <app-lectures\r\n    (lecturesLoaded)=\"setLoaded($event)\"\r\n    [newVl]=\"newVl\"\r\n  ></app-lectures>\r\n  <br />\r\n  <app-add-lecture-form (emitVl)=\"emitVl($event)\"></app-add-lecture-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div>\r\n  <app-login-form></app-login-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div>\r\n  <app-signup-form></app-signup-form>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { Subject, Observable, BehaviorSubject, of } from \"rxjs\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\nimport { StatesService } from \"./states.service\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class CardsService {\r\n  private cards$: BehaviorSubject<Card[]>;\r\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\r\n    0\r\n  );\r\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\r\n    number\r\n  >(0);\r\n  private cards: Card[];\r\n\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private statesService: StatesService\r\n  ) {}\r\n\r\n  getCards(): Observable<Card[]> {\r\n    if (this.cards$) {\r\n      return this.cards$.asObservable();\r\n    } else {\r\n      console.log(\"requesting uninitialized cards array, returning []\");\r\n      return of([]);\r\n    }\r\n  }\r\n\r\n  initCards(cards: Card[]) {\r\n    this.cards$ = new BehaviorSubject<Card[]>(cards);\r\n    this.cards = cards;\r\n  }\r\n  updateCards(cards: Card[]) {\r\n    this.cards$.next(cards);\r\n  }\r\n  updateCard(card: Card, vlAbrv: string, index: number) {\r\n    if (!card.abrv) {\r\n      card.abrv = vlAbrv;\r\n    }\r\n    this.httpService.updateCard(card).subscribe(resp => {\r\n      this.statesService.setLoadingState(false);\r\n      this.statesService.setFormMode(\"reset\");\r\n      this.cards[index] = card;\r\n      this.updateCards(this.cards);\r\n    });\r\n  }\r\n  addCard(card: Card, vlAbrv: string) {\r\n    if (!this.cards) {\r\n      this.cards$.subscribe(cards => (this.cards = cards));\r\n    }\r\n\r\n    this.httpService.addCard(card, vlAbrv).subscribe(response => {\r\n      this.statesService.setLoadingState(false);\r\n      card._id = response.body;\r\n      this.cards.push(card);\r\n      this.updateCards(this.cards);\r\n    });\r\n  }\r\n  getNewCardIndex(): Observable<number> {\r\n    return this.newCardIndex$.asObservable();\r\n  }\r\n  setNewCardIndex(i: number) {\r\n    console.log(i);\r\n    this.newCardIndex$.next(i);\r\n  }\r\n  setActiveCardIndex(i: number) {\r\n    this.activeCardIndex$.next(i);\r\n  }\r\n  getActiveCardIndex(): Observable<number> {\r\n    return this.activeCardIndex$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\n\r\n//Models\r\nimport { User } from \"../models/User\";\r\nimport { Card } from \"../models/Card\";\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class HttpService {\r\n  private urlBase: string = \"api/\";\r\n  private user: User;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Cards\r\n  getCardsFromLecture(lecture: Vorlesung): Observable<HttpResponse<Card[]>> {\r\n    return this.http.get<Card[]>(\r\n      this.urlBase + \"getCards/?abrv=\" + lecture.abrv,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n\r\n  addCard(card: Card, vlAbrv: string): Observable<HttpResponse<any>> {\r\n    //Cards müssen richtig im Frontend definiert werden\r\n    return this.http.post<any>(\r\n      this.urlBase + \"addCard\",\r\n      { card: card, abrv: vlAbrv },\r\n      this.httpOptions\r\n    );\r\n  }\r\n  updateCard(card: Card): Observable<HttpResponse<any>> {\r\n    return this.http.put<any>(\r\n      this.urlBase + \"updateCard\",\r\n      { card: card },\r\n      {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      }\r\n    );\r\n  }\r\n\r\n  //Lectures\r\n  getAllLectures(): Observable<HttpResponse<Vorlesung[]>> {\r\n    return this.http.get<Vorlesung[]>(this.urlBase + \"getAllLectures\", {\r\n      observe: \"response\",\r\n    });\r\n  }\r\n\r\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\r\n    return this.http.post<any>(\r\n      this.urlBase + \"addLecture\",\r\n      { lecture: lecture },\r\n      {\r\n        headers: this.httpOptions.headers,\r\n        observe: \"response\",\r\n      }\r\n    );\r\n  }\r\n\r\n  getLectureByAbrv(abrv: string): Observable<HttpResponse<Vorlesung>> {\r\n    return this.http.get<Vorlesung>(this.urlBase + \"getLecture?abrv=\" + abrv, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\",\r\n    });\r\n  }\r\n\r\n  //User\r\n  login(form): Observable<HttpResponse<User>> {\r\n    let response$ = this.http.post<User>(this.urlBase + \"login\", form, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\",\r\n    });\r\n    return response$;\r\n  }\r\n  setUser(user: User) {\r\n    this.user = user;\r\n  }\r\n  getUser(): User {\r\n    return this.user;\r\n  }\r\n  logout() {\r\n    this.http.get<any>(this.urlBase + \"logout\").subscribe((err) => {\r\n      if (err) console.log(err);\r\n    });\r\n    this.user = undefined;\r\n  }\r\n\r\n  //form = {username,email,password}\r\n  createAccount(form): Observable<HttpResponse<User>> {\r\n    let response = this.http.post<User>(this.urlBase + \"createAccount\", form, {\r\n      headers: this.httpOptions.headers,\r\n      observe: \"response\",\r\n    });\r\n    return response;\r\n  }\r\n}\r\n","//This service is made to manage states across components\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class StatesService {\r\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\r\n  private lastFormMode: string;\r\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  constructor() {}\r\n\r\n  getFormMode(): Observable<string> {\r\n    return this.formMode$.asObservable();\r\n  }\r\n  setFormMode(mode: string): void {\r\n    if (mode == \"reset\") {\r\n      if (!this.lastFormMode) {\r\n        //last form mode is undefined\r\n        this.lastFormMode = \"none\";\r\n      } // last Form mode defined\r\n      this.formMode$.next(this.lastFormMode);\r\n    } else {\r\n      this.formMode$.next(mode);\r\n      if (mode != \"edit\") this.lastFormMode = mode;\r\n    }\r\n  }\r\n\r\n  getLoadingState(): BehaviorSubject<boolean> {\r\n    return this.loading$;\r\n  }\r\n  setLoadingState(value: boolean) {\r\n    this.loading$.next(value);\r\n  }\r\n  setHideSuggestions(value: boolean) {\r\n    this.hideSgtn$.next(value);\r\n  }\r\n  getHideSuggestions(): Observable<boolean> {\r\n    return this.hideSgtn$.asObservable();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport \"hammerjs\";\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"sourceRoot":"webpack:///"}