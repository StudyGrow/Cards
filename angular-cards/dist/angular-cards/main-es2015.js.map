<<<<<<< HEAD
{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-card-form/add-card-form.component.ts","./src/app/components/add-card-form/add-card-form.component.html","./src/app/components/add-lecture-form/add-lecture-form.component.ts","./src/app/components/add-lecture-form/add-lecture-form.component.html","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/carousel/carousel.component.ts","./src/app/components/carousel/carousel.component.html","./src/app/components/lectures/lectures.component.ts","./src/app/components/lectures/lectures.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/signup-form/signup-form.component.ts","./src/app/components/signup-form/signup-form.component.html","./src/app/components/update-card-form/update-card-form.component.ts","./src/app/components/update-card-form/update-card-form.component.html","./src/app/components/update-card-form/dialog.html","./src/app/models/Card.ts","./src/app/models/Vorlesung.ts","./src/app/routes/cards-page/cards-page.component.ts","./src/app/routes/cards-page/cards-page.component.html","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/home-page.component.html","./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/signup-page/signup-page.component.ts","./src/app/routes/signup-page/signup-page.component.html","./src/app/services/cards.service.ts","./src/app/services/http.service.ts","./src/app/services/states.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\n  { path: \"login\", component: LoginPageComponent },\n  { path: \"signup\", component: SignupPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  public constructor(private router: Router, private titleService: Title) {\n    this.titleService.setTitle(\"Home\");\n  }\n}\n","<router-outlet></router-outlet>\n","//Modules\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { CarouselModule, WavesModule } from \"angular-bootstrap-md\";\n\n//Components\nimport { AppComponent } from \"./app.component\";\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\nimport { CardComponent } from \"./components/card/card.component\";\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\n//Services\nimport { StatesService } from \"./services/states.service\";\nimport { HttpService } from \"./services/http.service\";\nimport { CardsService } from \"./services/cards.service\";\n\n//Material Modules\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\n//Gestures\nimport {\n  HammerModule,\n  HammerGestureConfig,\n  HAMMER_GESTURE_CONFIG,\n} from \"@angular/platform-browser\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\nimport { StoreModule } from \"@ngrx/store\";\ndeclare var Hammer: any;\n//Config to allow swipe gestures on carousel\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = <any>{\n    pan: { direction: Hammer.DIRECTION_All },\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\n  };\n\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: \"auto\",\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\n        ? Hammer.PointerEventInput\n        : Hammer.TouchInput,\n      recognizers: [\n        [\n          Hammer.Swipe,\n          {\n            direction: Hammer.DIRECTION_HORIZONTAL,\n          },\n        ],\n      ],\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SearchBarComponent,\n    AddCardFormComponent,\n    CarouselComponent,\n    CardComponent,\n    AddLectureFormComponent,\n    LecturesComponent,\n    HomePageComponent,\n    CardsPageComponent,\n    UpdateCardFormComponent,\n    LoginPageComponent,\n    LoginFormComponent,\n    SignupPageComponent,\n    SignupFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    CarouselModule,\n    WavesModule,\n    HammerModule,\n    StoreModule.forRoot({}, {}),\n  ],\n  providers: [\n    StatesService,\n    HttpService,\n\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-add-card-form\",\n  templateUrl: \"./add-card-form.component.html\",\n  styleUrls: [\"./add-card-form.component.css\"],\n})\nexport class AddCardFormComponent implements OnInit {\n  lecture: Vorlesung;\n  newCard: Card;\n  hidden: boolean;\n  Contentlength: number;\n  themaLength: number;\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.http\n      .getCurrentLecture()\n      .subscribe((lecture) => (this.lecture = lecture));\n  }\n  setStyle() {}\n  onSubmit(f: NgForm) {\n    this.newCard = new Card(f.value.thema, f.value.content, this.lecture.abrv);\n    this.cardsService.addCard(this.newCard).subscribe((res) => {\n      f.reset();\n    });\n  }\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        ngModel\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(content, thema)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\n@Component({\n  selector: \"app-add-lecture-form\",\n  templateUrl: \"./add-lecture-form.component.html\",\n  styleUrls: [\"./add-lecture-form.component.css\"]\n})\nexport class AddLectureFormComponent implements OnInit {\n  constructor(\n    private http: HttpService,\n    private statesService: StatesService\n  ) {}\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\n  ngOnInit(): void {}\n  onSubmit(f: NgForm) {\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv);\n    this.statesService.setLoadingState(true);\n    this.http.addLecture(newLecture).subscribe(response => {\n      this.statesService.setLoadingState(false);\n      this.emitVl.emit(newLecture);\n    });\n\n    f.reset();\n  }\n\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  isDisabled(name, abrv) {\n    if (!name.value || !abrv.value) {\n      return true;\n    } else {\n      return (\n        abrv.value.length == 0 ||\n        abrv.value.length < 3 ||\n        abrv.value.length > 7 ||\n        name.value.length == 0 ||\n        name.value.length > 60\n      );\n    }\n  }\n}\n","<div id=\"addLecture\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Vorlesung hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"name\">Vorlesungsname</label>\n      <input\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Datenstrukturen und Algorithmen\"\n        minlength=\"3\"\n        required\n        #name=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\n        >{{ getLength(name) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"abrv\">Abkürzung</label>\n      <input\n        class=\"form-control\"\n        id=\"abrv\"\n        name=\"abrv\"\n        required\n        #abrv=\"ngModel\"\n        ngModel\n        placeholder=\"Dsal\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\n        >{{ getLength(abrv) }}/7\n      </small>\n    </div>\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(name, abrv)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Card } from \"../../models/Card\";\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"]\n})\nexport class CardComponent implements OnInit {\n  @Input() card: Card;\n\n  constructor() {}\n  public isCollapsed = true;\n  ngOnInit(): void {}\n}\n","<div class=\"card\" id=\"`{{ card._id }}`\">\n  <div class=\"card-header\">\n    {{ card.thema }}\n  </div>\n  <div class=\"card-body\">\n    <button\n      class=\"btn btn-light\"\n      type=\"button\"\n      (click)=\"isCollapsed = !isCollapsed\"\n    >\n      Mehr dazu\n      <i class=\"fas fa-caret-down\"></i>\n    </button>\n    <div class=\"collapse\" [ngbCollapse]=\"isCollapsed\">\n      <pre lang=\"de\">{{ card.content }}</pre>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { NgbCarouselConfig, NgbSlideEvent } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrls: [\"./carousel.component.css\"],\n})\nexport class CarouselComponent implements OnInit {\n  lecture: Vorlesung;\n\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\n    this.carousel.previousSlide();\n  }\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\n    this.carousel.nextSlide();\n  }\n  cards: Card[]; //array of all the cards\n  activeSlide: number = 0;\n  title: string;\n  addComponentHidden: boolean;\n  formShow: boolean;\n  formMode: string;\n\n  constructor(\n    config: NgbCarouselConfig,\n    private httpService: HttpService,\n    private stateService: StatesService,\n    private cardsService: CardsService\n  ) {\n    config.interval = -1;\n    config.wrap = true;\n    config.keyboard = true;\n    config.pauseOnHover = false;\n  }\n\n  ngOnInit(): void {\n    this.httpService.getCurrentLecture().subscribe((lecture) => {\n      this.lecture = lecture;\n      this.title = this.lecture.name;\n      this.cardsService.getCards(lecture).subscribe((cards) => {\n        this.cards = cards;\n      }); //load the specific cards from the server by subscribing to the observable that the card-service provides\n    });\n    this.stateService.setFormMode(\"none\");\n    this.stateService.getFormMode().subscribe((mode) => {\n      this.formShow = mode == \"add\";\n      this.formMode = mode;\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      if (this.carousel && this.activeSlide != index) {\n        this.activeSlide = index;\n        this.carousel.selectSlide(index);\n      }\n    });\n  }\n\n  toggleAddView(): void {\n    if (this.formMode != \"edit\") {\n      if (this.formMode == \"add\") {\n        this.stateService.setFormMode(\"none\");\n      } else {\n        this.stateService.setFormMode(\"add\");\n      }\n    }\n  }\n  enableEdit() {\n    this.stateService.setFormMode(\"edit\");\n  }\n\n  setClass() {\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\n  }\n\n  selectSlide(n: number) {\n    this.carousel.selectSlide(n.toString());\n  }\n  showRandomCard() {\n    var rand: number = this.activeSlide;\n    var count = 0;\n    while (count < 5 && rand == this.activeSlide) {\n      //calculate a new random index\n      count++;\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\n    }\n    this.carousel.selectSlide(rand.toString());\n  }\n  goToPrev() {\n    if (this.formMode != \"edit\") {\n      this.carousel.previousSlide();\n    }\n  }\n  goToNext() {\n    if (this.formMode != \"edit\") {\n      this.carousel.nextSlide();\n    }\n  }\n  onSlide(slideEvent) {\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\n  }\n}\n","<h3 id=\"vorlesung\">{{ title }}</h3>\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\n  <button\n    class=\"btn btn-light\"\n    id=\"rand\"\n    placement=\"top\"\n    ngbTooltip=\"Zufall\"\n    (click)=\"showRandomCard()\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n  >\n    <div class=\"fas fa-random\"></div>\n  </button>\n  <button\n    class=\"btn btn-light\"\n    id=\"editCard\"\n    type=\"button\"\n    placement=\"top\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n    (click)=\"enableEdit()\"\n    ngbTooltip=\"Bearbeiten\"\n  >\n    <div class=\"fas fa-pen\"></div>\n  </button>\n\n  <button\n    [ngClass]=\"setClass()\"\n    id=\"toggleAdd\"\n    type=\"button\"\n    data-toggle=\"button\"\n    (click)=\"toggleAddView()\"\n    placement=\"top\"\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\n    [disabled]=\"formMode == 'edit'\"\n  >\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\n  </button>\n</div>\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\n  <a (click)=\"goToPrev()\">\n    <span class=\"fas fa-chevron-left\"></span>\n  </a>\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\n    <mdb-carousel\n      (activeSlideChange)=\"onSlide($event)\"\n      #mycarousel\n      [(activeSlideIndex)]=\"activeSlide\"\n      [animation]=\"'slide'\"\n      [isControls]=\"false\"\n      [allowSwipe]=\"true\"\n      [interval]=\"'0'\"\n      ><ng-container *ngFor=\"let card of cards; index as i\">\n        <mdb-carousel-item [id]=\"i.toString()\">\n          <app-card [card]=\"card\"></app-card>\n        </mdb-carousel-item>\n      </ng-container>\n    </mdb-carousel>\n  </div>\n  <a (click)=\"goToNext()\">\n    <span class=\"fas fa-chevron-right\"></span>\n  </a>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\n@Component({\n  selector: \"app-lectures\",\n  templateUrl: \"./lectures.component.html\",\n  styleUrls: [\"./lectures.component.css\"],\n})\nexport class LecturesComponent implements OnInit {\n  lectures: Vorlesung[];\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\n  @Input() newVl: Vorlesung;\n\n  constructor(private httpService: HttpService) {}\n\n  ngOnInit(): void {\n    this.httpService.getAllLectures().subscribe((lectures) => {\n      this.lectures = lectures;\n    });\n  }\n\n  ngOnChanges() {\n    if (this.newVl) {\n      console.log(\"got new vl: \", this.newVl);\n      this.lectures.push(this.newVl);\n    }\n  }\n  setLink(lecture: Vorlesung) {\n    return \"/vorlesung/\" + lecture.abrv;\n  }\n}\n","<ul class=\"list list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\n  </li>\n</ul>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-login-form\",\n  templateUrl: \"./login-form.component.html\",\n  styleUrls: [\"./login-form.component.css\"],\n})\nexport class LoginFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  public errors;\n\n  ngOnInit(): void {\n  \n  }\n  submit(form: NgForm) {\n    this.http.login(form.value).subscribe(\n      (response) => {\n        if (response.status == 200) {\n          this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n\n  isDisabled(username, password) {\n    if (!(username.value && password.value)) {\n      return true;\n    }\n    return username.value.length < 5 || password.value.length < 7;\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"username\"\n        required\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        required\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"remember\"\n        name=\"remember\"\n        #remember=\"ngModel\"\n        [checked]=\"true\"\n        ngModel\n      />\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, password)\"\n    >\n      Login\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { Router } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\nimport { User } from \"src/app/models/User\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { StatesService } from \"src/app/services/states.service\";\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"],\n})\nexport class NavBarComponent implements OnInit {\n  public user: User;\n  public cards: Card[];\n  private lecture: Vorlesung;\n  public loading: boolean = false;\n  public constructor(\n    private router: Router,\n    private titleService: Title,\n    private http: HttpService,\n    private cardsService: CardsService,\n    private statesService: StatesService\n  ) {}\n\n  ngOnInit(): void {\n    this.setPageTitle();\n    this.user = this.http.getUser();\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n    if (\n      this.router.url != \"/\" &&\n      this.router.url != \"/login\" &&\n      this.router.url != \"/signup\"\n    )\n      this.http.getCurrentLecture().subscribe((lect) => {\n        this.lecture = lect;\n        this.cardsService.getCards(lect).subscribe((cards) => {\n          this.cards = cards;\n        });\n      });\n  }\n\n  isActive(path: string): string {\n    return path === this.router.url ? \"active\" : \"\";\n  }\n  setPageTitle(): void {\n    let currentTitle: string;\n    switch (this.router.url) {\n      case \"/login\":\n        currentTitle = \"Login\";\n        break;\n      case \"/signup\":\n        currentTitle = \"Sign Up\";\n        break;\n      case \"/\":\n        currentTitle = \"Home\";\n        break;\n      default:\n        currentTitle = \"Cards\";\n    }\n    this.titleService.setTitle(currentTitle);\n  }\n  logout() {\n    this.http.logout();\n    this.user = null;\n    this.router.navigate([\"/\"]);\n  }\n}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\n  role=\"alert\"\n  style=\"padding-right: 0;\"\n>\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\" id=\"navlist\">\n          <li class=\"{{ isActive('/') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\n            >\n          </li>\n\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\"\n              ><i class=\"fas fa-user\"></i> Login</a\n            >\n          </li>\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\"\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\n            >\n          </li>\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\n            <div class=\"dropdown\">\n              <a\n                class=\"nav-link\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-user-circle\"></i> Account\n              </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a\n                  class=\"dropdown-item disabled\"\n                  href=\"#\"\n                  placement=\"bottom\"\n                  ngbTooltip=\"im Aufbau\"\n                  >Account management</a\n                >\n                <a class=\"dropdown-item\" (click)=\"logout()\">\n                  Logout\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\n      <app-search-bar></app-search-bar>\n    </div>\n  </div>\n</nav>\n<div id=\"progress\">\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"],\n})\nexport class SearchBarComponent implements OnInit {\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n  cards: Card[];\n  suggestions: SearchSuggestion[];\n  uInput: string;\n  clearSuggestions: boolean;\n  lecture: Vorlesung;\n  ngOnInit(): void {\n    this.stateService.getHideSuggestions().subscribe((value) => {\n      this.clearSuggestions = value;\n      if (value) {\n        this.suggestions = [];\n      }\n    });\n  }\n  ngOnChanges(): void {\n    //put these into ngOnInit\n    if (this.http.getCurrentLecture()) {\n      this.http.getCurrentLecture().subscribe((vl) => (this.lecture = vl));\n    }\n    if (this.cardsService.getCards(this.lecture)) {\n      this.cardsService.getCards(this.lecture).subscribe((cards) => {\n        this.cards = cards;\n        cards.forEach((card) => {\n          if (card.thema == null) {\n            card.thema = \"\";\n          }\n          if (card.content == null) {\n            card.content = \"\";\n          }\n        });\n      });\n    }\n  }\n\n  findMatches(e: Event) {\n    this.stateService.setHideSuggestions(false); //show suggestions\n    if (this.uInput && this.uInput.length > 2) {\n      this.suggestions = [];\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\n\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].thema.match(regex)) {\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\n        }\n      }\n    }\n  }\n  navigateTo(e: Event, index: number) {\n    e.preventDefault();\n\n    this.cardsService.setNewCardIndex(index);\n  }\n}\n","<input\n  [(ngModel)]=\"uInput\"\n  (input)=\"findMatches($event)\"\n  class=\"form-control float-right\"\n  id=\"search\"\n  type=\"search\"\n  placeholder=\"Thema suchen\"\n/>\n<div *ngIf=\"suggestions\" id=\"matches\">\n  <ul class=\"list-group\">\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\n        suggestion.title\n      }}</a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-signup-form\",\n  templateUrl: \"./signup-form.component.html\",\n  styleUrls: [\"./signup-form.component.css\"],\n})\nexport class SignupFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.http.createAccount(form.value).subscribe(\n      (response) => {\n        if (response) {\n              this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          console.log(error);\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n  setStyle(password, password2) {\n    if (\n      password2.value &&\n      password2.value.length > 5 &&\n      password2.value != password.value\n    ) {\n      return \"box-shadow:0 0 3px #CC0000;\";\n    }\n    return \"\";\n  }\n  checkEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    }\n\n    return false;\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  isDisabled(username, email, password, password2) {\n    if (!(username.value && email.value && password.value)) {\n      return true;\n    }\n    return (\n      username.value.length < 5 ||\n      password.value.length < 7 ||\n      password.value != password2.value ||\n      !this.checkEmail(email.value)\n    );\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        required\n        maxlength=\"20\"\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email Adresse</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        name=\"email\"\n        id=\"email\"\n        aria-describedby=\"emailHelp\"\n        required\n        #email=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n      />\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort wiederholen</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password2\"\n        id=\"password2\"\n        #password2=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n        [style]=\"setStyle(password, password2)\"\n      />\n      <small class=\"form-text\"> </small>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, email, password, password2)\"\n    >\n      Account erstellen\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-update-card-form\",\n  templateUrl: \"./update-card-form.component.html\",\n  styleUrls: [\"./update-card-form.component.css\"],\n})\nexport class UpdateCardFormComponent implements OnInit {\n  public cardCopy: Card;\n  private cards: Card[];\n  public lecture: Vorlesung;\n  private cardIndex: number;\n  private activeCardIndex: number;\n  constructor(\n    private cardsService: CardsService,\n    private httpService: HttpService,\n    private statesService: StatesService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.httpService.getCurrentLecture().subscribe((vl) => {\n      this.lecture = vl;\n      this.cardsService.getCards(this.lecture).subscribe((cards) => {\n        this.cards = cards;\n        this.cardsService.getActiveCardIndex().subscribe((index) => {\n          this.activeCardIndex = index;\n          this.cardCopy = { ...this.cards[this.activeCardIndex] };\n          this.cardIndex = this.activeCardIndex;\n        });\n      });\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    this.cardCopy.content = f.value.content;\n    this.cardCopy.thema = f.value.thema;\n    this.cardsService.updateCard({ ...this.cardCopy }, this.cardIndex);\n    f.reset();\n  }\n  cancelEdit() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: \"400px\",\n    });\n  }\n\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n@Component({\n  selector: \"dialog-overview-example-dialog\",\n  templateUrl: \"dialog.html\",\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    private service: StatesService\n  ) {}\n\n  cancel() {\n    this.service.setFormMode(\"reset\");\n\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte bearbeiten</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        [(ngModel)]=\"cardCopy.thema\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        [(ngModel)]=\"cardCopy.content\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <input\n        class=\"btn btn-success mb-2 mr-1\"\n        type=\"submit\"\n        value=\"Sichern\"\n        [disabled]=\"isDisabled(content, thema)\"\n      />\n      <input\n        class=\"btn btn-danger mb-2\"\n        type=\"button\"\n        value=\"Abbruch\"\n        (click)=\"cancelEdit()\"\n      />\n    </div>\n  </form>\n</div>\n","<h1 mat-dialog-title>Abbruch</h1>\n<div mat-dialog-content>\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\n</div>\n<hr />\n<div mat-dialog-actions style=\"text-align: right;\">\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\n    Nein,zurück\n  </button>\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\n</div>\n","export class Card {\n  _id?: string;\n  thema: string;\n  content: string;\n  abrv: string;\n  constructor(thema, content, abrv) {\n    this.thema = thema;\n    this.content = content;\n    this.abrv = abrv;\n  }\n}\n","export class Vorlesung {\n  name: string;\n  abrv: string;\n  constructor(name, abrv) {\n    this.name = name;\n    this.abrv = abrv;\n  }\n}\n","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Title } from \"@angular/platform-browser\";\n@Component({\n  selector: \"app-cards-page\",\n  templateUrl: \"./cards-page.component.html\",\n  styleUrls: [\"./cards-page.component.css\"],\n})\nexport class CardsPageComponent implements OnInit {\n  public vlAbrv: string;\n  public ativeCard: number;\n  public lecture: Vorlesung;\n  public loading: boolean = true;\n  public formMode: string = \"none\";\n  public cards: Card[];\n  @HostListener(\"click\", [\"$event.target\"])\n  onClick() {\n    this.stateServie.setHideSuggestions(true);\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private httpService: HttpService,\n    private stateServie: StatesService,\n    private cardsService: CardsService,\n    private title: Title\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Cards\");\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\n    this.httpService.getCurrentLecture().subscribe((vl) => {\n      this.lecture = vl;\n      this.cardsService.getCards(this.lecture).subscribe((cards) => {\n        this.cards = cards;\n\n        if (this.cards.length == 0) {\n          this.stateServie.setFormMode(\"add\");\n        }\n      });\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      this.ativeCard = index;\n    });\n    this.stateServie\n      .getLoadingState()\n      .subscribe((value) => (this.loading = value));\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\n  }\n\n  setLoading(loading: boolean): void {\n    this.loading = loading;\n    this.stateServie.setLoadingState(loading);\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<br />\n<div class=\"container\">\n  <app-carousel></app-carousel>\n  <br />\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { StatesService } from \"../../services/states.service\";\nimport { from } from \"rxjs\";\n@Component({\n  selector: \"app-home-page\",\n  templateUrl: \"./home-page.component.html\",\n  styleUrls: [\"./home-page.component.css\"],\n})\nexport class HomePageComponent implements OnInit {\n  public loading: boolean = false;\n  public newVl: Vorlesung;\n  constructor(private statesService: StatesService) {}\n\n  ngOnInit(): void {\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n  }\n\n  emitVl(lecture: Vorlesung) {\n    console.log(\"vl: \", lecture);\n    this.newVl = lecture;\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<div class=\"container\">\n  <app-lectures [newVl]=\"newVl\"></app-lectures>\n  <br />\n  <app-add-lecture-form></app-add-lecture-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-login-form></app-login-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.css']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-signup-form></app-signup-form>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"./http.service\";\nimport { Subject, Observable, BehaviorSubject, of } from \"rxjs\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\nimport { StatesService } from \"./states.service\";\nimport { tap, map } from \"rxjs/operators\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CardsService {\n  private cards$: BehaviorSubject<Card[]>;\n  private abrv: string;\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\n    0\n  );\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\n    number\n  >(0);\n  private cards: Card[];\n\n  constructor(\n    private httpService: HttpService,\n    private statesService: StatesService\n  ) {}\n\n  getCards(lecture: Vorlesung): Observable<Card[]> {\n    if (this.abrv == lecture.abrv) {\n      //cards were already loaded for this lecture\n      return this.cards$.asObservable();\n    } else {\n      //returns an observable of the cards from http service while also initializing the cards internally for reuse\n      return this.httpService.getCardsFromLecture(lecture).pipe(\n        tap((res) => {\n          this.cards$ = new BehaviorSubject<Card[]>(res.body);\n          this.abrv = res.body[0].vorlesung;\n        }),\n        map((res) => res.body)\n      );\n    }\n  }\n\n  // initCards(cards: Card[]) {\n  //   //this fucntion is obsolete, its features are implemented in getCards\n  //   // this.cards$ = new BehaviorSubject<Card[]>(cards);\n  //   // this.cards = cards;\n  // }\n  // updateCards(cards: Card[]) {\n  //   this.cards$.next(cards);\n  // }\n\n  updateCard(card: Card, index: number) {\n    this.statesService.setLoadingState(true);\n    this.httpService.updateCard(card).subscribe((resp) => {\n      this.statesService.setLoadingState(false);\n      this.statesService.setFormMode(\"reset\");\n      let cards = this.cards$.getValue();\n      cards[index] = card;\n      this.cards$.next(cards);\n    });\n  }\n  addCard(card: Card): Observable<any> {\n    this.statesService.setLoadingState(true);\n    return this.httpService.addCard(card).pipe(\n      tap((response) => {\n        this.statesService.setLoadingState(false);\n        card._id = response.body;\n        let cards = this.cards$.getValue();\n        cards.push(card);\n        this.cards$.next(cards);\n      })\n    );\n  }\n  getNewCardIndex(): Observable<number> {\n    return this.newCardIndex$.asObservable();\n  }\n  setNewCardIndex(i: number) {\n    this.newCardIndex$.next(i);\n  }\n  setActiveCardIndex(i: number) {\n    this.activeCardIndex$.next(i);\n  }\n  getActiveCardIndex(): Observable<number> {\n    return this.activeCardIndex$.asObservable();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject, of } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { StatesService } from \"./states.service\";\nimport { Router } from \"@angular/router\";\n//Models\nimport { User } from \"../models/User\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  private urlBase: string = \"api/\";\n  private user: User;\n  private lecture$: BehaviorSubject<Vorlesung>; //holds the current lecture\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\n  private httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private statesService: StatesService,\n    private router: Router\n  ) {}\n\n  //Cards\n  getCardsFromLecture(lecture: Vorlesung): Observable<HttpResponse<any[]>> {\n    this.statesService.setLoadingState(true);\n    if (this.lecture$) {\n      return this.http\n        .get<Card[]>(\n          this.urlBase + \"cards/?abrv=\" + this.lecture$.getValue().abrv,\n          {\n            observe: \"response\",\n          }\n        )\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n          })\n        );\n    } else {\n      let abrv = this.router.url.split(/vorlesung\\//)[1];\n      return this.http\n        .get<Card[]>(this.urlBase + \"cards/?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n          })\n        );\n    }\n  }\n\n  addCard(card: Card): Observable<HttpResponse<any>> {\n    //Cards müssen richtig im Frontend definiert werden\n    let id: string;\n    if (this.user) {\n      id = this.user.id;\n    }\n    return this.http.post<any>(\n      this.urlBase + \"cards/new\",\n      { card: card, userId: id },\n      this.httpOptions\n    );\n  }\n  updateCard(card: Card): Observable<HttpResponse<any>> {\n    return this.http.put<any>(\n      this.urlBase + \"cards/update\",\n      { card: card },\n      {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      }\n    );\n  }\n\n  //Lectures\n  getAllLectures(): Observable<Vorlesung[]> {\n    this.statesService.setLoadingState(true);\n    if (this.lectures$) {\n      this.statesService.setLoadingState(false);\n      return this.lectures$.asObservable();\n    } else {\n      return this.http\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n            this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body);\n          }),\n          map((res) => res.body)\n        );\n    }\n  }\n  setCurrentLecture(lecture: Vorlesung) {\n    if (this.lecture$) {\n      this.lecture$.next(lecture);\n    } else {\n      this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\n    }\n  }\n  getCurrentLecture(): Observable<Vorlesung> {\n    if (this.lecture$) {\n      return this.lecture$.asObservable();\n    } else {\n      let abrv = this.router.url.split(/vorlesung\\//)[1];\n      return this.http\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.lecture$ = new BehaviorSubject<Vorlesung>(res.body);\n          }),\n          map((res) => res.body)\n        );\n    }\n  }\n\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<any>(\n        this.urlBase + \"lectures/new\",\n        { lecture: lecture },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap((res) => {\n          //add the new lecture to the lectures subject\n          this.statesService.setLoadingState(false);\n          let lectures = this.lectures$.getValue();\n          lectures.push(lecture);\n          this.lectures$.next(lectures);\n        })\n      );\n  }\n\n  getLectureByAbrv(abrv: string): Vorlesung {\n    if (this.lectures$) {\n      let lectures = this.lectures$.getValue();\n      for (const lecture of lectures) {\n        if (lecture.abrv == abrv) {\n          if (this.lecture$) {\n            this.lecture$.next(lecture);\n          } else {\n            this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\n          }\n\n          return lecture;\n        }\n      }\n    } else {\n    }\n  }\n\n  //User\n  login(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"login\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap((res) => {\n          this.statesService.setLoadingState(false);\n          this.user = res.body;\n          if (form.remember) {\n            localStorage.setItem(\"user\", JSON.stringify(this.user));\n          }\n        })\n      );\n  }\n\n  getUser(): User {\n    if (!this.user) {\n      this.user = JSON.parse(localStorage.getItem(\"user\"));\n    }\n    return this.user;\n  }\n  logout() {\n    this.statesService.setLoadingState(true);\n    this.http.get<any>(this.urlBase + \"user/logout\").subscribe((err) => {\n      this.statesService.setLoadingState(false);\n      if (err) console.log(err);\n    });\n    localStorage.removeItem(\"user\");\n    this.user = null;\n  }\n\n  //form = {username,email,password}\n  createAccount(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"user/new\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap((res) => {\n          this.user = res.body;\n          this.statesService.setLoadingState(false);\n        })\n      );\n  }\n}\n","//This service is made to manage states across components\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StatesService {\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\n  private lastFormMode: string;\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  constructor() {}\n\n  getFormMode(): Observable<string> {\n    return this.formMode$.asObservable();\n  }\n  setFormMode(mode: string): void {\n    if (mode == \"reset\") {\n      if (!this.lastFormMode) {\n        //last form mode is undefined\n        this.lastFormMode = \"none\";\n      } // last Form mode defined\n      this.formMode$.next(this.lastFormMode);\n    } else {\n      this.formMode$.next(mode);\n      if (mode != \"edit\") this.lastFormMode = mode;\n    }\n  }\n\n  getLoadingState(): BehaviorSubject<boolean> {\n    return this.loading$;\n  }\n  setLoadingState(value: boolean) {\n    this.loading$.next(value);\n  }\n  setHideSuggestions(value: boolean) {\n    this.hideSgtn$.next(value);\n  }\n  getHideSuggestions(): Observable<boolean> {\n    return this.hideSgtn$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport \"hammerjs\";\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}
=======
{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-card-form/add-card-form.component.ts","./src/app/components/add-card-form/add-card-form.component.html","./src/app/components/add-lecture-form/add-lecture-form.component.ts","./src/app/components/add-lecture-form/add-lecture-form.component.html","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/carousel/carousel.component.ts","./src/app/components/carousel/carousel.component.html","./src/app/components/lectures/lectures.component.ts","./src/app/components/lectures/lectures.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/signup-form/signup-form.component.ts","./src/app/components/signup-form/signup-form.component.html","./src/app/components/update-card-form/update-card-form.component.ts","./src/app/components/update-card-form/update-card-form.component.html","./src/app/components/update-card-form/dialog.html","./src/app/models/Card.ts","./src/app/models/Vorlesung.ts","./src/app/routes/cards-page/cards-page.component.ts","./src/app/routes/cards-page/cards-page.component.html","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/home-page.component.html","./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/signup-page/signup-page.component.ts","./src/app/routes/signup-page/signup-page.component.html","./src/app/services/cards.service.ts","./src/app/services/http.service.ts","./src/app/services/states.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomePageComponent },\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\n  { path: \"login\", component: LoginPageComponent },\n  { path: \"signup\", component: SignupPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  public constructor(private router: Router, private titleService: Title) {\n    this.titleService.setTitle(\"Home\");\n  }\n}\n","<router-outlet></router-outlet>\n","//Modules\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { CarouselModule, WavesModule } from \"angular-bootstrap-md\";\nimport { KatexModule } from 'ng-katex';\n\n//Components\nimport { AppComponent } from \"./app.component\";\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\nimport { CardComponent } from \"./components/card/card.component\";\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\n//Services\nimport { StatesService } from \"./services/states.service\";\nimport { HttpService } from \"./services/http.service\";\nimport { CardsService } from \"./services/cards.service\";\n\n//Material Modules\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\n//Gestures\nimport {\n  HammerModule,\n  HammerGestureConfig,\n  HAMMER_GESTURE_CONFIG,\n} from \"@angular/platform-browser\";\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\nimport { StoreModule } from \"@ngrx/store\";\ndeclare var Hammer: any;\n//Config to allow swipe gestures on carousel\nexport class MyHammerConfig extends HammerGestureConfig {\n  overrides = <any>{\n    pan: { direction: Hammer.DIRECTION_All },\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\n  };\n\n  buildHammer(element: HTMLElement) {\n    const mc = new Hammer(element, {\n      touchAction: \"auto\",\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\n        ? Hammer.PointerEventInput\n        : Hammer.TouchInput,\n      recognizers: [\n        [\n          Hammer.Swipe,\n          {\n            direction: Hammer.DIRECTION_HORIZONTAL,\n          },\n        ],\n      ],\n    });\n    return mc;\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SearchBarComponent,\n    AddCardFormComponent,\n    CarouselComponent,\n    CardComponent,\n    AddLectureFormComponent,\n    LecturesComponent,\n    HomePageComponent,\n    CardsPageComponent,\n    UpdateCardFormComponent,\n    LoginPageComponent,\n    LoginFormComponent,\n    SignupPageComponent,\n    SignupFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    CarouselModule,\n    WavesModule,\n    HammerModule,\n    StoreModule.forRoot({}, {}),\n    KatexModule\n  ],\n  providers: [\n    StatesService,\n    HttpService,\n\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: MyHammerConfig,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-add-card-form\",\n  templateUrl: \"./add-card-form.component.html\",\n  styleUrls: [\"./add-card-form.component.css\"],\n})\nexport class AddCardFormComponent implements OnInit {\n  lecture: Vorlesung;\n  newCard: Card;\n  hidden: boolean;\n  Contentlength: number;\n  themaLength: number;\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.http\n      .getCurrentLecture()\n      .subscribe((lecture) => (this.lecture = lecture));\n  }\n  setStyle() {}\n  onSubmit(f: NgForm) {\n    this.newCard = new Card(f.value.thema, f.value.content, this.lecture.abrv);\n    this.cardsService.addCard(this.newCard).subscribe((res) => {\n      f.reset();\n    });\n  }\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        ngModel\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(content, thema)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\n@Component({\n  selector: \"app-add-lecture-form\",\n  templateUrl: \"./add-lecture-form.component.html\",\n  styleUrls: [\"./add-lecture-form.component.css\"]\n})\nexport class AddLectureFormComponent implements OnInit {\n  constructor(\n    private http: HttpService,\n    private statesService: StatesService\n  ) {}\n  @Output() emitVl: EventEmitter<Vorlesung> = new EventEmitter();\n  ngOnInit(): void {}\n  onSubmit(f: NgForm) {\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv);\n    this.statesService.setLoadingState(true);\n    this.http.addLecture(newLecture).subscribe(response => {\n      this.statesService.setLoadingState(false);\n      this.emitVl.emit(newLecture);\n    });\n\n    f.reset();\n  }\n\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\"\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  isDisabled(name, abrv) {\n    if (!name.value || !abrv.value) {\n      return true;\n    } else {\n      return (\n        abrv.value.length == 0 ||\n        abrv.value.length < 3 ||\n        abrv.value.length > 7 ||\n        name.value.length == 0 ||\n        name.value.length > 60\n      );\n    }\n  }\n}\n","<div id=\"addLecture\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Vorlesung hinzufügen</h4>\n    <div class=\"form-group\">\n      <label for=\"name\">Vorlesungsname</label>\n      <input\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Datenstrukturen und Algorithmen\"\n        minlength=\"3\"\n        required\n        #name=\"ngModel\"\n        ngModel\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\n        >{{ getLength(name) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"abrv\">Abkürzung</label>\n      <input\n        class=\"form-control\"\n        id=\"abrv\"\n        name=\"abrv\"\n        required\n        #abrv=\"ngModel\"\n        ngModel\n        placeholder=\"Dsal\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\n        >{{ getLength(abrv) }}/7\n      </small>\n    </div>\n    <input\n      class=\"btn btn-primary mb-2\"\n      id=\"addBtn\"\n      type=\"submit\"\n      value=\"Hinzufügen\"\n      [disabled]=\"isDisabled(name, abrv)\"\n    />\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { Card } from \"../../models/Card\";\nimport { KatexOptions } from 'ng-katex';\n\n@Component({\n  selector: \"app-card\",\n  templateUrl: \"./card.component.html\",\n  styleUrls: [\"./card.component.css\"]\n})\nexport class CardComponent implements OnInit {\n  @Input() card: Card;\n  paragraph: string = `\n  You can write text, that contains expressions like this: $x ^ 2 + 5$ inside them. As you probably know.\n  You also can write expressions in display mode as follows: $$\\\\sum_{i=1}^n(x_i^2 - \\\\overline{x}^2)$$.\n  In first case you will need to use \\\\$expression\\\\$ and in the second one \\\\$\\\\$expression\\\\$\\\\$.\n  To scape the \\\\$ symbol it's mandatory to write as follows: \\\\\\\\$\n`;\n  constructor() {}\n  public isCollapsed = true;\n  ngOnInit(): void {}\n}\n","<div class=\"card\" id=\"`{{ card._id }}`\">\n  <div class=\"card-header\">\n    {{ card.thema }}\n  </div>\n  <div class=\"card-body\">\n    <button\n      class=\"btn btn-light\"\n      type=\"button\"\n      (click)=\"isCollapsed = !isCollapsed\"\n    >\n      Mehr dazu\n      <i class=\"fas fa-caret-down\"></i>\n    </button>\n    <div class=\"collapse\" [ngbCollapse]=\"isCollapsed\">\n      <pre lang=\"de\">\n        <ng-katex-paragraph paragraph={{card.content}}></ng-katex-paragraph>\n      </pre>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { NgbCarouselConfig, NgbSlideEvent } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrls: [\"./carousel.component.css\"],\n})\nexport class CarouselComponent implements OnInit {\n  lecture: Vorlesung;\n\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\n    this.carousel.previousSlide();\n  }\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\n    this.carousel.nextSlide();\n  }\n  cards: Card[]; //array of all the cards\n  activeSlide: number = 0;\n  title: string;\n  addComponentHidden: boolean;\n  formShow: boolean;\n  formMode: string;\n\n  constructor(\n    config: NgbCarouselConfig,\n    private httpService: HttpService,\n    private stateService: StatesService,\n    private cardsService: CardsService\n  ) {\n    config.interval = -1;\n    config.wrap = true;\n    config.keyboard = true;\n    config.pauseOnHover = false;\n  }\n\n  ngOnInit(): void {\n    this.httpService.getCurrentLecture().subscribe((lecture) => {\n      this.lecture = lecture;\n      this.title = this.lecture.name;\n    });\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\n    this.stateService.setFormMode(\"none\");\n    this.stateService.getFormMode().subscribe((mode) => {\n      this.formShow = mode == \"add\";\n      this.formMode = mode;\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      if (this.carousel && this.activeSlide != index) {\n        this.activeSlide = index;\n        this.carousel.selectSlide(index);\n      }\n    });\n  }\n\n  toggleAddView(): void {\n    if (this.formMode != \"edit\") {\n      if (this.formMode == \"add\") {\n        this.stateService.setFormMode(\"none\");\n      } else {\n        this.stateService.setFormMode(\"add\");\n      }\n    }\n  }\n  enableEdit() {\n    this.stateService.setFormMode(\"edit\");\n  }\n\n  setClass() {\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\n  }\n\n  selectSlide(n: number) {\n    this.carousel.selectSlide(n.toString());\n  }\n  showRandomCard() {\n    var rand: number = this.activeSlide;\n    var count = 0;\n    while (count < 5 && rand == this.activeSlide) {\n      //calculate a new random index\n      count++;\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\n    }\n    this.carousel.selectSlide(rand.toString());\n  }\n  goToPrev() {\n    if (this.formMode != \"edit\") {\n      this.carousel.previousSlide();\n    }\n  }\n  goToNext() {\n    if (this.formMode != \"edit\") {\n      this.carousel.nextSlide();\n    }\n  }\n  onSlide(slideEvent) {\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\n  }\n}\n","<h3 id=\"vorlesung\">{{ title }}</h3>\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\n  <button\n    class=\"btn btn-light\"\n    id=\"rand\"\n    placement=\"top\"\n    ngbTooltip=\"Zufall\"\n    (click)=\"showRandomCard()\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n  >\n    <div class=\"fas fa-random\"></div>\n  </button>\n  <button\n    class=\"btn btn-light\"\n    id=\"editCard\"\n    type=\"button\"\n    placement=\"top\"\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\n    (click)=\"enableEdit()\"\n    ngbTooltip=\"Bearbeiten\"\n  >\n    <div class=\"fas fa-pen\"></div>\n  </button>\n\n  <button\n    [ngClass]=\"setClass()\"\n    id=\"toggleAdd\"\n    type=\"button\"\n    data-toggle=\"button\"\n    (click)=\"toggleAddView()\"\n    placement=\"top\"\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\n    [disabled]=\"formMode == 'edit'\"\n  >\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\n  </button>\n</div>\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\n  <a (click)=\"goToPrev()\">\n    <span class=\"fas fa-chevron-left\"></span>\n  </a>\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\n    <mdb-carousel\n      (activeSlideChange)=\"onSlide($event)\"\n      #mycarousel\n      [(activeSlideIndex)]=\"activeSlide\"\n      [animation]=\"'slide'\"\n      [isControls]=\"false\"\n      [allowSwipe]=\"true\"\n      [interval]=\"'0'\"\n      ><ng-container *ngFor=\"let card of cards; index as i\">\n        <mdb-carousel-item [id]=\"i.toString()\">\n          <app-card [card]=\"card\"></app-card>\n        </mdb-carousel-item>\n      </ng-container>\n    </mdb-carousel>\n  </div>\n  <a (click)=\"goToNext()\">\n    <span class=\"fas fa-chevron-right\"></span>\n  </a>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\n@Component({\n  selector: \"app-lectures\",\n  templateUrl: \"./lectures.component.html\",\n  styleUrls: [\"./lectures.component.css\"],\n})\nexport class LecturesComponent implements OnInit {\n  lectures: Vorlesung[];\n  @Output() lecturesLoaded: EventEmitter<boolean> = new EventEmitter();\n  @Input() newVl: Vorlesung;\n\n  constructor(private httpService: HttpService) {}\n\n  ngOnInit(): void {\n    this.httpService.getAllLectures().subscribe((lectures) => {\n      this.lectures = lectures;\n    });\n  }\n\n  ngOnChanges() {\n    if (this.newVl) {\n      console.log(\"got new vl: \", this.newVl);\n      this.lectures.push(this.newVl);\n    }\n  }\n  setLink(lecture: Vorlesung) {\n    return \"/vorlesung/\" + lecture.abrv;\n  }\n}\n","<ul class=\"list list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\n  </li>\n</ul>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-login-form\",\n  templateUrl: \"./login-form.component.html\",\n  styleUrls: [\"./login-form.component.css\"],\n})\nexport class LoginFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  public errors;\n\n  ngOnInit(): void {\n  \n  }\n  submit(form: NgForm) {\n    this.http.login(form.value).subscribe(\n      (response) => {\n        if (response.status == 200) {\n          this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n\n  isDisabled(username, password) {\n    if (!(username.value && password.value)) {\n      return true;\n    }\n    return username.value.length < 5 || password.value.length < 7;\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"username\"\n        required\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group form-check\">\n      <input\n        required\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        id=\"remember\"\n        name=\"remember\"\n        #remember=\"ngModel\"\n        [checked]=\"true\"\n        ngModel\n      />\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, password)\"\n    >\n      Login\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { Card } from \"../../models/Card\";\nimport { Router } from \"@angular/router\";\nimport { Title } from \"@angular/platform-browser\";\nimport { User } from \"src/app/models/User\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { StatesService } from \"src/app/services/states.service\";\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"],\n})\nexport class NavBarComponent implements OnInit {\n  public user: User;\n  public cards: Card[];\n\n  public loading: boolean = false;\n  public constructor(\n    private router: Router,\n    private titleService: Title,\n    private http: HttpService,\n    private cardsService: CardsService,\n    private statesService: StatesService\n  ) {}\n\n  ngOnInit(): void {\n    this.setPageTitle();\n    this.user = this.http.getUser();\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n    if (\n      this.router.url != \"/\" &&\n      this.router.url != \"/login\" &&\n      this.router.url != \"/signup\"\n    )\n      this.cardsService.getCards().subscribe((cards) => {\n        this.cards = cards;\n      });\n  }\n\n  isActive(path: string): string {\n    return path === this.router.url ? \"active\" : \"\";\n  }\n  setPageTitle(): void {\n    let currentTitle: string;\n    switch (this.router.url) {\n      case \"/login\":\n        currentTitle = \"Login\";\n        break;\n      case \"/signup\":\n        currentTitle = \"Sign Up\";\n        break;\n      case \"/\":\n        currentTitle = \"Home\";\n        break;\n      default:\n        currentTitle = \"Cards\";\n    }\n    this.titleService.setTitle(currentTitle);\n  }\n  logout() {\n    this.http.logout();\n    this.user = null;\n    this.router.navigate([\"/\"]);\n  }\n}\n","<nav\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\n  role=\"alert\"\n  style=\"padding-right: 0;\"\n>\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\" id=\"navlist\">\n          <li class=\"{{ isActive('/') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\n            >\n          </li>\n\n          <li *ngIf=\"!user\" class=\"{{ isActive('/login') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\"\n              ><i class=\"fas fa-user\"></i> Login</a\n            >\n          </li>\n          <li *ngIf=\"!user\" class=\"{{ isActive('/signup') }} nav-item\">\n            <a class=\"nav-link\" routerLink=\"/signup\"\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\n            >\n          </li>\n          <li *ngIf=\"user\" class=\"{{ isActive('/profile') }} nav-item\">\n            <div class=\"dropdown\">\n              <a\n                class=\"nav-link\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i class=\"fas fa-user-circle\"></i> Account\n              </a>\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                <a\n                  class=\"dropdown-item disabled\"\n                  href=\"#\"\n                  placement=\"bottom\"\n                  ngbTooltip=\"im Aufbau\"\n                  >Account management</a\n                >\n                <a class=\"dropdown-item\" (click)=\"logout()\">\n                  Logout\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\n      <app-search-bar></app-search-bar>\n    </div>\n  </div>\n</nav>\n<div id=\"progress\">\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n</div>\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Card } from \"../../models/Card\";\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\n\n@Component({\n  selector: \"app-search-bar\",\n  templateUrl: \"./search-bar.component.html\",\n  styleUrls: [\"./search-bar.component.css\"],\n})\nexport class SearchBarComponent implements OnInit {\n  constructor(\n    private cardsService: CardsService,\n    private stateService: StatesService,\n    private http: HttpService\n  ) {}\n  cards: Card[];\n  suggestions: SearchSuggestion[];\n  uInput: string;\n  clearSuggestions: boolean;\n\n  ngOnInit(): void {\n    this.stateService.getHideSuggestions().subscribe((value) => {\n      this.clearSuggestions = value;\n      if (value) {\n        this.suggestions = [];\n      }\n    });\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n      cards.forEach((card) => {\n        if (card.thema == null) {\n          card.thema = \"\";\n        }\n        if (card.content == null) {\n          card.content = \"\";\n        }\n      });\n    });\n  }\n\n  findMatches(e: Event) {\n    this.stateService.setHideSuggestions(false); //show suggestions\n    if (this.uInput && this.uInput.length > 2) {\n      this.suggestions = [];\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\n\n      for (let i = 0; i < this.cards.length; i++) {\n        if (this.cards[i].thema.match(regex)) {\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\n        }\n      }\n    }\n  }\n  navigateTo(e: Event, index: number) {\n    e.preventDefault();\n\n    this.cardsService.setNewCardIndex(index);\n  }\n}\n","<input\n  [(ngModel)]=\"uInput\"\n  (input)=\"findMatches($event)\"\n  class=\"form-control float-right\"\n  id=\"search\"\n  type=\"search\"\n  placeholder=\"Thema suchen\"\n/>\n<div *ngIf=\"suggestions\" id=\"matches\">\n  <ul class=\"list-group\">\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\n        suggestion.title\n      }}</a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { HttpService } from \"../../services/http.service\";\nimport { Router } from \"@angular/router\";\n@Component({\n  selector: \"app-signup-form\",\n  templateUrl: \"./signup-form.component.html\",\n  styleUrls: [\"./signup-form.component.css\"],\n})\nexport class SignupFormComponent implements OnInit {\n  constructor(private http: HttpService, private router: Router) {}\n  errors;\n\n  ngOnInit(): void {}\n  submit(form: NgForm) {\n    this.http.createAccount(form.value).subscribe(\n      (response) => {\n        if (response) {\n              this.router.navigate([\"/\"]);\n        }\n      },\n      (error) => {\n        if ((error.headers.status = 422)) {\n          console.log(error);\n          this.errors = error.error.errors;\n        }\n      }\n    );\n  }\n  setStyle(password, password2) {\n    if (\n      password2.value &&\n      password2.value.length > 5 &&\n      password2.value != password.value\n    ) {\n      return \"box-shadow:0 0 3px #CC0000;\";\n    }\n    return \"\";\n  }\n  checkEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    }\n\n    return false;\n  }\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n  setCharIndicatorStyle(field, max: number) {\n    if (field.value) {\n      return {\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  isDisabled(username, email, password, password2) {\n    if (!(username.value && email.value && password.value)) {\n      return true;\n    }\n    return (\n      username.value.length < 5 ||\n      password.value.length < 7 ||\n      password.value != password2.value ||\n      !this.checkEmail(email.value)\n    );\n  }\n}\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\n  {{ error }}\n</div>\n<div class=\"container\">\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Benutzername</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"username\"\n        name=\"username\"\n        required\n        maxlength=\"20\"\n        aria-describedby=\"nameHelp\"\n        #username=\"ngModel\"\n        ngModel\n      />\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email Adresse</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        name=\"email\"\n        id=\"email\"\n        aria-describedby=\"emailHelp\"\n        required\n        #email=\"ngModel\"\n        ngModel\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password\"\n        id=\"password\"\n        #password=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n      />\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Passwort wiederholen</label>\n      <input\n        type=\"password\"\n        class=\"form-control\"\n        name=\"password2\"\n        id=\"password2\"\n        #password2=\"ngModel\"\n        ngModel\n        minlength=\"7\"\n        [style]=\"setStyle(password, password2)\"\n      />\n      <small class=\"form-text\"> </small>\n    </div>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary btn-lg btn-block\"\n      [disabled]=\"isDisabled(username, email, password, password2)\"\n    >\n      Account erstellen\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { StatesService } from \"../../services/states.service\";\nimport { HttpService } from \"../../services/http.service\";\nimport { CardsService } from \"../../services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-update-card-form\",\n  templateUrl: \"./update-card-form.component.html\",\n  styleUrls: [\"./update-card-form.component.css\"],\n})\nexport class UpdateCardFormComponent implements OnInit {\n  public cardCopy: Card;\n  private cards: Card[];\n  private cardIndex: number; //saves the cardindex which the user is currently updating\n  private activeCardIndex: number; //saves the active cardindex\n  constructor(\n    private cardsService: CardsService,\n    private httpService: HttpService,\n    private statesService: StatesService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.cardsService.getCards().subscribe((cards) => {\n      this.cards = cards;\n    });\n    this.cardsService.getActiveCardIndex().subscribe((index) => {\n      this.activeCardIndex = index;\n      if (this.cards) {\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\n      }\n      this.cardIndex = this.activeCardIndex;\n    });\n  }\n\n  onSubmit(f: NgForm) {\n    this.cardCopy.content = f.value.content;\n    this.cardCopy.thema = f.value.thema;\n    this.cardsService.updateCard({ ...this.cardCopy }, this.cardIndex);\n    f.reset();\n  }\n  cancelEdit() {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: \"400px\",\n    });\n  }\n\n  //Function to set style of small character indicator\n  setThemaCharIndicatorStyle(thema) {\n    if (thema.value) {\n      return {\n        color:\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\n          thema.value.length > 60\n            ? \"#ff0000\"\n            : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n  //Function to set style of small character indicator\n  setContentCharIndicatorStyle(content) {\n    if (content.value) {\n      return {\n        color:\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\n      };\n    } else {\n      return { color: \"#000000\" };\n    }\n  }\n\n  getLength(elem) {\n    if (elem.value) {\n      return elem.value.length;\n    } else {\n      return 0;\n    }\n  }\n\n  isDisabled(content, thema) {\n    if (!content.value || !thema.value) {\n      return true;\n    }\n    return (\n      content.value.length > 400 ||\n      (thema.value.length > 0 && thema.value.length < 3) ||\n      thema.value.length > 60\n    );\n  }\n}\n@Component({\n  selector: \"dialog-overview-example-dialog\",\n  templateUrl: \"dialog.html\",\n})\nexport class DialogOverviewExampleDialog {\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    private service: StatesService\n  ) {}\n\n  cancel() {\n    this.service.setFormMode(\"reset\");\n\n    this.dialogRef.close();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"addCard\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\n    <h4>Karteikarte bearbeiten</h4>\n    <div class=\"form-group\">\n      <label for=\"thema\">Überschrift</label>\n      <input\n        class=\"form-control\"\n        id=\"thema\"\n        name=\"thema\"\n        type=\"text\"\n        placeholder=\"Thema\"\n        minlength=\"3\"\n        required\n        #thema=\"ngModel\"\n        [(ngModel)]=\"cardCopy.thema\"\n      />\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\n        >{{ getLength(thema) }}/60\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"content\">Informationen</label>\n      <textarea\n        class=\"form-control\"\n        id=\"content\"\n        name=\"content\"\n        rows=\"5\"\n        required\n        #content=\"ngModel\"\n        [(ngModel)]=\"cardCopy.content\"\n      ></textarea>\n      <small\n        class=\"form-text float-right\"\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\n        >{{ getLength(content) }}/400\n      </small>\n    </div>\n    <div class=\"form-group\">\n      <input\n        class=\"btn btn-success mb-2 mr-1\"\n        type=\"submit\"\n        value=\"Sichern\"\n        [disabled]=\"isDisabled(content, thema)\"\n      />\n      <input\n        class=\"btn btn-danger mb-2\"\n        type=\"button\"\n        value=\"Abbruch\"\n        (click)=\"cancelEdit()\"\n      />\n    </div>\n  </form>\n</div>\n","<h1 mat-dialog-title>Abbruch</h1>\n<div mat-dialog-content>\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\n</div>\n<hr />\n<div mat-dialog-actions style=\"text-align: right;\">\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\n    Nein,zurück\n  </button>\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\n</div>\n","export class Card {\n  _id?: string;\n  thema: string;\n  content: string;\n  abrv: string;\n  constructor(thema, content, abrv) {\n    this.thema = thema;\n    this.content = content;\n    this.abrv = abrv;\n  }\n}\n","export class Vorlesung {\n  name: string;\n  abrv: string;\n  constructor(name, abrv) {\n    this.name = name;\n    this.abrv = abrv;\n  }\n}\n","import { Component, OnInit, HostListener } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpService } from \"../../services/http.service\";\nimport { StatesService } from \"../../services/states.service\";\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\nimport { CardsService } from \"src/app/services/cards.service\";\nimport { Card } from \"../../models/Card\";\nimport { Title } from \"@angular/platform-browser\";\n@Component({\n  selector: \"app-cards-page\",\n  templateUrl: \"./cards-page.component.html\",\n  styleUrls: [\"./cards-page.component.css\"],\n})\nexport class CardsPageComponent implements OnInit {\n  public vlAbrv: string;\n  public ativeCard: number;\n  public lecture: Vorlesung;\n  public loading: boolean = true;\n  public formMode: string = \"none\";\n  public cards: Card[];\n\n  @HostListener(\"click\", [\"$event.target\"])\n  onClick() {\n    this.stateServie.setHideSuggestions(true);\n  }\n  constructor(\n    private route: ActivatedRoute,\n    private httpService: HttpService,\n    private stateServie: StatesService,\n    private cardsService: CardsService,\n    private title: Title\n  ) {}\n\n  ngOnInit(): void {\n    this.title.setTitle(\"Cards\");\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\n    this.cardsService.getCards().subscribe((cards) => {\n      if (cards.length == 0) {\n        this.stateServie.setFormMode(\"add\");\n      }\n    });\n\n    this.cardsService.getNewCardIndex().subscribe((index) => {\n      this.ativeCard = index;\n    });\n    this.stateServie\n      .getLoadingState()\n      .subscribe((value) => (this.loading = value));\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\n  }\n\n  setLoading(loading: boolean): void {\n    this.loading = loading;\n    this.stateServie.setLoadingState(loading);\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<br />\n<div class=\"container\">\n  <app-carousel></app-carousel>\n  <br />\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Vorlesung } from \"../../models/Vorlesung\";\nimport { StatesService } from \"../../services/states.service\";\nimport { from } from \"rxjs\";\n@Component({\n  selector: \"app-home-page\",\n  templateUrl: \"./home-page.component.html\",\n  styleUrls: [\"./home-page.component.css\"],\n})\nexport class HomePageComponent implements OnInit {\n  public loading: boolean = false;\n  public newVl: Vorlesung;\n  constructor(private statesService: StatesService) {}\n\n  ngOnInit(): void {\n    this.statesService.getLoadingState().subscribe((val) => {\n      this.loading = val;\n    });\n  }\n\n  emitVl(lecture: Vorlesung) {\n    console.log(\"vl: \", lecture);\n    this.newVl = lecture;\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<div class=\"container\">\n  <app-lectures [newVl]=\"newVl\"></app-lectures>\n  <br />\n  <app-add-lecture-form></app-add-lecture-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-login-form></app-login-form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.css']\n})\nexport class SignupPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-nav-bar></app-nav-bar>\n<div>\n  <app-signup-form></app-signup-form>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"./http.service\";\nimport { Subject, Observable, BehaviorSubject, of, from } from \"rxjs\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\nimport { StatesService } from \"./states.service\";\nimport { tap, map } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CardsService {\n  private cards$: BehaviorSubject<Card[]>;\n  private abrv: string;\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\n    0\n  );\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\n    number\n  >(0);\n  private cards: Card[];\n\n  constructor(\n    private httpService: HttpService,\n    private statesService: StatesService,\n    private router: Router\n  ) {}\n\n  getCards(): Observable<Card[]> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1];\n    if (this.cards$ && this.abrv == abrv) {\n      //cards were already loaded for this lecture\n      return this.cards$.asObservable();\n    } else {\n      this.abrv = abrv;\n      //returns an observable of the cards from http service while also initializing the cards internally for reuse\n      return this.httpService.getCardsFromLectureAbrv(abrv).pipe(\n        tap((res) => {\n          if (this.cards$) {\n            this.cards$.next(res.body);\n          } else {\n            this.cards$ = new BehaviorSubject<Card[]>(res.body);\n          }\n        }),\n        map((res) => res.body)\n      );\n    }\n  }\n\n  // initCards(cards: Card[]) {\n  //   //this fucntion is obsolete, its features are implemented in getCards\n  //   // this.cards$ = new BehaviorSubject<Card[]>(cards);\n  //   // this.cards = cards;\n  // }\n  // updateCards(cards: Card[]) {\n  //   this.cards$.next(cards);\n  // }\n\n  updateCard(card: Card, index: number) {\n    this.statesService.setLoadingState(true);\n    this.httpService.updateCard(card).subscribe((resp) => {\n      this.statesService.setLoadingState(false);\n      this.statesService.setFormMode(\"reset\");\n      let cards = this.cards$.getValue();\n      cards[index] = card;\n      this.cards$.next(cards);\n    });\n  }\n  addCard(card: Card): Observable<any> {\n    this.statesService.setLoadingState(true);\n    return this.httpService.addCard(card).pipe(\n      tap((response) => {\n        this.statesService.setLoadingState(false);\n        card._id = response.body;\n        let cards = this.cards$.getValue();\n        cards.push(card);\n        this.cards$.next(cards);\n      })\n    );\n  }\n  getNewCardIndex(): Observable<number> {\n    return this.newCardIndex$.asObservable();\n  }\n  setNewCardIndex(i: number) {\n    this.newCardIndex$.next(i);\n  }\n  setActiveCardIndex(i: number) {\n    this.activeCardIndex$.next(i);\n  }\n  getActiveCardIndex(): Observable<number> {\n    return this.activeCardIndex$.asObservable();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Observable, BehaviorSubject, of } from \"rxjs\";\nimport { tap, map } from \"rxjs/operators\";\nimport { StatesService } from \"./states.service\";\nimport { Router } from \"@angular/router\";\n//Models\nimport { User } from \"../models/User\";\nimport { Card } from \"../models/Card\";\nimport { Vorlesung } from \"../models/Vorlesung\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  private urlBase: string = \"api/\";\n  private user: User;\n  private lecture$: BehaviorSubject<Vorlesung>; //holds the current lecture\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\n  private httpOptions = {\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    private statesService: StatesService,\n    private router: Router\n  ) {}\n\n  //Cards\n  getCardsFromLectureAbrv(abrv: string): Observable<HttpResponse<any[]>> {\n    this.statesService.setLoadingState(true);\n    {\n      return this.http\n        .get<Card[]>(this.urlBase + \"cards/?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n          })\n        );\n    }\n  }\n\n  addCard(card: Card): Observable<HttpResponse<any>> {\n    //Cards müssen richtig im Frontend definiert werden\n    let id: string;\n    if (this.user) {\n      id = this.user.id;\n    }\n    return this.http.post<any>(\n      this.urlBase + \"cards/new\",\n      { card: card, userId: id },\n      this.httpOptions\n    );\n  }\n  updateCard(card: Card): Observable<HttpResponse<any>> {\n    return this.http.put<any>(\n      this.urlBase + \"cards/update\",\n      { card: card },\n      {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      }\n    );\n  }\n\n  //Lectures\n  getAllLectures(): Observable<Vorlesung[]> {\n    this.statesService.setLoadingState(true);\n    if (this.lectures$) {\n      this.statesService.setLoadingState(false);\n      return this.lectures$.asObservable();\n    } else {\n      return this.http\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            this.statesService.setLoadingState(false);\n            this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body);\n          }),\n          map((res) => res.body)\n        );\n    }\n  }\n  setCurrentLecture(lecture: Vorlesung) {\n    if (this.lecture$) {\n      this.lecture$.next(lecture);\n    } else {\n      this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\n    }\n  }\n  getCurrentLecture(): Observable<Vorlesung> {\n    let abrv = this.router.url.split(/vorlesung\\//)[1];\n    if (this.lecture$ && this.lecture$.getValue().abrv == abrv) {\n      return this.lecture$.asObservable();\n    } else {\n      return this.http\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\n          observe: \"response\",\n        })\n        .pipe(\n          tap((res) => {\n            if (this.lecture$) {\n              this.lecture$.next(res.body);\n            } else {\n              this.lecture$ = new BehaviorSubject<Vorlesung>(res.body);\n            }\n          }),\n          map((res) => res.body)\n        );\n    }\n  }\n\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<any>(\n        this.urlBase + \"lectures/new\",\n        { lecture: lecture },\n        {\n          headers: this.httpOptions.headers,\n          observe: \"response\",\n        }\n      )\n      .pipe(\n        tap((res) => {\n          //add the new lecture to the lectures subject\n          this.statesService.setLoadingState(false);\n          let lectures = this.lectures$.getValue();\n          lectures.push(lecture);\n          this.lectures$.next(lectures);\n        })\n      );\n  }\n\n  getLectureByAbrv(abrv: string): Vorlesung {\n    if (this.lectures$) {\n      let lectures = this.lectures$.getValue();\n      for (const lecture of lectures) {\n        if (lecture.abrv == abrv) {\n          if (this.lecture$) {\n            this.lecture$.next(lecture);\n          } else {\n            this.lecture$ = new BehaviorSubject<Vorlesung>(lecture);\n          }\n\n          return lecture;\n        }\n      }\n    } else {\n    }\n  }\n\n  //User\n  login(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"login\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap((res) => {\n          this.statesService.setLoadingState(false);\n          this.user = res.body;\n          if (form.remember) {\n            localStorage.setItem(\"user\", JSON.stringify(this.user));\n          }\n        })\n      );\n  }\n\n  getUser(): User {\n    if (!this.user) {\n      this.user = JSON.parse(localStorage.getItem(\"user\"));\n    }\n    return this.user;\n  }\n  logout() {\n    this.statesService.setLoadingState(true);\n    this.http.get<any>(this.urlBase + \"user/logout\").subscribe((err) => {\n      this.statesService.setLoadingState(false);\n      if (err) console.log(err);\n    });\n    localStorage.removeItem(\"user\");\n    this.user = null;\n  }\n\n  //form = {username,email,password}\n  createAccount(form): Observable<HttpResponse<User>> {\n    this.statesService.setLoadingState(true);\n    return this.http\n      .post<User>(this.urlBase + \"user/new\", form, {\n        headers: this.httpOptions.headers,\n        observe: \"response\",\n      })\n      .pipe(\n        tap((res) => {\n          this.user = res.body;\n          this.statesService.setLoadingState(false);\n        })\n      );\n  }\n}\n","//This service is made to manage states across components\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StatesService {\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\n  private lastFormMode: string;\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  constructor() {}\n\n  getFormMode(): Observable<string> {\n    return this.formMode$.asObservable();\n  }\n  setFormMode(mode: string): void {\n    if (mode == \"reset\") {\n      if (!this.lastFormMode) {\n        //last form mode is undefined\n        this.lastFormMode = \"none\";\n      } // last Form mode defined\n      this.formMode$.next(this.lastFormMode);\n    } else {\n      this.formMode$.next(mode);\n      if (mode != \"edit\") this.lastFormMode = mode;\n    }\n  }\n\n  getLoadingState(): BehaviorSubject<boolean> {\n    return this.loading$;\n  }\n  setLoadingState(value: boolean) {\n    this.loading$.next(value);\n  }\n  setHideSuggestions(value: boolean) {\n    this.hideSgtn$.next(value);\n  }\n  getHideSuggestions(): Observable<boolean> {\n    return this.hideSgtn$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport \"hammerjs\";\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}
>>>>>>> noHttps
