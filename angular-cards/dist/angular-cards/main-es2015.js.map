{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-card-form/add-card-form.component.ts","./src/app/components/add-card-form/add-card-form.component.html","./src/app/components/add-lecture-form/add-lecture-form.component.ts","./src/app/components/add-lecture-form/add-lecture-form.component.html","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/cards-overview/cards-overview.component.ts","./src/app/components/cards-overview/cards-overview.component.html","./src/app/components/carousel/carousel.component.ts","./src/app/components/carousel/carousel.component.html","./src/app/components/change-profile/change-profile.component.ts","./src/app/components/change-profile/change-profile.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/lectures/lectures.component.ts","./src/app/components/lectures/lectures.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/components/notifications/notifications.component.ts","./src/app/components/notifications/notifications.component.html","./src/app/components/overview/overview.component.ts","./src/app/components/overview/overview.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/signup-form/signup-form.component.ts","./src/app/components/signup-form/signup-form.component.html","./src/app/components/update-card-form/update-card-form.component.ts","./src/app/components/update-card-form/update-card-form.component.html","./src/app/components/update-card-form/dialog.html","./src/app/models/Card.ts","./src/app/models/Notification.ts","./src/app/models/User.ts","./src/app/models/Vorlesung.ts","./src/app/routes/about/about.component.ts","./src/app/routes/about/about.component.html","./src/app/routes/account-page/account-page.component.ts","./src/app/routes/account-page/account-page.component.html","./src/app/routes/cards-page/cards-page.component.ts","./src/app/routes/cards-page/cards-page.component.html","./src/app/routes/error-page/error-page.component.ts","./src/app/routes/error-page/error-page.component.html","./src/app/routes/home-page/home-page.component.ts","./src/app/routes/home-page/home-page.component.html","./src/app/routes/login-page/login-page.component.ts","./src/app/routes/login-page/login-page.component.html","./src/app/routes/signup-page/signup-page.component.ts","./src/app/routes/signup-page/signup-page.component.html","./src/app/services/cards.service.ts","./src/app/services/config.ts","./src/app/services/lectures.service.ts","./src/app/services/notifications.service.ts","./src/app/services/states.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nimport { AboutComponent } from \"./routes/about/about.component\";\r\nimport { AccountPageComponent } from \"./routes/account-page/account-page.component\";\r\nimport { UserService as AuthGuard } from \"./services/user.service\";\r\nimport { OverviewComponent } from \"./components/overview/overview.component\";\r\nimport { ChangeProfileComponent } from \"./components/change-profile/change-profile.component\";\r\nimport { CardsOverviewComponent } from \"./components/cards-overview/cards-overview.component\";\r\nimport { ErrorPageComponent } from \"./routes/error-page/error-page.component\";\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomePageComponent },\r\n  { path: \"vorlesung/:abrv\", component: CardsPageComponent },\r\n  { path: \"login\", component: LoginPageComponent },\r\n  { path: \"signup\", component: SignupPageComponent },\r\n  { path: \"about\", component: AboutComponent },\r\n\r\n  {\r\n    path: \"account\",\r\n    component: AccountPageComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: \"\", redirectTo: \"overview\", pathMatch: \"full\" },\r\n      { path: \"overview\", component: OverviewComponent },\r\n      { path: \"manage\", component: ChangeProfileComponent },\r\n      { path: \"cards\", component: CardsOverviewComponent },\r\n    ],\r\n  },\r\n  { path: \"**\", component: ErrorPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  public constructor(private router: Router, private titleService: Title) {\r\n    this.titleService.setTitle(\"Home\");\r\n  }\r\n  BackToTop() {\r\n    let scrollToTop = window.setInterval(() => {\r\n      let pos = window.pageYOffset;\r\n      if (pos > 0) {\r\n        window.scrollTo(0, pos - 20); // how far to scroll on each step\r\n      } else {\r\n        window.clearInterval(scrollToTop);\r\n      }\r\n    }, 16);\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>\r\n","//Modules\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule, Injectable, LOCALE_ID } from \"@angular/core\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport {\r\n  CarouselModule,\r\n  WavesModule,\r\n  CollapseModule,\r\n  TooltipModule,\r\n} from \"angular-bootstrap-md\";\r\n\r\n//Services\r\nimport { StatesService } from \"./services/states.service\";\r\n\r\n//Material Modules\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UpdateCardFormComponent } from \"./components/update-card-form/update-card-form.component\";\r\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n//Gestures\r\nimport {\r\n  HammerModule,\r\n  HammerGestureConfig,\r\n  HAMMER_GESTURE_CONFIG,\r\n} from \"@angular/platform-browser\";\r\n\r\n//Components\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NavBarComponent } from \"./components/nav-bar/nav-bar.component\";\r\nimport { SearchBarComponent } from \"./components/search-bar/search-bar.component\";\r\nimport { AddCardFormComponent } from \"./components/add-card-form/add-card-form.component\";\r\nimport { CarouselComponent } from \"./components/carousel/carousel.component\";\r\nimport { CardComponent } from \"./components/card/card.component\";\r\nimport { AddLectureFormComponent } from \"./components/add-lecture-form/add-lecture-form.component\";\r\nimport { LecturesComponent } from \"./components/lectures/lectures.component\";\r\nimport { HomePageComponent } from \"./routes/home-page/home-page.component\";\r\nimport { CardsPageComponent } from \"./routes/cards-page/cards-page.component\";\r\nimport { LoginPageComponent } from \"./routes/login-page/login-page.component\";\r\nimport { LoginFormComponent } from \"./components/login-form/login-form.component\";\r\nimport { SignupPageComponent } from \"./routes/signup-page/signup-page.component\";\r\nimport { SignupFormComponent } from \"./components/signup-form/signup-form.component\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { FooterComponent } from \"./components/footer/footer.component\";\r\nimport { AboutComponent } from \"./routes/about/about.component\";\r\nimport { AccountPageComponent } from \"./routes/account-page/account-page.component\";\r\nimport { OverviewComponent } from \"./components/overview/overview.component\";\r\nimport { ChangeProfileComponent } from \"./components/change-profile/change-profile.component\";\r\nimport { CardsOverviewComponent } from \"./components/cards-overview/cards-overview.component\";\r\nimport { NotificationsComponent } from \"./components/notifications/notifications.component\";\r\n\r\n//Localization\r\nimport { registerLocaleData } from \"@angular/common\";\r\nimport de from \"@angular/common/locales/de\";\r\nregisterLocaleData(de);\r\n\r\n//Pipes\r\nimport { SafeHtmlPipe } from \"./components/card/card.component\";\r\nimport { ErrorPageComponent } from \"./routes/error-page/error-page.component\";\r\n\r\ndeclare var Hammer: any;\r\n//Config to allow swipe gestures on carousel\r\n@Injectable()\r\nexport class MyHammerConfig extends HammerGestureConfig {\r\n  overrides = <any>{\r\n    pan: { direction: Hammer.DIRECTION_All },\r\n    swipe: { direction: Hammer.DIRECTION_VERTICAL },\r\n  };\r\n\r\n  buildHammer(element: HTMLElement) {\r\n    const mc = new Hammer(element, {\r\n      touchAction: \"auto\",\r\n      inputClass: Hammer.SUPPORT_POINTER_EVENTS\r\n        ? Hammer.PointerEventInput\r\n        : Hammer.TouchInput,\r\n      recognizers: [\r\n        [\r\n          Hammer.Swipe,\r\n          {\r\n            direction: Hammer.DIRECTION_HORIZONTAL,\r\n          },\r\n        ],\r\n      ],\r\n    });\r\n    return mc;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    SearchBarComponent,\r\n    AddCardFormComponent,\r\n    CarouselComponent,\r\n    CardComponent,\r\n    AddLectureFormComponent,\r\n    LecturesComponent,\r\n    HomePageComponent,\r\n    CardsPageComponent,\r\n    UpdateCardFormComponent,\r\n    LoginPageComponent,\r\n    LoginFormComponent,\r\n    SignupPageComponent,\r\n    SignupFormComponent,\r\n    FooterComponent,\r\n    AboutComponent,\r\n    AccountPageComponent,\r\n    OverviewComponent,\r\n    ChangeProfileComponent,\r\n    CardsOverviewComponent,\r\n    NotificationsComponent,\r\n    SafeHtmlPipe,\r\n    ErrorPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    HammerModule,\r\n    CollapseModule,\r\n    TooltipModule,\r\n    StoreModule.forRoot({}, {}),\r\n  ],\r\n  providers: [\r\n    StatesService,\r\n    { provide: LOCALE_ID, useValue: \"de\" },\r\n\r\n    {\r\n      provide: HAMMER_GESTURE_CONFIG,\r\n      useClass: MyHammerConfig,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { LecturesService } from \"../../services/lectures.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { Observable, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-add-card-form\",\r\n  templateUrl: \"./add-card-form.component.html\",\r\n  styleUrls: [\"./add-card-form.component.css\"],\r\n})\r\nexport class AddCardFormComponent implements OnInit, OnDestroy {\r\n  lecture: Vorlesung;\r\n  newCard: Card;\r\n  hidden: boolean;\r\n  Contentlength: number;\r\n  themaLength: number;\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService,\r\n    private lectureService: LecturesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let sub = this.lectureService\r\n      .getCurrentLecture()\r\n      .subscribe((lecture) => (this.lecture = lecture));\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  setStyle() {}\r\n  onSubmit(f: NgForm) {\r\n    this.newCard = new Card(\r\n      f.value.thema,\r\n      f.value.content,\r\n      this.lecture.abrv,\r\n      0\r\n    );\r\n    let sub = this.cardsService.addCard(this.newCard).subscribe((res) => {\r\n      f.reset();\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  inField() {\r\n    this.stateService.setTyping(true);\r\n  }\r\n  resetNav() {\r\n    this.stateService.setTyping(false);\r\n  }\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Frage</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        ngModel\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Antwort</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        ngModel\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(content, thema)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { LecturesService } from \"../../services/lectures.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Subscription } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-add-lecture-form\",\r\n  templateUrl: \"./add-lecture-form.component.html\",\r\n  styleUrls: [\"./add-lecture-form.component.css\"],\r\n})\r\nexport class AddLectureFormComponent implements OnInit {\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private lecture: LecturesService,\r\n    private statesService: StatesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  onSubmit(f: NgForm) {\r\n    let newLecture = new Vorlesung(f.value.name, f.value.abrv.toLowerCase());\r\n    let sub = this.lecture.addLecture(newLecture).subscribe((response) => {\r\n      f.reset();\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  isDisabled(name, abrv) {\r\n    if (!name.value || !abrv.value) {\r\n      return true;\r\n    } else {\r\n      return (\r\n        abrv.value.length == 0 ||\r\n        abrv.value.length < 3 ||\r\n        abrv.value.length > 7 ||\r\n        name.value.length == 0 ||\r\n        name.value.length > 60\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div id=\"addLecture\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Vorlesung hinzufügen</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Vorlesungsname</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Datenstrukturen und Algorithmen\"\r\n        minlength=\"3\"\r\n        required\r\n        #name=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(name, 60)\"\r\n        >{{ getLength(name) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"abrv\">Abkürzung</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"abrv\"\r\n        name=\"abrv\"\r\n        required\r\n        #abrv=\"ngModel\"\r\n        ngModel\r\n        placeholder=\"Dsal\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setCharIndicatorStyle(abrv, 7)\"\r\n        >{{ getLength(abrv) }}/7\r\n      </small>\r\n    </div>\r\n    <input\r\n      class=\"btn btn-primary mb-2\"\r\n      id=\"addBtn\"\r\n      type=\"submit\"\r\n      value=\"Hinzufügen\"\r\n      [disabled]=\"isDisabled(name, abrv)\"\r\n    />\r\n  </form>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnDestroy,\r\n  Pipe,\r\n  PipeTransform,\r\n} from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { parse, HtmlGenerator } from \"latex.js/dist/latex.js\";\r\n\r\n@Pipe({ name: \"safeHtml\" })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value) {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}\r\n@Component({\r\n  selector: \"app-card\",\r\n  templateUrl: \"./card.component.html\",\r\n  styleUrls: [\"./card.component.css\"],\r\n})\r\nexport class CardComponent implements OnInit, OnDestroy {\r\n  @Input() card: Card;\r\n  @ViewChild(\"test\", { static: true }) content;\r\n  subscriptions$: Subscription[] = [];\r\n\r\n  styleAppend = `<link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/css/katex.css\"><link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/css/article.css\"><script src=\"https://cdn.jsdelivr.net/npm/latex.js@0.12.1/dist/dist/js/base.js\"></script>`;\r\n  parsed: any = [];\r\n\r\n  constructor(private cs: CardsService) {}\r\n  public isCollapsed = true;\r\n  ngOnInit(): void {\r\n    let sub = this.cs.getActiveCardIndex().subscribe((change) => {\r\n      //hides te card content when carousel slides\r\n      this.content.hide();\r\n    });\r\n    if (this.card.latex != 0) {\r\n      this.parse(this.card.content);\r\n    } else {\r\n      this.parsed.push(this.card.content);\r\n    }\r\n    this.subscriptions$.push(sub);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  parse(cardContent: any) {\r\n    var latex = cardContent;\r\n    let generator = new HtmlGenerator({ hyphenate: false });\r\n    let doc = parse(latex, { generator: generator }).htmlDocument();\r\n    latex = this.styleAppend + doc.body.innerHTML;\r\n    this.parsed.push(latex);\r\n  }\r\n}\r\n","<div class=\"card\" id=\"`{{ card._id }}`\">\r\n  <div class=\"card-header\">\r\n    {{ card.thema }}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <button\r\n      mdbBtn\r\n      color=\"primary\"\r\n      class=\"btn btn-light\"\r\n      type=\"button\"\r\n      (click)=\"test.toggle()\"\r\n      mdbWavesEffect\r\n    >\r\n      Mehr dazu\r\n      <i class=\"fas fa-caret-down\"></i>\r\n    </button>\r\n    <div class=\"\" mdbCollapse #test>\r\n      <pre lang=\"de\">\r\n          <div  [innerHtml]=\"parsed[0] | safeHtml\"></div>\r\n      </pre>\r\n    </div>\r\n    <p *ngIf=\"card.authorName\" class=\"card-text\">\r\n      <small class=\"text-muted float-right\"\r\n        >Ersteller: {{ card.authorName }}</small\r\n      >\r\n    </p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Card } from \"src/app/models/Card\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-cards-overview\",\r\n  templateUrl: \"./cards-overview.component.html\",\r\n  styleUrls: [\"./cards-overview.component.css\"],\r\n})\r\nexport class CardsOverviewComponent implements OnInit {\r\n  subscriptions$: Subscription[] = [];\r\n  public cards: Card[] = [];\r\n  cards$: Observable<Card[]>;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cards$ = this.userService.getUserInfo().pipe(\r\n      map((info) => {\r\n        if (info) {\r\n          return info.cards;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","<div class=\"list-group\" *ngIf=\"cards$ | async as cards\">\r\n  <a *ngFor=\"let card of cards\" class=\"list-group-item list-group-item-action\">\r\n    <div class=\"d-flex w-100 justify-content-between\">\r\n      <h5 class=\"mb-1\">{{ card.thema }}</h5>\r\n      <small>{{ card.date | date: \"longDate\":\"de\" }}</small>\r\n    </div>\r\n    <p class=\"mb-1\">\r\n      {{ card.content }}\r\n    </p>\r\n  </a>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\n\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { UserService } from \"../../services/user.service\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { LecturesService } from \"src/app/services/lectures.service\";\r\n@Component({\r\n  selector: \"app-carousel\",\r\n  templateUrl: \"./carousel.component.html\",\r\n  styleUrls: [\"./carousel.component.css\"],\r\n})\r\nexport class CarouselComponent implements OnInit, OnDestroy {\r\n  @ViewChild(\"mycarousel\", { static: false }) public carousel: any;\r\n  @HostListener(\"swipeleft\", [\"$event\"]) public swipePrev(event: any) {\r\n    this.carousel.previousSlide();\r\n  }\r\n  @HostListener(\"swiperight\", [\"$event\"]) public swipeNext(event: any) {\r\n    this.carousel.nextSlide();\r\n  }\r\n  cards: Card[]; //array of all the cards\r\n  activeSlide: number;\r\n  lecture$: Observable<Vorlesung>;\r\n  addComponentHidden: boolean;\r\n  formShow: boolean;\r\n  formMode: string;\r\n  private userId: string;\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private lectureService: LecturesService,\r\n    private stateService: StatesService,\r\n    private cardsService: CardsService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activeSlide = 0;\r\n    let sub = this.userService\r\n      .getUserId()\r\n      .subscribe((userId) => (this.userId = userId));\r\n    this.subscriptions$.push(sub);\r\n    this.lecture$ = this.lectureService.getCurrentLecture();\r\n\r\n    sub = this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n    }); //load the specific cards from the server by subscribing to the observable that the card-service provides\r\n    this.subscriptions$.push(sub);\r\n    this.stateService.setFormMode(\"none\");\r\n    sub = this.stateService.getFormMode().subscribe((mode) => {\r\n      this.formShow = mode == \"add\";\r\n      this.formMode = mode;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n\r\n    sub = this.cardsService.getNewCardIndex().subscribe((index) => {\r\n      if (this.carousel) {\r\n        this.activeSlide = index;\r\n        this.carousel.selectSlide(index);\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  toggleAddView(): void {\r\n    if (this.formMode != \"edit\") {\r\n      if (this.formMode == \"add\") {\r\n        this.stateService.setFormMode(\"none\");\r\n      } else {\r\n        this.stateService.setFormMode(\"add\");\r\n      }\r\n    }\r\n  }\r\n  enableEdit() {\r\n    this.stateService.setFormMode(\"edit\");\r\n  }\r\n\r\n  setClass() {\r\n    return !this.formShow ? \"btn btn-light\" : \"btn btn-info\";\r\n  }\r\n\r\n  selectSlide(n: number) {\r\n    this.carousel.selectSlide(n.toString());\r\n  }\r\n  showRandomCard() {\r\n    var rand: number = this.activeSlide;\r\n    var count = 0;\r\n    while (count < 5 && rand == this.activeSlide) {\r\n      //calculate a new random index\r\n      count++;\r\n      rand = Math.floor(Math.random() * this.cards.length); //random Cardindex\r\n    }\r\n    this.carousel.selectSlide(rand.toString());\r\n  }\r\n  goToPrev() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.previousSlide();\r\n    }\r\n  }\r\n  goToNext() {\r\n    if (this.formMode != \"edit\") {\r\n      this.carousel.nextSlide();\r\n    }\r\n  }\r\n  onSlide(slideEvent) {\r\n    this.activeSlide = parseInt(slideEvent.relatedTarget);\r\n    this.cardsService.setActiveCardIndex(parseInt(slideEvent.relatedTarget));\r\n  }\r\n  isDisabled() {\r\n    if (this.formMode == \"edit\" || !this.cards || this.cards.length == 0) {\r\n      return true;\r\n    } else {\r\n      let currCard = this.cards[this.activeSlide]; //get the card that is currently showing\r\n\r\n      if (!currCard.authorId || currCard.authorId.length == 0) {\r\n        return false;\r\n      }\r\n      if (!this.userId || currCard.authorId !== this.userId) {\r\n        //there is an author an it is not the user\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<h1 id=\"vorlesung\">{{ (lecture$ | async)?.name }}</h1>\r\n<div class=\"btn-group\" id=\"btnDiv\" role=\"group\">\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"rand\"\r\n    placement=\"top\"\r\n    ngbTooltip=\"Zufall\"\r\n    (click)=\"showRandomCard()\"\r\n    [disabled]=\"formMode == 'edit' || !cards || cards.length == 0\"\r\n  >\r\n    <div class=\"fas fa-random\"></div>\r\n  </button>\r\n  <button\r\n    class=\"btn btn-light\"\r\n    id=\"editCard\"\r\n    type=\"button\"\r\n    placement=\"top\"\r\n    [disabled]=\"isDisabled()\"\r\n    (click)=\"enableEdit()\"\r\n    ngbTooltip=\"Bearbeiten\"\r\n  >\r\n    <div class=\"fas fa-pen\"></div>\r\n  </button>\r\n\r\n  <button\r\n    [ngClass]=\"setClass()\"\r\n    id=\"toggleAdd\"\r\n    type=\"button\"\r\n    data-toggle=\"button\"\r\n    (click)=\"toggleAddView()\"\r\n    placement=\"top\"\r\n    [ngbTooltip]=\"formMode == 'add' ? 'Verstecken' : 'Hinzufügen'\"\r\n    [disabled]=\"formMode == 'edit'\"\r\n  >\r\n    <div [class]=\"formMode == 'add' ? 'fas fa-minus' : 'fas fa-plus'\"></div>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"cards && cards.length > 0\" class=\"row\">\r\n  <a *ngIf=\"cards.length > 0\" (click)=\"goToPrev()\">\r\n    <span class=\"fas fa-chevron-left\"></span>\r\n  </a>\r\n  <div id=\"carousel\" (swipeleft)=\"goToPrev()\" (swiperight)=\"goToNext()\">\r\n    <mdb-carousel\r\n      (activeSlideChange)=\"onSlide($event)\"\r\n      #mycarousel\r\n      [(activeSlideIndex)]=\"activeSlide\"\r\n      [animation]=\"'slide'\"\r\n      [isControls]=\"false\"\r\n      [allowSwipe]=\"true\"\r\n      [interval]=\"'0'\"\r\n      ><ng-container *ngFor=\"let card of cards; index as i\">\r\n        <mdb-carousel-item [id]=\"i.toString()\">\r\n          <app-card [card]=\"card\"></app-card>\r\n        </mdb-carousel-item>\r\n      </ng-container>\r\n    </mdb-carousel>\r\n  </div>\r\n  <a *ngIf=\"cards.length > 0\" (click)=\"goToNext()\">\r\n    <span class=\"fas fa-chevron-right\"></span>\r\n  </a>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\n\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { UserInfo } from \"src/app/models/userInfo\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Subscription } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-change-profile\",\r\n  templateUrl: \"./change-profile.component.html\",\r\n  styleUrls: [\"./change-profile.component.css\"],\r\n})\r\nexport class ChangeProfileComponent implements OnInit, OnDestroy {\r\n  public userInfo: UserInfo;\r\n  subscriptions$: Subscription[] = [];\r\n  public user = new User(\"\", \"\");\r\n  fileToUpload: File = null;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user.name = \"\";\r\n    this.user.surname = \"\";\r\n    let sub = this.userService.getUserInfo().subscribe((info) => {\r\n      this.userInfo = info;\r\n      if (info && info.user) {\r\n        this.user = info.user;\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  changeAccount(form: NgForm) {\r\n    this.userService.updateAccount(form.value);\r\n  }\r\n  changePassword(form: NgForm) {\r\n    let sub = this.userService.updatePassword(form.value).subscribe((res) => {\r\n      form.reset();\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  handleFileInput(file: File) {\r\n    const formData: FormData = new FormData();\r\n    this.fileToUpload = file;\r\n    formData.append(\"fileKey\", this.fileToUpload);\r\n    this.userService.uploadFile(formData).subscribe((success) => {});\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  match(s1: string, s2: string) {\r\n    return s1 && s1.length > 7 && s1 === s2;\r\n  }\r\n  validate(form: NgForm) {\r\n    if (\r\n      this.checkEmail(form.value.email) &&\r\n      form.value.username &&\r\n      form.value.username.length >= 5\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","<h2>Profilbild ändern</h2>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-4 col-xs-12\">\r\n    <img src=\"assets/profile.svg\" alt=\"Profile picture\" />\r\n  </div>\r\n  <div class=\"col-sm-8 col-xs-12\">\r\n    <div class=\"input-group\">\r\n      <div class=\"custom-file\">\r\n        <form (change)=\"handleFileInput($event.target.files)\">\r\n          <input\r\n            type=\"file\"\r\n            class=\"custom-file-input\"\r\n            id=\"inputGroupFile01\"\r\n            aria-describedby=\"inputGroupFileAddon01\"\r\n          />\r\n        </form>\r\n        <label class=\"custom-file-label\" for=\"inputGroupFile01\"\r\n          >Choose file</label\r\n        >\r\n      </div>\r\n    </div>\r\n    <small class=\"form-text\">Die maximale Größe ist 200KB </small>\r\n  </div>\r\n</div>\r\n\r\n<hr />\r\n<h2>Accountdaten ändern</h2>\r\n<form #form=\"ngForm\" (ngSubmit)=\"changeAccount(form)\" novalidate>\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Vorname</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      aria-describedby=\"nameHelp\"\r\n      #name=\"ngModel\"\r\n      [(ngModel)]=\"user.name\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"surname\">Nachname</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      name=\"surname\"\r\n      id=\"surname\"\r\n      aria-describedby=\"surnameHelp\"\r\n      #surname=\"ngModel\"\r\n      [(ngModel)]=\"user.surname\"\r\n    />\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Benutzername</label>\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      id=\"username\"\r\n      name=\"username\"\r\n      required\r\n      maxlength=\"20\"\r\n      aria-describedby=\"nameHelp\"\r\n      #username=\"ngModel\"\r\n      [(ngModel)]=\"user.username\"\r\n    />\r\n    <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email Adresse</label>\r\n    <input\r\n      type=\"email\"\r\n      class=\"form-control\"\r\n      name=\"email\"\r\n      id=\"email\"\r\n      aria-describedby=\"emailHelp\"\r\n      required\r\n      #email=\"ngModel\"\r\n      [(ngModel)]=\"user.email\"\r\n    />\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!validate(form)\">\r\n    Aktualisieren\r\n  </button>\r\n</form>\r\n\r\n<hr />\r\n<h2>Passwort ändern</h2>\r\n<form #pwform=\"ngForm\" (ngSubmit)=\"changePassword(pwform)\" novalidate>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Neues Passwort</label>\r\n    <input\r\n      type=\"password\"\r\n      class=\"form-control\"\r\n      name=\"password\"\r\n      id=\"password\"\r\n      #password=\"ngModel\"\r\n      ngModel\r\n      minlength=\"7\"\r\n    />\r\n    <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password2\">Neues Passwort wiederholen</label>\r\n    <input\r\n      type=\"password\"\r\n      class=\"form-control\"\r\n      name=\"password2\"\r\n      id=\"password2\"\r\n      #password2=\"ngModel\"\r\n      ngModel\r\n      minlength=\"7\"\r\n      [style]=\"setStyle(password, password2)\"\r\n    />\r\n  </div>\r\n  <button\r\n    type=\"submit\"\r\n    class=\"btn btn-primary\"\r\n    [disabled]=\"!match(password.value, password2.value)\"\r\n  >\r\n    Ändern\r\n  </button>\r\n</form>\r\n","import { Component, OnInit, HostListener } from \"@angular/core\";\r\nimport {\r\n  fadeInOnEnterAnimation,\r\n  fadeOutOnLeaveAnimation,\r\n} from \"angular-animations\";\r\n\r\n@Component({\r\n  selector: \"app-footer\",\r\n  templateUrl: \"./footer.component.html\",\r\n  styleUrls: [\"./footer.component.css\"],\r\n  animations: [\r\n    fadeInOnEnterAnimation({ duration: 200 }),\r\n    fadeOutOnLeaveAnimation({ duration: 300 }),\r\n  ],\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  public pageOffset: number = 0;\r\n  constructor() {}\r\n  @HostListener(\"window:scroll\", [\"$event\"])\r\n  setOffset(event) {\r\n    this.pageOffset = window.pageYOffset;\r\n  }\r\n  backToTop() {\r\n    let scrollToTop = window.setInterval(() => {\r\n      let pos = window.pageYOffset;\r\n      if (pos > 0) {\r\n        window.scrollTo(0, pos - window.innerHeight * 0.05); // how far to scroll on each step\r\n      } else {\r\n        window.clearInterval(scrollToTop);\r\n      }\r\n    }, 16);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div\r\n  *ngIf=\"this.pageOffset > 50\"\r\n  [@fadeInOnEnter]\r\n  [@fadeOutOnLeave]\r\n  class=\"btn-div\"\r\n>\r\n  <button\r\n    id=\"up\"\r\n    mat-fab\r\n    (click)=\"backToTop()\"\r\n    aria-label=\"Example icon button with a delete icon\"\r\n  >\r\n    <div class=\"fas fa-arrow-up\"></div>\r\n  </button>\r\n</div>\r\n\r\n<footer class=\"footer\">\r\n  <ul class=\"list-group list-group-horizontal\">\r\n    <li class=\"list-group-item\">\r\n      <a routerLink=\"/about\"> Über uns </a>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      <a routerLink=\"/about\" fragment=\"FAQ\"> FAQ </a>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      <a href=\"https://git.rwth-aachen.de/jungerjunge2/cards\" target=\"_blank\"\r\n        >GitLab</a\r\n      >\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      v.0.3\r\n    </li>\r\n  </ul>\r\n</footer>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n} from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\n\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { LecturesService } from \"src/app/services/lectures.service\";\r\n@Component({\r\n  selector: \"app-lectures\",\r\n  templateUrl: \"./lectures.component.html\",\r\n  styleUrls: [\"./lectures.component.css\"],\r\n})\r\nexport class LecturesComponent implements OnInit, OnDestroy {\r\n  lectures$: Observable<Vorlesung[]>;\r\n\r\n  constructor(private lecture: LecturesService) {}\r\n  subscriptions$: Subscription[] = [];\r\n  ngOnInit(): void {\r\n    this.lectures$ = this.lecture.getAllLectures();\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  setLink(lecture: Vorlesung) {\r\n    return \"/vorlesung/\" + lecture.abrv;\r\n  }\r\n}\r\n","<ul class=\"list list-group\" *ngIf=\"lectures$ | async as lectures\">\r\n  <li class=\"list-group-item\" *ngFor=\"let lecture of lectures\">\r\n    <a [routerLink]=\"setLink(lecture)\">{{ lecture.name }}</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { UserService } from \"../../services/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-login-form\",\r\n  templateUrl: \"./login-form.component.html\",\r\n  styleUrls: [\"./login-form.component.css\"],\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n  constructor(private user: UserService, private router: Router) {}\r\n\r\n  public check = true;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.user.login(form.value);\r\n  }\r\n\r\n  isDisabled(username, password) {\r\n    if (!(username.value && password.value)) {\r\n      return true;\r\n    }\r\n    return username.value.length < 5 || password.value.length < 7;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        name=\"username\"\r\n        required\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group form-check\">\r\n      <input\r\n        required\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        id=\"remember\"\r\n        name=\"remember\"\r\n        #remember=\"ngModel\"\r\n        checked=\"true\"\r\n        ngModel\r\n      />\r\n      <label class=\"form-check-label\" for=\"remember\">Eingeloggt bleiben</label>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, password)\"\r\n    >\r\n      Login\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Router, NavigationEnd, NavigationStart } from \"@angular/router\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { NotificationsService } from \"../../services/notifications.service\";\r\n\r\nimport { StatesService } from \"src/app/services/states.service\";\r\nimport { Notification } from \"../../models/Notification\";\r\nimport { UserService } from \"../../services/user.service\";\r\nimport {\r\n  pulseOnEnterAnimation,\r\n  fadeOutOnLeaveAnimation,\r\n} from \"angular-animations\";\r\nimport { Subscription } from \"rxjs\";\r\n@Component({\r\n  selector: \"app-nav-bar\",\r\n  templateUrl: \"./nav-bar.component.html\",\r\n  styleUrls: [\"./nav-bar.component.css\"],\r\n  animations: [\r\n    pulseOnEnterAnimation({ scale: 1.05, duration: 500 }),\r\n    fadeOutOnLeaveAnimation({ duration: 200 }),\r\n  ],\r\n})\r\nexport class NavBarComponent implements OnInit, OnDestroy {\r\n  public loggedIn: boolean;\r\n  public cards: Card[];\r\n  public notifications: Notification[];\r\n  subscriptions$: Subscription[] = [];\r\n  public loading: boolean = false;\r\n  public constructor(\r\n    private router: Router,\r\n    private titleService: Title,\r\n\r\n    private cardsService: CardsService,\r\n    private statesService: StatesService,\r\n    private notification: NotificationsService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let cardsSub: Subscription;\r\n    this.setPageTitle();\r\n    let sub = this.userService\r\n      .authentication()\r\n      .subscribe((val) => (this.loggedIn = val));\r\n    this.subscriptions$.push(sub);\r\n    sub = this.statesService.getLoadingState().subscribe((val) => {\r\n      this.loading = val;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    this.router.events.subscribe((e) => {\r\n      if (e instanceof NavigationEnd) {\r\n        if (this.router.url.match(/vorlesung/)) {\r\n          cardsSub = this.cardsService.getCards().subscribe((cards) => {\r\n            this.cards = cards;\r\n          });\r\n        } else {\r\n          this.cards = null;\r\n          if (cardsSub) {\r\n            cardsSub.unsubscribe();\r\n          }\r\n        }\r\n        this.userService.clearAccountInfo();\r\n        //clear messages on route change\r\n        if (this.router.url == \"/\") {\r\n          this.notification.clearNotifications(\"alert\"); //prevent successfull login message from being removed on home\r\n        } else {\r\n          this.notification.clearNotifications(\"alert\", \"success\");\r\n        }\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    sub = this.notification\r\n      .getNotifications()\r\n      .subscribe((notifs) => (this.notifications = notifs));\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  closeAlert(i: number) {\r\n    this.notification.removeNotification(i);\r\n  }\r\n  isActive(path: string): string {\r\n    return path === this.router.url ? \"active\" : \"\";\r\n  }\r\n  setAlertClass(notif: Notification) {\r\n    return `alert alert-${notif.type} alert-dismissible fade show`;\r\n  }\r\n  setPageTitle(): void {\r\n    let currentTitle: string;\r\n    switch (this.router.url) {\r\n      case \"/login\":\r\n        currentTitle = \"Login\";\r\n        break;\r\n      case \"/signup\":\r\n        currentTitle = \"Sign Up\";\r\n        break;\r\n      case \"/\":\r\n        currentTitle = \"Home\";\r\n        break;\r\n      default:\r\n        currentTitle = \"Cards\";\r\n        if (this.router.url.match(/account/)) {\r\n          currentTitle = \"Account\";\r\n        }\r\n    }\r\n    this.titleService.setTitle(currentTitle);\r\n  }\r\n  logout() {\r\n    this.userService.logout();\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n  role=\"alert\"\r\n  style=\"padding-right: 0;\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col-8\">\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\" id=\"navlist\">\r\n          <li class=\"{{ isActive('/') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/\" tabindex=\"1\"\r\n              ><i class=\"fas fa-home\"></i> Vorlesungen</a\r\n            >\r\n          </li>\r\n\r\n          <li *ngIf=\"!loggedIn\" class=\"{{ isActive('/login') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\"\r\n              ><i class=\"fas fa-user\"></i> Login</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"!loggedIn\" class=\"{{ isActive('/signup') }} nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/signup\"\r\n              ><i class=\"fas fa-plus\"></i> Registrieren</a\r\n            >\r\n          </li>\r\n          <li *ngIf=\"loggedIn\" class=\"{{ isActive('/profile') }} nav-item\">\r\n            <div class=\"dropdown\">\r\n              <a\r\n                class=\"nav-link\"\r\n                type=\"button\"\r\n                id=\"dropdownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i class=\"fas fa-user-circle\"></i> Account\r\n              </a>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a\r\n                  class=\"dropdown-item\"\r\n                  routerLink=\"/account/overview\"\r\n                  placement=\"bottom\"\r\n                  >Account management</a\r\n                >\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">\r\n                  Logout\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"cards\" class=\"col-4\" style=\"padding-right: 0;\">\r\n      <app-search-bar></app-search-bar>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<div id=\"progress\">\r\n  <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n\r\n<div\r\n  #alert\r\n  *ngFor=\"let notif of notifications; index as i\"\r\n  [@pulseOnEnter]\r\n  [@fadeOutOnLeave]\r\n  [class]=\"setAlertClass(notif)\"\r\n  role=\"alert\"\r\n>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n    (click)=\"closeAlert(i)\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  {{ notif.message }}\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-notifications\",\r\n  templateUrl: \"./notifications.component.html\",\r\n  styleUrls: [\"./notifications.component.css\"],\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n  subscriptions$: Subscription[] = [];\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>\r\n  Hier werden später Benachrichtigungen über Bearbeitungsvorschläge und\r\n  Kommentare stehen\r\n</p>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { UserInfo } from \"../../models/userInfo\";\r\nimport { User } from \"src/app/models/User\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n@Component({\r\n  selector: \"app-overview\",\r\n  templateUrl: \"./overview.component.html\",\r\n  styleUrls: [\"./overview.component.css\"],\r\n})\r\nexport class OverviewComponent implements OnInit, OnDestroy {\r\n  public userInfo: UserInfo;\r\n  public user = new User(\"\", \"\");\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(private userService: UserService) {}\r\n  public user$: Observable<User>;\r\n  ngOnInit(): void {\r\n    this.user$ = this.userService.getUserInfo().pipe(\r\n      map((info) => {\r\n        if (info) return info.user;\r\n      })\r\n    );\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\" *ngIf=\"user$ | async as user\">\r\n  <div class=\"card-body\">\r\n    <h2 class=\"card-title\">\r\n      <img src=\"assets/profile.svg\" alt=\"Profile picture\" /> {{ user.username }}\r\n    </h2>\r\n  </div>\r\n  <ul class=\"list-group list-group-flush\">\r\n    <li class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Email\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.email }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li *ngIf=\"user.name\" class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Vorname\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.name }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li *ngIf=\"user.surname\" class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Nachname\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.surname }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n    <li *ngIf=\"user.creationDate\" class=\"list-group-item\">\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          Mitglied seit\r\n        </div>\r\n        <div class=\"col-6 text-right\">\r\n          {{ user.creationDate | date: \"longDate\":\"de\" }}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit, Input, OnDestroy } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n\r\nimport { Card } from \"../../models/Card\";\r\nimport { SearchSuggestion } from \"../../models/SearchSuggestion\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-search-bar\",\r\n  templateUrl: \"./search-bar.component.html\",\r\n  styleUrls: [\"./search-bar.component.css\"],\r\n})\r\nexport class SearchBarComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private stateService: StatesService\r\n  ) {}\r\n  subscriptions$: Subscription[] = [];\r\n  cards: Card[];\r\n  suggestions: SearchSuggestion[];\r\n  uInput: string;\r\n  clearSuggestions: boolean;\r\n\r\n  ngOnInit(): void {\r\n    let sub = this.stateService.getHideSuggestions().subscribe((value) => {\r\n      this.clearSuggestions = value;\r\n      if (value) {\r\n        this.suggestions = [];\r\n      }\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    sub = this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n      cards.forEach((card) => {\r\n        if (card.thema == null) {\r\n          card.thema = \"\";\r\n        }\r\n        if (card.content == null) {\r\n          card.content = \"\";\r\n        }\r\n      });\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  inField() {\r\n    this.stateService.setTyping(true);\r\n  }\r\n  resetNav() {\r\n    this.stateService.setTyping(false);\r\n  }\r\n  findMatches(e: Event) {\r\n    this.stateService.setHideSuggestions(false); //show suggestions\r\n    if (this.uInput && this.uInput.length > 2) {\r\n      this.suggestions = [];\r\n      const regex = new RegExp(`${this.uInput}`, \"gi\");\r\n\r\n      for (let i = 0; i < this.cards.length; i++) {\r\n        if (this.cards[i].thema.match(regex)) {\r\n          this.suggestions.push({ title: this.cards[i].thema, index: i });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  navigateTo(e: Event, index: number) {\r\n    e.preventDefault();\r\n    this.uInput = \"\";\r\n    this.cardsService.setNewCardIndex(index);\r\n    this.stateService.setHideSuggestions(true);\r\n  }\r\n}\r\n","<input\r\n  [(ngModel)]=\"uInput\"\r\n  (input)=\"findMatches($event)\"\r\n  class=\"form-control float-right\"\r\n  id=\"search\"\r\n  type=\"search\"\r\n  placeholder=\"Frage suchen\"\r\n  (focus)=\"inField()\"\r\n  (blur)=\"resetNav()\"\r\n/>\r\n<div *ngIf=\"suggestions\" id=\"matches\">\r\n  <ul class=\"list-group\">\r\n    <li *ngFor=\"let suggestion of suggestions\" class=\"list-group-item\">\r\n      <a href=\"#\" (click)=\"navigateTo($event, suggestion.index)\">{{\r\n        suggestion.title\r\n      }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\n@Component({\r\n  selector: \"app-signup-form\",\r\n  templateUrl: \"./signup-form.component.html\",\r\n  styleUrls: [\"./signup-form.component.css\"],\r\n})\r\nexport class SignupFormComponent implements OnInit {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n  errors;\r\n\r\n  ngOnInit(): void {}\r\n  submit(form: NgForm) {\r\n    this.userService.createAccount(form.value);\r\n  }\r\n  setStyle(password, password2) {\r\n    if (\r\n      password2.value &&\r\n      password2.value.length > 5 &&\r\n      password2.value != password.value\r\n    ) {\r\n      return \"box-shadow:0 0 3px #CC0000;\";\r\n    }\r\n    return \"\";\r\n  }\r\n  checkEmail(email) {\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  setCharIndicatorStyle(field, max: number) {\r\n    if (field.value) {\r\n      return {\r\n        color: field.value.length > max ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  isDisabled(username, email, password, password2) {\r\n    if (!(username.value && email.value && password.value)) {\r\n      return true;\r\n    }\r\n    return (\r\n      username.value.length < 5 ||\r\n      password.value.length < 7 ||\r\n      password.value != password2.value ||\r\n      !this.checkEmail(email.value)\r\n    );\r\n  }\r\n}\r\n","<div class=\"alert alert-warning\" *ngFor=\"let error of errors\">\r\n  {{ error }}\r\n</div>\r\n<div class=\"container\">\r\n  <form #form=\"ngForm\" (ngSubmit)=\"submit(form)\" novalidate>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Benutzername</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        required\r\n        maxlength=\"20\"\r\n        aria-describedby=\"nameHelp\"\r\n        #username=\"ngModel\"\r\n        ngModel\r\n      />\r\n      <small class=\"form-text\">Wenigstens 5 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email Adresse</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        aria-describedby=\"emailHelp\"\r\n        required\r\n        #email=\"ngModel\"\r\n        ngModel\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        #password=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n      />\r\n      <small class=\"form-text\">Wenigstens 7 Zeichen </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Passwort wiederholen</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password2\"\r\n        id=\"password2\"\r\n        #password2=\"ngModel\"\r\n        ngModel\r\n        minlength=\"7\"\r\n        [style]=\"setStyle(password, password2)\"\r\n      />\r\n      <small class=\"form-text\"> </small>\r\n    </div>\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary btn-lg btn-block\"\r\n      [disabled]=\"isDisabled(username, email, password, password2)\"\r\n    >\r\n      Account erstellen\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n\r\nimport { CardsService } from \"../../services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\n\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-update-card-form\",\r\n  templateUrl: \"./update-card-form.component.html\",\r\n  styleUrls: [\"./update-card-form.component.css\"],\r\n})\r\nexport class UpdateCardFormComponent implements OnInit, OnDestroy {\r\n  public cardCopy: Card;\r\n  private cards: Card[];\r\n  private cardIndex: number; //saves the cardindex which the user is currently updating\r\n  private activeCardIndex: number; //saves the active cardindex\r\n  subscriptions$: Subscription[] = [];\r\n  constructor(\r\n    private cardsService: CardsService,\r\n    private statesService: StatesService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    let sub = this.cardsService.getCards().subscribe((cards) => {\r\n      this.cards = cards;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n    sub = this.cardsService.getActiveCardIndex().subscribe((index) => {\r\n      this.activeCardIndex = index;\r\n      if (this.cards) {\r\n        this.cardCopy = { ...this.cards[this.activeCardIndex] };\r\n      }\r\n      this.cardIndex = this.activeCardIndex;\r\n    });\r\n    this.subscriptions$.push(sub);\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions$.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  inField() {\r\n    this.statesService.setTyping(true);\r\n  }\r\n  resetNav() {\r\n    this.statesService.setTyping(false);\r\n  }\r\n  onSubmit(f: NgForm) {\r\n    this.cardCopy.content = f.value.content;\r\n    this.cardCopy.thema = f.value.thema;\r\n    let sub = this.cardsService\r\n      .updateCard({ ...this.cardCopy }, this.cardIndex)\r\n      .subscribe((resp) => {\r\n        f.reset();\r\n        sub.unsubscribe();\r\n      });\r\n  }\r\n  cancelEdit() {\r\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: \"400px\",\r\n    });\r\n  }\r\n\r\n  //Function to set style of small character indicator\r\n  setThemaCharIndicatorStyle(thema) {\r\n    if (thema.value) {\r\n      return {\r\n        color:\r\n          (thema.value && thema.value.length > 0 && thema.value.length < 3) ||\r\n          thema.value.length > 60\r\n            ? \"#ff0000\"\r\n            : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n  //Function to set style of small character indicator\r\n  setContentCharIndicatorStyle(content) {\r\n    if (content.value) {\r\n      return {\r\n        color:\r\n          content.value && content.value.length > 400 ? \"#ff0000\" : \"#000000\",\r\n      };\r\n    } else {\r\n      return { color: \"#000000\" };\r\n    }\r\n  }\r\n\r\n  getLength(elem) {\r\n    if (elem.value) {\r\n      return elem.value.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  isDisabled(content, thema) {\r\n    if (!content.value || !thema.value) {\r\n      return true;\r\n    }\r\n    return (\r\n      content.value.length > 400 ||\r\n      (thema.value.length > 0 && thema.value.length < 3) ||\r\n      thema.value.length > 60\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"dialog-overview-example-dialog\",\r\n  templateUrl: \"dialog.html\",\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    private service: StatesService\r\n  ) {}\r\n\r\n  cancel() {\r\n    this.service.setFormMode(\"reset\");\r\n    this.service.setLoadingState(false);\r\n    this.dialogRef.close();\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"addCard\">\r\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate>\r\n    <h4>Karteikarte bearbeiten</h4>\r\n    <div class=\"form-group\">\r\n      <label for=\"thema\">Frage</label>\r\n      <input\r\n        class=\"form-control\"\r\n        id=\"thema\"\r\n        name=\"thema\"\r\n        type=\"text\"\r\n        placeholder=\"Thema\"\r\n        minlength=\"3\"\r\n        required\r\n        #thema=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.thema\"\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      />\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setThemaCharIndicatorStyle(thema)\"\r\n        >{{ getLength(thema) }}/60\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"content\">Antwort</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"content\"\r\n        name=\"content\"\r\n        rows=\"5\"\r\n        required\r\n        #content=\"ngModel\"\r\n        [(ngModel)]=\"cardCopy.content\"\r\n        (focus)=\"inField()\"\r\n        (blur)=\"resetNav()\"\r\n      ></textarea>\r\n      <small\r\n        class=\"form-text float-right\"\r\n        [ngStyle]=\"setContentCharIndicatorStyle(content)\"\r\n        >{{ getLength(content) }}/400\r\n      </small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        class=\"btn btn-success mb-2 mr-1\"\r\n        type=\"submit\"\r\n        value=\"Sichern\"\r\n        [disabled]=\"isDisabled(content, thema)\"\r\n      />\r\n      <input\r\n        class=\"btn btn-danger mb-2\"\r\n        type=\"button\"\r\n        value=\"Abbruch\"\r\n        (click)=\"cancelEdit()\"\r\n      />\r\n    </div>\r\n  </form>\r\n</div>\r\n","<h1 mat-dialog-title>Abbruch</h1>\r\n<div mat-dialog-content>\r\n  <p>Bist du sicher, dass du das Bearbeiten dieser Karte abbrechen möchtest?</p>\r\n</div>\r\n<hr />\r\n<div mat-dialog-actions style=\"text-align: right;\">\r\n  <button class=\"btn btn-secondary mr-2\" mat-button (click)=\"onNoClick()\">\r\n    Nein,zurück\r\n  </button>\r\n  <button class=\"btn btn-danger\" mat-button (click)=\"cancel()\">Ja</button>\r\n</div>\r\n","export class Card {\r\n  thema: string;\r\n  content: string;\r\n  abrv: string;\r\n  latex: number;\r\n\r\n  _id?: string;\r\n  authorId?: string;\r\n  authorName?: string;\r\n  date?: Date;\r\n\r\n  constructor(thema, content, abrv, latex) {\r\n    this.thema = thema;\r\n    this.content = content;\r\n    this.abrv = abrv;\r\n    latex = latex;\r\n  }\r\n}\r\n","export abstract class Notification {\r\n  type: string;\r\n  message: string;\r\n\r\n  constructor(t: string, m: string) {\r\n    this.type = t;\r\n    this.message = m;\r\n  }\r\n}\r\n\r\nexport class HttpError extends Notification {\r\n  code: number;\r\n  constructor(m: string, c?: number) {\r\n    super(\"warning\", m);\r\n    this.code = c;\r\n  }\r\n}\r\n\r\nexport class InfoMessage extends Notification {\r\n  constructor(m: string) {\r\n    super(\"info\", m);\r\n  }\r\n}\r\nexport class SuccessMessage extends Notification {\r\n  constructor(m: string) {\r\n    super(\"success\", m);\r\n  }\r\n}\r\n","export class User {\r\n  username: string;\r\n  email: string;\r\n  _id: string;\r\n  name: string;\r\n  surname: string;\r\n  creationDate?: Date;\r\n  constructor(name: string, email: string) {\r\n    this.username = name;\r\n    this.email = email;\r\n  }\r\n}\r\n","export class Vorlesung {\r\n  name: string;\r\n  abrv: string;\r\n  constructor(name, abrv) {\r\n    this.name = name;\r\n    this.abrv = abrv;\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-about\",\r\n  templateUrl: \"./about.component.html\",\r\n  styleUrls: [\"./about.component.css\"],\r\n})\r\nexport class AboutComponent implements OnInit {\r\n  public loggedIn: boolean;\r\n  constructor(private user: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user.authentication().subscribe((val) => {\r\n      this.loggedIn = val;\r\n    });\r\n  }\r\n}\r\n","<div class=\"media\">\r\n  <img src=\"assets/c.png\" class=\"align-self-center mr-1\" alt=\"Logo\" />\r\n  <div class=\"media-body\">\r\n    <h3>Cards</h3>\r\n  </div>\r\n</div>\r\n<p>\r\n  Cards ist eine Webseite, die dir dabei helfen soll dich auf deine Klausuren\r\n  und Prüfungen vorzubereiten. Das Konzept von Cards beruht auf den klassischen\r\n  Karteikarten. Anders als die klassischen Karteikarten brauchst du jedoch nicht\r\n  deinen Stapel an Karten überall mitzuschleppen. Unsere Webseite eignet sich\r\n  vor allem auch für Smartphones, somit kannst du dir deine Karteikarten auch\r\n  unterwegs anschauen. Sie richtet sich vor allem an Studenten.\r\n</p>\r\n<p *ngIf=\"!loggedIn\">\r\n  <a routerLink=\"/signup\">Erstelle einen Account</a>, um alle Vorteile unserer\r\n  Webseite zu nutzen.\r\n</p>\r\n<h4>Sharing is Caring</h4>\r\n<p>\r\n  Karteikarten, die du auf unserer Webseite hinzufügst, sind automatisch für\r\n  alle anderen Nutzer sichtbar. Andererseits kannst du dir auch Karten von\r\n  anderen Nutzern anschauen.Dies sorgt dafür, dass du optimal auf deine Klausur\r\n  vorbereitet bist. <br />\r\n  Wenn du mit einer Karte nicht zufrieden bist, oder du glaubst ihr Inhalt wäre\r\n  falsch oder unvollständig, kannst du sie bearbeiten. Karten, welche von\r\n  registrierten Nutzern erstellt worden sind, kannst du leider nicht bearbeiten.\r\n  In einer späteren Version wird es möglich sein für diese Karte einen\r\n  Verberungsvorschlag an den Ertseller der Karte zu senden.\r\n</p>\r\n<h4>Wir freuen uns über Feedback</h4>\r\n<p>\r\n  Wir bemühen uns, die Seite fehlerfrei zu gestalten. Trotzdem kann es sein,\r\n  dass sich der ein oder andere Fehler eingeschlichen hat. Diesen kannst du uns\r\n  gerne melden indem du\r\n  <a\r\n    href=\"https://git.rwth-aachen.de/jungerjunge2/cards/-/issues\"\r\n    target=\"_blank\"\r\n    >hier</a\r\n  >\r\n  ein Issue erstellst. Wir versuchen den Fehler, dann so schnell wie möglich zu\r\n  beheben. Du kannst uns dort auch gerne Feedback hinterlassen\r\n</p>\r\n\r\n<h3 id=\"FAQ\">FAQ</h3>\r\n<h4>Wo finde ich die Karteikarten zu meiner Vorlesung?</h4>\r\n<p>\r\n  Auf unserer <a routerLink=\"/\">Startseite</a> findest du eine Liste aller\r\n  Vorlesungen, für die bisher Karten hinzugefügt wurden. Wähle deine Vorlesung\r\n  aus. Falls du die Vorlesung nich in der Liste findest, dann kannst du sie\r\n  hinzufügen indem du das Formular ausfüllst und auf \"Hinzufügen\" drückst.\r\n  <br />\r\n  Nachdem du auf die Vorlesung gedrückt hast kommst du auf eine neue Seite, auf\r\n  der du dir alle Karteikarten, die zu der Vorlesung bereits hinzugefügt wurden,\r\n  anschauen. Nutze die Pfeiltasten oder wische horizontal über die Karte, um dir\r\n  weitere Karten anzuschauen. Du kannst den Inhalt der Karte aufklappen indem du\r\n  auf \"Mehr dazu\" drückst. <br />\r\n  Du kannst auch die Suchfunktion in der Navigationsleiste nutzen, um nach\r\n  bestimmten Karten zu suchen.\r\n</p>\r\n<h4>Wie erstelle ich eine Karte?</h4>\r\n<p>\r\n  Auf unserer <a routerLink=\"/\">Startseite</a> siehst du eine Liste von\r\n  Vorlesungen. Wähle die Vorlesung aus zu der du eine Karteikarte hinzufügen\r\n  möchtest. Falls deine Vorlesung nicht findest, kannst du sie über das Formular\r\n  hinzufügen. <br />\r\n  Nachdem du auf die Seite der Vorlesung navigiert bist kannst du eine neue\r\n  Karte hinzufügen indem du auf das <i class=\"fas fa-plus\"></i> Symbol unter der\r\n  Überschrift drückst. Nun kannst du deine Karteikarte hinzufügen indem du das\r\n  Formular ausfüllst und auf \"Hinzufügen\" drückst.\r\n  <span *ngIf=\"!loggedIn\">\r\n    Erstelle am Besten einen\r\n    <a routerLink=\"/signup\"> Account</a>, oder\r\n    <a routerLink=\"/login\">logge dich ein</a>, damit du Ertseller dieser Karte\r\n    wirst und nur du diese bearbeiten kannst.\r\n  </span>\r\n  Pro-Tip: du kannst auch mathematische Symbole schreiben indem du Latex Befehle\r\n  verwendest und diese mit $ Zeichen umhüllst. Mehr zu den Latex Befehlen\r\n  findest du\r\n  <a href=\"https://en.wikibooks.org/wiki/LaTeX/Mathematics\">hier</a>.\r\n</p>\r\n\r\n<h4>Wie bearbeite ich eine Karte?</h4>\r\n<p>\r\n  Wähle zuerst die Karteikarte aus die du bearbeiten möchtest. Drücke auf das\r\n  <i class=\"fas fa-pen\"></i> Symbol unter der Überschrift. Bearbeite deine Karte\r\n  im Formular und drücke auf \"Sichern\". Bitte beachte, dass du nur öffentliche\r\n  und deine eigenen Karten bearbeiten kannst. Karten, die von anderen\r\n  registrierten Nutzern erstellt worden sind kannst du leider nicht bearbeit. In\r\n  einer späteren Version wird es möglich sein für diese Karte einen\r\n  Verberungsvorschlag an den Ertseller der Karte zu senden.\r\n</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\n\r\n@Component({\r\n  selector: \"app-account-page\",\r\n  templateUrl: \"./account-page.component.html\",\r\n  styleUrls: [\"./account-page.component.css\"],\r\n})\r\nexport class AccountPageComponent implements OnInit {\r\n  public page: string;\r\n  public cardCount = 0;\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserInfo().subscribe((info) => {\r\n      if (info && info.cards) {\r\n        this.cardCount = info.cards.length;\r\n      } else {\r\n        this.cardCount = 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-4 col-xs-12\">\r\n    <div class=\"list-group\" id=\"list\">\r\n      <a\r\n        class=\"list-group-item list-group-item-action\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"overview\"\r\n      >\r\n        Übersicht\r\n      </a>\r\n      <a\r\n        class=\"list-group-item list-group-item-action\"\r\n        routerLinkActive=\"active\"\r\n        routerLink=\"manage\"\r\n      >\r\n        Profildaten ändern\r\n      </a>\r\n      <a\r\n        *ngIf=\"cardCount > 0\"\r\n        class=\"list-group-item list-group-item-action\"\r\n        routerLink=\"cards\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        Karteikarten\r\n      </a>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-md-8 col-xs-12\" id=\"sub\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { StatesService } from \"../../services/states.service\";\r\nimport { Vorlesung } from \"src/app/models/Vorlesung\";\r\nimport { CardsService } from \"src/app/services/cards.service\";\r\nimport { Card } from \"../../models/Card\";\r\nimport { Title } from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  selector: \"app-cards-page\",\r\n  templateUrl: \"./cards-page.component.html\",\r\n  styleUrls: [\"./cards-page.component.css\"],\r\n})\r\nexport class CardsPageComponent implements OnInit {\r\n  public vlAbrv: string;\r\n  public lecture: Vorlesung;\r\n  public loading: boolean = true;\r\n  public formMode: string = \"none\";\r\n  public cards: Card[];\r\n\r\n  private inTypingField: boolean;\r\n  @ViewChild(\"alert\", { static: false }) alert: ElementRef;\r\n\r\n  @HostListener(\"click\", [\"$event.target\"])\r\n  onClick() {\r\n    this.stateServie.setHideSuggestions(true);\r\n  }\r\n  @HostListener(\"window:keyup\", [\"$event\"])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (!this.inTypingField) {\r\n      if (event.key == \"ArrowRight\") {\r\n        this.cardsService.goNext();\r\n      } else if (event.key == \"ArrowLeft\") {\r\n        this.cardsService.goPrev();\r\n      }\r\n    }\r\n  }\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private stateServie: StatesService,\r\n    private cardsService: CardsService,\r\n\r\n    private title: Title\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.title.setTitle(\"Cards\");\r\n    this.vlAbrv = this.route.snapshot.paramMap.get(\"abrv\");\r\n    this.cardsService.getCards().subscribe((cards) => {\r\n      if (cards.length == 0) {\r\n        this.stateServie.setFormMode(\"add\");\r\n      }\r\n    });\r\n    this.stateServie.getTyping().subscribe((val) => (this.inTypingField = val));\r\n    this.stateServie\r\n      .getLoadingState()\r\n      .subscribe((value) => (this.loading = value));\r\n    this.stateServie.getFormMode().subscribe((mode) => (this.formMode = mode));\r\n  }\r\n\r\n  setLoading(loading: boolean): void {\r\n    this.loading = loading;\r\n    this.stateServie.setLoadingState(loading);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <app-carousel></app-carousel>\r\n  <br />\r\n  <app-add-card-form *ngIf=\"formMode == 'add'\"></app-add-card-form>\r\n  <app-update-card-form *ngIf=\"formMode == 'edit'\"></app-update-card-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Whoops, diese Seite existiert nicht</h2>\r\n<a routerLink=\"/\">Home</a>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Vorlesung } from \"../../models/Vorlesung\";\r\nimport { StatesService } from \"../../services/states.service\";\r\n\r\n@Component({\r\n  selector: \"app-home-page\",\r\n  templateUrl: \"./home-page.component.html\",\r\n  styleUrls: [\"./home-page.component.css\"],\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  constructor(private statesService: StatesService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<app-lectures></app-lectures>\r\n<br />\r\n<app-add-lecture-form></app-add-lecture-form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-login-form></app-login-form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-signup-form></app-signup-form>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { Card } from \"../models/Card\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpConfig } from \"./config\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { NotificationsService } from \"./notifications.service\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CardsService {\r\n  //contains lecture abreviation of the current lecutre\r\n  private abrv: string;\r\n  //loads cards once from the server and whenever lecture changes\r\n  //and provides them as an Observable\r\n  private cards$: BehaviorSubject<Card[]> = new BehaviorSubject<Card[]>([]);\r\n  //provides a Subject to set a new index on which card the carousel should show\r\n  private newCardIndex$: BehaviorSubject<number> = new BehaviorSubject<number>(\r\n    0\r\n  );\r\n  //provides a Subject of the index of the card that is currently shown\r\n  //only the carousel shoul set nex values for this subject\r\n  private activeCardIndex$: BehaviorSubject<number> = new BehaviorSubject<\r\n    number\r\n  >(0);\r\n\r\n  private config = new HttpConfig();\r\n  constructor(\r\n    private notifications: NotificationsService,\r\n    private http: HttpClient, //to make calls to the server\r\n    private statesService: StatesService, //for setting the loading state\r\n    private router: Router //used to get the lecture abreviation from the route\r\n  ) {}\r\n\r\n  getCards(): Observable<Card[]> {\r\n    this.statesService.setLoadingState(true);\r\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the lecture abreviation from the route\r\n    if (this.abrv === abrv) {\r\n      //cards were already loaded for this lecture\r\n      this.statesService.setLoadingState(false);\r\n      return this.cards$.asObservable();\r\n    } else {\r\n      this.abrv = abrv;\r\n      //remove the old cards before fetching the new ones\r\n      this.cards$.next([]);\r\n      //make server request\r\n      this.http\r\n        .get<Card[]>(this.config.urlBase + \"cards/?abrv=\" + abrv, {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe(\r\n          (response) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.cards$.next(response.body);\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        );\r\n      return this.cards$.asObservable();\r\n    }\r\n  }\r\n\r\n  updateCard(card: Card, index: number): Observable<any> {\r\n    this.statesService.setLoadingState(true);\r\n    //send update to server using http service\r\n    return this.http\r\n      .put<any>(\r\n        this.config.urlBase + \"cards/update\",\r\n        { card: card },\r\n        {\r\n          headers: this.config.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (resp) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.statesService.setFormMode(\"reset\"); //reset form to its previous state\r\n            //update subject\r\n            let cards = this.cards$.getValue();\r\n            cards[index] = card;\r\n            this.cards$.next(cards);\r\n            setTimeout(() => {\r\n              //show new card timeout needed because the carousel needs time to refresh\r\n              //its view\r\n              this.setNewCardIndex(index);\r\n            }, 100);\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  addCard(card: Card): Observable<any> {\r\n    this.statesService.setLoadingState(true);\r\n    //send new card to server using http service\r\n    return this.http\r\n      .post<any>(\r\n        this.config.urlBase + \"cards/new\",\r\n        { card: card },\r\n        {\r\n          headers: this.config.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (response) => {\r\n            this.statesService.setLoadingState(false);\r\n            card._id = response.body.id; //set id received from server response\r\n            //upate subject\r\n            let cards = this.cards$.getValue();\r\n            cards.push(card);\r\n            this.cards$.next(cards);\r\n\r\n            setTimeout(() => {\r\n              //show new card timeout needed because the carousel needs time to refresh\r\n              //its view\r\n              this.setNewCardIndex(cards.length - 1);\r\n            }, 100);\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        ),\r\n        map((res) => res.body)\r\n      );\r\n  }\r\n  goNext() {\r\n    //show the next slide index\r\n    let index = this.newCardIndex$.getValue();\r\n    index++;\r\n    if (index >= this.cards$.getValue().length) {\r\n      index = 0;\r\n    }\r\n    this.newCardIndex$.next(index);\r\n  }\r\n  goPrev() {\r\n    //show the next slide index\r\n    let index = this.newCardIndex$.getValue();\r\n    index--;\r\n    if (index < 0) {\r\n      index = this.cards$.getValue().length - 1;\r\n    }\r\n    this.newCardIndex$.next(index);\r\n  }\r\n  //only the carousel should be subscribed to this\r\n  getNewCardIndex(): Observable<number> {\r\n    return this.newCardIndex$.asObservable();\r\n  }\r\n  //use this function to tell the carousel to go to a specific slide i\r\n  setNewCardIndex(i: number) {\r\n    this.newCardIndex$.next(i);\r\n  }\r\n  //only the carousel should call this method (on the sliding event)\r\n  setActiveCardIndex(i: number) {\r\n    this.activeCardIndex$.next(i);\r\n  }\r\n  //subsribe to this function to always get the index of the card that is currently shown\r\n  getActiveCardIndex(): Observable<number> {\r\n    return this.activeCardIndex$.asObservable();\r\n  }\r\n}\r\n","import { HttpHeaders } from \"@angular/common/http\";\r\n\r\nexport class HttpConfig {\r\n  urlBase: string = \"api/\";\r\n  headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\r\n  fileHeaders = new Headers(); //configure headers for file upload here\r\n  constructor() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { NotificationsService } from \"./notifications.service\";\r\nimport { Router } from \"@angular/router\";\r\n//Models\r\nimport { Vorlesung } from \"../models/Vorlesung\";\r\nimport { HttpError } from \"../models/Notification\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LecturesService {\r\n  private urlBase: string = \"api/\"; //url  base on which to adress the server with\r\n\r\n  private lecture$: BehaviorSubject<Vorlesung> = new BehaviorSubject<Vorlesung>(\r\n    new Vorlesung(\"\", \"\")\r\n  ); //holds the current lecture\r\n  private lectures$: BehaviorSubject<Vorlesung[]>; //holds all lectures\r\n\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(\r\n    private notifications: NotificationsService,\r\n    private http: HttpClient, //for sending http requests\r\n    private statesService: StatesService, //set the loading state\r\n    private router: Router //to get info in the current url\r\n  ) {}\r\n\r\n  //get an array of all lectures\r\n  getAllLectures(): Observable<Vorlesung[]> {\r\n    this.statesService.setLoadingState(true);\r\n    if (this.lectures$) {\r\n      //lectures were already loaded once\r\n      this.statesService.setLoadingState(false);\r\n      return this.lectures$.asObservable();\r\n    } else {\r\n      //load lectures from the server\r\n      return this.http\r\n        .get<Vorlesung[]>(this.urlBase + \"lectures\", {\r\n          observe: \"response\",\r\n        })\r\n        .pipe(\r\n          tap(\r\n            (res) => {\r\n              this.statesService.setLoadingState(false);\r\n              this.lectures$ = new BehaviorSubject<Vorlesung[]>(res.body); //set the lectures subject\r\n            },\r\n            (error) => {\r\n              this.addErrors(error);\r\n              this.statesService.setLoadingState(false);\r\n            }\r\n          ),\r\n          map((res) => res.body)\r\n        );\r\n    }\r\n  }\r\n\r\n  //get the Current lecture\r\n  getCurrentLecture(): Observable<Vorlesung> {\r\n    let abrv = this.router.url.split(/vorlesung\\//)[1]; //get the abreviation of the lecture from the url\r\n    if (this.lecture$.getValue().abrv == abrv) {\r\n      //the lecture was already loaded\r\n      return this.lecture$.asObservable();\r\n    } else {\r\n      //fetch the lecture from the server\r\n      this.http\r\n        .get<Vorlesung>(this.urlBase + \"lectures/find?abrv=\" + abrv, {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe(\r\n          (res) => {\r\n            this.lecture$.next(res.body);\r\n          },\r\n          (error) => {\r\n            this.addErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        );\r\n      return this.lecture$.asObservable();\r\n    }\r\n  }\r\n\r\n  //add a lecture to the database on the server\r\n  addLecture(lecture: Vorlesung): Observable<HttpResponse<any>> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .post<any>(\r\n        this.urlBase + \"lectures/new\",\r\n        { lecture: lecture },\r\n        {\r\n          headers: this.httpOptions.headers,\r\n          observe: \"response\",\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(\r\n          (res) => {\r\n            //add the new lecture to the lectures subject\r\n            this.statesService.setLoadingState(false);\r\n            let lectures = this.lectures$.getValue();\r\n            lectures.push(lecture);\r\n            this.lectures$.next(lectures);\r\n          },\r\n          (error) => {\r\n            this.addErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  //because errors suck and we dont have a unified error handling system in the backend\r\n\r\n  addErrors(error) {\r\n    let err = error.error;\r\n    console.log(error);\r\n    if (error.status == 400) {\r\n      this.notifications.addNotification(\r\n        new HttpError(\"Bitte logge dich erst ein.\", error.status)\r\n      );\r\n      this.router.navigateByUrl(\"/login\");\r\n    } else if (error.status == 422) {\r\n      if (typeof err == \"string\") {\r\n        this.notifications.addNotification(new HttpError(err, error.status));\r\n      } else if (typeof err == \"object\") {\r\n        this.notifications.addNotification(\r\n          new HttpError(\r\n            \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n            error.status\r\n          )\r\n        );\r\n        console.log(err);\r\n      } else {\r\n        for (const e of err) {\r\n          this.notifications.addNotification(new HttpError(e, error.status));\r\n        }\r\n      }\r\n    } else if (error.status >= 500) {\r\n      this.notifications.addNotification(\r\n        new HttpError(\r\n          \"Der Server scheint offline zu sein. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    } else {\r\n      this.notifications.addNotification(\r\n        new HttpError(\r\n          \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { Notification, HttpError, InfoMessage } from \"../models/Notification\";\r\nimport { Router } from \"@angular/router\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class NotificationsService {\r\n  private notifications$ = new BehaviorSubject<Notification[]>([]);\r\n  constructor(private router: Router) {}\r\n\r\n  addNotification(n: Notification) {\r\n    let notifications = this.notifications$.getValue();\r\n    notifications.push(n);\r\n  }\r\n\r\n  //removes a specific error from the error array\r\n  removeNotification(index: number) {\r\n    let notifications = this.notifications$.getValue();\r\n    notifications.splice(index, 1); //remove error at position index\r\n    this.notifications$.next(notifications);\r\n  }\r\n  clearNotifications(...types: string[]) {\r\n    let notifs = this.notifications$.getValue();\r\n    types.forEach((type) => {\r\n      for (let i = 0; i < notifs.length; i++) {\r\n        if (notifs[i].type === type) {\r\n          this.removeNotification(i);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.notifications$.next(notifs);\r\n  }\r\n  removeLoginInfo() {\r\n    let notifs = this.notifications$.getValue();\r\n    for (let i = 0; i < notifs.length; i++) {\r\n      if (notifs[i] instanceof InfoMessage) {\r\n        //only check if notif is of type InfoMessage as LoginInfo is the only info message for now\r\n        this.removeNotification(i);\r\n      }\r\n    }\r\n  }\r\n  getNotifications(): Observable<Notification[]> {\r\n    return this.notifications$.asObservable();\r\n  }\r\n\r\n  //because errors suck and we dont have a unified error handling system in the backend\r\n  handleErrors(error) {\r\n    let err = error.error;\r\n    console.log(error);\r\n    if (error.status == 400) {\r\n      this.addNotification(\r\n        new InfoMessage(\"Du musst dich einloggen, um diese Seite zu besuchen\")\r\n      );\r\n    } else if (error.status == 422) {\r\n      if (typeof err == \"string\") {\r\n        this.addNotification(new HttpError(err, error.status));\r\n      } else if (typeof err == \"object\") {\r\n        this.addNotification(\r\n          new HttpError(\r\n            \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n            error.status\r\n          )\r\n        );\r\n        console.log(err);\r\n      } else {\r\n        for (const e of err) {\r\n          this.addNotification(new HttpError(e, error.status));\r\n        }\r\n      }\r\n    } else if (error.status >= 500) {\r\n      this.addNotification(\r\n        new HttpError(\r\n          \"Der Server scheint offline zu sein. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    } else {\r\n      this.addNotification(\r\n        new HttpError(\r\n          \"Ein unbekannter Fehler ist aufgetreten. Versuche es später erneut.\",\r\n          error.status\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n","//This service is made to manage states across components\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class StatesService {\r\n  private formMode$: BehaviorSubject<string> = new BehaviorSubject(\"none\");\r\n  private lastFormMode: string;\r\n  private loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  private hideSgtn$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  private typing$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  constructor() {}\r\n\r\n  getFormMode(): Observable<string> {\r\n    return this.formMode$.asObservable();\r\n  }\r\n  setFormMode(mode: string): void {\r\n    if (mode == \"reset\") {\r\n      if (!this.lastFormMode) {\r\n        //last form mode is undefined\r\n        this.lastFormMode = \"none\";\r\n      } // last Form mode defined\r\n      this.formMode$.next(this.lastFormMode);\r\n    } else {\r\n      this.formMode$.next(mode);\r\n      if (mode != \"edit\") this.lastFormMode = mode;\r\n    }\r\n  }\r\n  setTyping(val: boolean) {\r\n    this.typing$.next(val);\r\n  }\r\n  getTyping(): Observable<boolean> {\r\n    return this.typing$.asObservable();\r\n  }\r\n  getLoadingState(): BehaviorSubject<boolean> {\r\n    return this.loading$;\r\n  }\r\n  setLoadingState(value: boolean) {\r\n    this.loading$.next(value);\r\n  }\r\n  setHideSuggestions(value: boolean) {\r\n    this.hideSgtn$.next(value);\r\n  }\r\n  getHideSuggestions(): Observable<boolean> {\r\n    return this.hideSgtn$.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { UserInfo } from \"../models/userInfo\";\r\nimport { Observable, BehaviorSubject, of } from \"rxjs\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { tap, map } from \"rxjs/operators\";\r\nimport { InfoMessage, HttpError, SuccessMessage } from \"../models/Notification\";\r\nimport { NotificationsService } from \"./notifications.service\";\r\nimport { HttpConfig } from \"./config\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { StatesService } from \"./states.service\";\r\nimport { User } from \"../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService implements CanActivate {\r\n  private userId$ = new BehaviorSubject<string>(null); //subject which stores the userid\r\n  private accountInfo$: BehaviorSubject<UserInfo>; //stores account info of the user\r\n  private loggedIn: BehaviorSubject<boolean>;\r\n  private config = new HttpConfig();\r\n\r\n  constructor(\r\n    private http: HttpClient, //for sending http requests\r\n    private statesService: StatesService, //to set the loadingstate\r\n    private router: Router, //to redirect\r\n    private notifications: NotificationsService //to show notifications\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .get<boolean>(this.config.urlBase + \"/user/auth\", {\r\n        observe: \"response\",\r\n      })\r\n      .pipe(\r\n        tap(\r\n          (res) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.setLogin(res.body);\r\n            if (res.body === false) {\r\n              this.notifications.addNotification(\r\n                new InfoMessage(\r\n                  \"Du musst dich einloggen, um diese Seite zu besuchen\"\r\n                )\r\n              );\r\n              this.setUser(null);\r\n              this.router.navigate([\"login\"]);\r\n            }\r\n          },\r\n          (err) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.setLogin(false);\r\n            this.notifications.handleErrors(err);\r\n            this.setUser(null);\r\n            this.router.navigateByUrl(\"/\");\r\n          }\r\n        ),\r\n        map((res) => res.body)\r\n      );\r\n  }\r\n  //used to login the user\r\n  login(form) {\r\n    this.statesService.setLoadingState(true);\r\n    this.http\r\n      .post<User>(this.config.urlBase + \"login\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.statesService.setLoadingState(false);\r\n          this.setUser(res.body._id);\r\n          this.notifications.removeLoginInfo();\r\n          this.notifications.addNotification(\r\n            new SuccessMessage(`Herzlich willkommen ${res.body.username}`)\r\n          );\r\n\r\n          this.router.navigateByUrl(\"/\");\r\n        },\r\n        (error) => {\r\n          this.notifications.handleErrors(error);\r\n          this.setUser(null);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n  createAccount(form) {\r\n    this.http\r\n      .post<User>(this.config.urlBase + \"user/new\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.setUser(res.body._id);\r\n          this.statesService.setLoadingState(false);\r\n          this.router.navigate([\"/\"]);\r\n        },\r\n        (error) => {\r\n          this.notifications.handleErrors(error);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n  authentication(): Observable<boolean> {\r\n    if (!this.loggedIn) {\r\n      this.loggedIn = new BehaviorSubject<boolean>(false);\r\n      this.http\r\n        .get<boolean>(this.config.urlBase + \"/user/auth\", {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe((res) => {\r\n          this.loggedIn.next(res.body);\r\n        });\r\n    }\r\n    return this.loggedIn.asObservable();\r\n  }\r\n  getUserId(): Observable<string> {\r\n    if (this.userId$.getValue()) {\r\n      return this.userId$.asObservable();\r\n    } else {\r\n      return this.http\r\n        .get<string>(this.config.urlBase + \"user/id\", { observe: \"response\" })\r\n        .pipe(\r\n          tap((res) => {\r\n            this.setUser(res.body);\r\n          }),\r\n          map((res) => res.body)\r\n        );\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.statesService.setLoadingState(true);\r\n    this.http\r\n      .get<any>(this.config.urlBase + \"user/logout\", { observe: \"response\" })\r\n      .subscribe(\r\n        (res) => {\r\n          this.statesService.setLoadingState(false);\r\n          this.setUser(null);\r\n          this.setLogin(false);\r\n          this.notifications.addNotification(\r\n            new SuccessMessage(\"Erfolgreich abgemeldet\")\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setUser(null);\r\n          this.setLogin(false);\r\n          this.notifications.handleErrors(error);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserInfo(): Observable<UserInfo> {\r\n    if (this.accountInfo$ && this.accountInfo$.getValue()) {\r\n      return this.accountInfo$.asObservable();\r\n    } else {\r\n      this.statesService.setLoadingState(true);\r\n      if (!this.accountInfo$) {\r\n        this.accountInfo$ = new BehaviorSubject<UserInfo>(null);\r\n      }\r\n      this.http\r\n        .get<UserInfo>(this.config.urlBase + \"user/info\", {\r\n          observe: \"response\",\r\n        })\r\n        .subscribe(\r\n          (res) => {\r\n            this.statesService.setLoadingState(false);\r\n            for (const card of res.body.cards) {\r\n              card.date = new Date(card.date);\r\n            }\r\n            if (res.body.user && res.body.user.creationDate) {\r\n              res.body.user.creationDate = new Date(res.body.user.creationDate);\r\n            }\r\n            this.setUser(res.body.user._id);\r\n            this.accountInfo$.next(res.body);\r\n          },\r\n          (error) => {\r\n            this.router.navigateByUrl(\"/login\");\r\n            this.statesService.setLoadingState(false);\r\n            this.notifications.handleErrors(error);\r\n          }\r\n        );\r\n      return this.accountInfo$.asObservable();\r\n    }\r\n  }\r\n  clearAccountInfo() {\r\n    if (this.accountInfo$ && !this.router.url.match(/account/)) {\r\n      this.accountInfo$.next(null);\r\n    }\r\n  }\r\n  uploadFile(file: FormData): Observable<boolean> {\r\n    console.log(file);\r\n    //this.statesService.setLoadingState(true);\r\n    // return this.http\r\n    //   .post<boolean>(this.config.urlBase + \"user/pic\", file, {\r\n    //     observe: \"response\",\r\n    //   })\r\n    //   .pipe(\r\n    //     tap(\r\n    //       (res) => {\r\n    //         this.statesService.setLoadingState(false);\r\n    //         this.notifications.addNotification(\r\n    //           new SuccessMessage(\"Profilbild wurde erfolgreich geändert\")\r\n    //         );\r\n    //       },\r\n    //       (error) => {\r\n    //         this.statesService.setLoadingState(false);\r\n    //         console.log(error);\r\n    //       }\r\n    //     ),\r\n    //     map((res) => res.body)\r\n    //   );\r\n    return of(true);\r\n  }\r\n  updateAccount(form) {\r\n    this.statesService.setLoadingState(true);\r\n    this.http\r\n      .put<any>(this.config.urlBase + \"user/updateAccount\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .subscribe(\r\n        (res) => {\r\n          this.statesService.setLoadingState(false);\r\n\r\n          let info = this.accountInfo$.getValue();\r\n          info.user = form;\r\n          this.accountInfo$.next(info);\r\n          this.notifications.addNotification(\r\n            new SuccessMessage(\r\n              \"Deine Informationen wurden erfolgreich aktualisiert\"\r\n            )\r\n          );\r\n        },\r\n        (error) => {\r\n          this.notifications.handleErrors(error);\r\n          this.statesService.setLoadingState(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  updatePassword(form) {\r\n    this.statesService.setLoadingState(true);\r\n    return this.http\r\n      .put<any>(this.config.urlBase + \"user/updatePassword\", form, {\r\n        headers: this.config.headers,\r\n        observe: \"response\",\r\n      })\r\n      .pipe(\r\n        tap(\r\n          (res) => {\r\n            this.statesService.setLoadingState(false);\r\n            this.notifications.addNotification(\r\n              new SuccessMessage(\"Dein Passwort wurde erfolgreich aktualisiert\")\r\n            );\r\n          },\r\n          (error) => {\r\n            this.notifications.handleErrors(error);\r\n            this.statesService.setLoadingState(false);\r\n          }\r\n        )\r\n      );\r\n  }\r\n\r\n  deleteAccount() {\r\n    console.log(\"not yet implemented\");\r\n  }\r\n\r\n  private setUser(id: string) {\r\n    this.userId$.next(id);\r\n    if (id) {\r\n      this.setLogin(true);\r\n    }\r\n  }\r\n  private setLogin(val: boolean) {\r\n    if (this.loggedIn) {\r\n      this.loggedIn.next(val);\r\n    } else {\r\n      this.loggedIn = new BehaviorSubject<boolean>(val);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport \"hammerjs\";\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"sourceRoot":"webpack:///"}