datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  username   String    @unique
  email      String    @unique
  firebaseId String    @unique
  firstname  String?
  lastname   String?
  status     String
  confirmed  Boolean
  lectures   Lecture[]
  cards      Card[]
  votes      Vote[]
}

model Lecture {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  abrv       String
  tagList    String[]
  totalCards Int?
  cards      Card[]
  votes      Vote[]
  User       User     @relation(fields: [userId], references: [id])
  userId     String
}

model Card {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lecture   Lecture   @relation(fields: [lectureId], references: [id])
  lectureId String
  thema     String
  content   String
  tags      String[]
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  date      DateTime?
  latex     Int?
  rating    Int?
  votes     Vote[]
}

model Vote {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  card      Card     @relation(fields: [cardId], references: [id])
  cardId    String
  value     Int
  lecture   Lecture  @relation(fields: [lectureId], references: [id])
  lectureId String

  @@unique(fields: [userId, cardId])
}
